{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/auth/AuthGuardService.ts","./src/app/auth/AuthService.ts","./src/app/auth/auth-interceptor.service.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/sidebar/sidebar.component.html","./src/app/components/sidebar/sidebar.component.ts","./src/app/dialogs/add-customer/add-customer.component.html","./src/app/dialogs/add-customer/add-customer.component.ts","./src/app/dialogs/add-incoming-shipment/add-incoming-shipment.component.html","./src/app/dialogs/add-incoming-shipment/add-incoming-shipment.component.ts","./src/app/dialogs/add-order-dialog/add-order-dialog.component.html","./src/app/dialogs/add-order-dialog/add-order-dialog.component.ts","./src/app/dialogs/add-outgoing-shipment/add-outgoing-shipment.component.html","./src/app/dialogs/add-outgoing-shipment/add-outgoing-shipment.component.ts","./src/app/dialogs/add-product-dialog/add-product-dialog.component.html","./src/app/dialogs/add-product-dialog/add-product-dialog.component.ts","./src/app/dialogs/add-product-set-dialog/add-product-set-dialog.component.html","./src/app/dialogs/add-product-set-dialog/add-product-set-dialog.component.ts","./src/app/dialogs/add-user-dialog/add-user-dialog.component.html","./src/app/dialogs/add-user-dialog/add-user-dialog.component.ts","./src/app/dialogs/arrival-order-dialog/arrival-order-dialog.component.html","./src/app/dialogs/arrival-order-dialog/arrival-order-dialog.component.ts","./src/app/dialogs/delete-confirmation-dialog/delete-confirmation-dialog.component.html","./src/app/dialogs/delete-confirmation-dialog/delete-confirmation-dialog.component.ts","./src/app/dialogs/edit-customer-dialog/edit-customer-dialog.component.html","./src/app/dialogs/edit-customer-dialog/edit-customer-dialog.component.ts","./src/app/dialogs/edit-incoming-shipment/edit-incoming-shipment.component.html","./src/app/dialogs/edit-incoming-shipment/edit-incoming-shipment.component.ts","./src/app/dialogs/edit-order-dialog/edit-order-dialog.component.html","./src/app/dialogs/edit-order-dialog/edit-order-dialog.component.ts","./src/app/dialogs/edit-outgoing-shipment/edit-outgoing-shipment.component.html","./src/app/dialogs/edit-outgoing-shipment/edit-outgoing-shipment.component.ts","./src/app/dialogs/edit-product-set-dialog/edit-product-set-dialog.component.html","./src/app/dialogs/edit-product-set-dialog/edit-product-set-dialog.component.ts","./src/app/dialogs/forecast-dialog/forecast-dialog.component.html","./src/app/dialogs/forecast-dialog/forecast-dialog.component.ts","./src/app/dialogs/fulfill-order-dialog/fulfill-order-dialog.component.html","./src/app/dialogs/fulfill-order-dialog/fulfill-order-dialog.component.ts","./src/app/dialogs/unfulfill-confirmation/unfulfill-confirmation.component.html","./src/app/dialogs/unfulfill-confirmation/unfulfill-confirmation.component.ts","./src/app/dialogs/unfulfilled-products/unfulfilled-products.component.html","./src/app/dialogs/unfulfilled-products/unfulfilled-products.component.ts","./src/app/dialogs/update-product-dialog/update-product-dialog.component.html","./src/app/dialogs/update-product-dialog/update-product-dialog.component.ts","./src/app/dialogs/view-customer-dialog/view-customer-dialog.component.html","./src/app/dialogs/view-customer-dialog/view-customer-dialog.component.ts","./src/app/matPaginatorIntlCroClass.ts","./src/app/pages/customers/customers.component.html","./src/app/pages/customers/customers.component.ts","./src/app/pages/forcast/calendar/calendar.component.html","./src/app/pages/forcast/calendar/calendar.component.ts","./src/app/pages/forcast/forcast.component.html","./src/app/pages/forcast/forcast.component.ts","./src/app/pages/home/home.component.html","./src/app/pages/home/home.component.ts","./src/app/pages/login/login.component.html","./src/app/pages/login/login.component.ts","./src/app/pages/my-page/my-page.component.html","./src/app/pages/my-page/my-page.component.ts","./src/app/pages/my-page/profile/profile.component.html","./src/app/pages/my-page/profile/profile.component.ts","./src/app/pages/my-page/users/users.component.html","./src/app/pages/my-page/users/users.component.ts","./src/app/pages/orders/orders.component.html","./src/app/pages/orders/orders.component.ts","./src/app/pages/product-sets/product-sets.component.html","./src/app/pages/product-sets/product-sets.component.ts","./src/app/pages/products-container/products-container.component.html","./src/app/pages/products-container/products-container.component.ts","./src/app/pages/products/products.component.html","./src/app/pages/products/products.component.ts","./src/app/pages/shipments/incoming-shipments/incoming-shipments.component.html","./src/app/pages/shipments/incoming-shipments/incoming-shipments.component.ts","./src/app/pages/shipments/outgoing-shipments/outgoing-shipments.component.html","./src/app/pages/shipments/outgoing-shipments/outgoing-shipments.component.ts","./src/app/pages/shipments/shipments.component.html","./src/app/pages/shipments/shipments.component.ts","./src/app/services/CustomerService.ts","./src/app/services/ExcelService.ts","./src/app/services/ForecastService.ts","./src/app/services/IncomingShipmentService.ts","./src/app/services/OrderService.ts","./src/app/services/OutgoingShipmentService.ts","./src/app/services/ProductForecastService.ts","./src/app/services/ProductService.ts","./src/app/services/UserService.ts","./src/app/services/UtilService.ts","./src/environments/environment.ts","./src/main.ts","fs (ignored)","crypto (ignored)","stream (ignored)"],"names":[],"mappings":"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AE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;YACrD,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;YACrD,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;YACrD,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;YACrD,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;YAC/B,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAChD,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAChD,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAChD,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAChD,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAChD,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAChD,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAChD,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC5B,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAChD,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAC5B,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAChD,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACtC,GAAG,EAAE,GAAG,EAAC,GAAG,EAAC,GAAG,EAAE,GAAG,EAAC,GAAG,EAAE,GAAG,EAAC,GAAG,EAAE,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAE,GAAG,EAAC,GAAG,EAAE,GAAG,EAAC,GAAG,EAAE,GAAG,EAAC,GAAG,EAAE,GAAG,EAAC,GAAG,EAAE,GAAG,EAAC,GAAG,EAAE,GAAG,EAAC,GAAG;SAKpH,CAAC;QAEF,IAAI,GAAG,GAAG,IAAI,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC;QACtE,OAAO,GAAG;aACD,OAAO,CAAC,GAAG,EAAE,UAAU,KAAK;YACzB,OAAO,OAAO,CAAC,KAAK,CAAC,CAAC;QAC1B,CAAC,CAAC;aACD,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;aAClB,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IAChC,CAAC;IAAA,CAAC;IACF,iBAAiB,CAAC,GAAG;QACjB,OAAO,GAAG,CAAC,OAAO,CAAC,cAAc,EAAE,UAAS,CAAC;YACzC,OAAO,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC;QACzD,CAAC,CAAC,CAAC;IACP,CAAC;CACJ;;;;;;;;;;;;;AC/DD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,MAAM,EAAG,gCAAgC;IACzC,OAAO,EAAG,mCAAmC;CAC9C,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBjD;AAC6B;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,uBAAgB,CAAC,6EAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;ACZpC,e;;;;;;;;;;;ACAA,e;;;;;;;;;;;ACAA,e","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { MyPageComponent } from './pages/my-page/my-page.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { ShipmentsComponent } from './pages/shipments/shipments.component';\nimport { OrdersComponent } from './pages/orders/orders.component';\nimport { ProductsContainerComponent } from './pages/products-container/products-container.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './pages/home/home.component';\nimport { ProductsComponent } from './pages/products/products.component';\nimport { CustomersComponent } from './pages/customers/customers.component';\nimport { AuthGuardService as AuthGuard } from \"./auth/AuthGuardService\";\nimport { ForcastComponent } from './pages/forcast/forcast.component';\n\nconst routes: Routes = [\n  {\n    path: '', component: HomeComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'products', component: ProductsContainerComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'customers', component: CustomersComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'orders/:id', component: OrdersComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'orders', component: OrdersComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'shipments', component: ShipmentsComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'login', component: LoginComponent,\n    \n  },\n  {\n    path: 'forecast', component: ForcastComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'mypage', component: MyPageComponent,\n    canActivate: [AuthGuard]\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<app-navbar></app-navbar>\n\n<!-- Side Navigation with Content handler -->\n<mat-drawer-container class=\"main-container\">\n  <mat-drawer mode=\"side\" opened *ngIf=\"isLoggedIn$ | async\">\n      <!-- <mat-drawer mode=\"side\" opened> -->\n    <app-sidebar></app-sidebar>\n  </mat-drawer>\n  <mat-drawer-content>\n    <router-outlet></router-outlet>\n  </mat-drawer-content>\n</mat-drawer-container>\n","import { Router } from '@angular/router';\nimport { Component, Inject, LOCALE_ID } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth/AuthService';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'mbel-client';\n  isLoggedIn$: Observable<boolean>;\n  \n  constructor( private authService: AuthService, private router:Router) {}\n  ngOnInit() {\n    this.isLoggedIn$ = this.authService.isLoggedIn();\n  }\n}\n","import { UtilService } from './services/UtilService';\nimport { ForecastService } from './services/ForecastService';\nimport { AuthService } from 'src/app/auth/AuthService';\nimport { IncomingShipmentService } from './services/IncomingShipmentService';\nimport { OrderService } from './services/OrderService';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\n\n// Material imports\nimport {MatToolbarModule,\n        MatSidenavModule,\n        MatListModule,\n        MatButtonModule,\n        MatIconModule,\n        MatCardModule,\n        MatTableModule,\n        MatDialogModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatPaginatorModule,\n        MatTabsModule,\n        MatSelectModule,\n        MatExpansionModule,\n        MatBadgeModule,\n        MatProgressSpinnerModule,\n        MatProgressBarModule,\n        MatPaginatorIntl,\n        MatSnackBarModule,\n        MatTooltipModule,\n        MatSortModule,\n        \n} from '@angular/material';\n\nimport { SidebarComponent } from './components/sidebar/sidebar.component'; \nimport {MatGridListModule} from '@angular/material/grid-list';\nimport { HomeComponent } from './pages/home/home.component';\nimport { ProductsComponent } from './pages/products/products.component'; \nimport { ProductService } from './services/ProductService';\nimport { AddProductDialogComponent } from './dialogs/add-product-dialog/add-product-dialog.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { UpdateProductDialogComponent } from './dialogs/update-product-dialog/update-product-dialog.component';\nimport { ProductSetsComponent } from './pages/product-sets/product-sets.component';\nimport { ProductsContainerComponent } from './pages/products-container/products-container.component';\nimport { AddProductSetDialogComponent } from './dialogs/add-product-set-dialog/add-product-set-dialog.component';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { EditProductSetDialogComponent } from './dialogs/edit-product-set-dialog/edit-product-set-dialog.component';\nimport { DeleteConfirmationDialogComponent } from './dialogs/delete-confirmation-dialog/delete-confirmation-dialog.component';\nimport { CustomersComponent } from './pages/customers/customers.component';\nimport { CustomerService } from './services/CustomerService';\nimport { AddCustomerComponent } from './dialogs/add-customer/add-customer.component';\nimport { EditCustomerDialogComponent } from './dialogs/edit-customer-dialog/edit-customer-dialog.component';\nimport { OrdersComponent } from './pages/orders/orders.component';\nimport { ViewCustomerDialogComponent } from './dialogs/view-customer-dialog/view-customer-dialog.component';\nimport { AddOrderDialogComponent } from './dialogs/add-order-dialog/add-order-dialog.component';\nimport { EditOrderDialogComponent } from './dialogs/edit-order-dialog/edit-order-dialog.component';\nimport { ShipmentsComponent } from './pages/shipments/shipments.component';\nimport { IncomingShipmentsComponent } from './pages/shipments/incoming-shipments/incoming-shipments.component';\nimport { OutgoingShipmentsComponent } from './pages/shipments/outgoing-shipments/outgoing-shipments.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { AuthGuardService } from './auth/AuthGuardService';\nimport { AuthInterceptorService } from './auth/auth-interceptor.service';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AddIncomingShipmentComponent } from './dialogs/add-incoming-shipment/add-incoming-shipment.component';\nimport { UserService } from './services/UserService';\nimport { MatPaginatorIntlCro } from './matPaginatorIntlCroClass';\nimport { EditIncomingShipmentComponent } from './dialogs/edit-incoming-shipment/edit-incoming-shipment.component';\nimport { OutgoingShipmentService } from './services/OutgoingShipmentService';\nimport { AddOutgoingShipmentComponent } from './dialogs/add-outgoing-shipment/add-outgoing-shipment.component';\nimport { EditOutgoingShipmentComponent } from './dialogs/edit-outgoing-shipment/edit-outgoing-shipment.component';\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\nimport { ForcastComponent } from './pages/forcast/forcast.component';\nimport { FulfillOrderDialogComponent } from './dialogs/fulfill-order-dialog/fulfill-order-dialog.component';\nimport { ForecastDialogComponent } from './dialogs/forecast-dialog/forecast-dialog.component';\nimport { ArrivalOrderDialogComponent } from './dialogs/arrival-order-dialog/arrival-order-dialog.component';\nimport { MyPageComponent } from './pages/my-page/my-page.component';\nimport { UnfulfilledProductsComponent } from './dialogs/unfulfilled-products/unfulfilled-products.component';\nimport { UnfulfillConfirmationComponent } from './dialogs/unfulfill-confirmation/unfulfill-confirmation.component';\nimport { ProfileComponent } from './pages/my-page/profile/profile.component';\nimport { UsersComponent } from './pages/my-page/users/users.component';\nimport { AddUserDialogComponent } from './dialogs/add-user-dialog/add-user-dialog.component';\nimport { CalendarComponent } from './pages/forcast/calendar/calendar.component';\nimport { TableComponent } from './pages/forcast/table/table.component';\nimport { ProductForecastComponent } from './pages/forcast/product-forecast/product-forecast.component';\nimport { ProductForecastService } from './services/ProductForecastService';\nimport { ExcelServices } from './services/ExcelService';\nimport { DatePipe } from '@angular/common';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    SidebarComponent,\n    HomeComponent,\n    ProductsComponent,\n    AddProductDialogComponent,\n    UpdateProductDialogComponent,\n    ProductSetsComponent,\n    ProductsContainerComponent,\n    AddProductSetDialogComponent,\n    EditProductSetDialogComponent,\n    DeleteConfirmationDialogComponent,\n    CustomersComponent,\n    AddCustomerComponent,\n    EditCustomerDialogComponent,\n    OrdersComponent,\n    ViewCustomerDialogComponent,\n    AddOrderDialogComponent,\n    EditOrderDialogComponent,\n    ShipmentsComponent,\n    IncomingShipmentsComponent,\n    OutgoingShipmentsComponent,\n    LoginComponent,\n    AddIncomingShipmentComponent,\n    EditIncomingShipmentComponent,\n    AddOutgoingShipmentComponent,\n    EditOutgoingShipmentComponent,\n    ForcastComponent,\n    FulfillOrderDialogComponent,\n    ForecastDialogComponent,\n    ArrivalOrderDialogComponent,\n    MyPageComponent,\n    UnfulfilledProductsComponent,\n    UnfulfillConfirmationComponent,\n    ProfileComponent,\n    UsersComponent,\n    AddUserDialogComponent,\n    CalendarComponent,\n    TableComponent,\n    ProductForecastComponent,\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatGridListModule,\n    MatSidenavModule,\n    MatListModule,\n    MatButtonModule,\n    MatCardModule,\n    MatTableModule,\n    MatDialogModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    MatPaginatorModule,\n    MatTabsModule,\n    MatSelectModule,\n    ScrollingModule,\n    MatExpansionModule,\n    MatBadgeModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatGridListModule,\n    CalendarModule.forRoot({ provide: DateAdapter, useFactory: adapterFactory }),\n    MatSnackBarModule,\n    MatTooltipModule,\n    MatSortModule\n  ],\n  exports: [ \n     \n  ],\n  entryComponents: [\n    AddProductDialogComponent,\n    UpdateProductDialogComponent,\n    AddProductSetDialogComponent,\n    EditProductSetDialogComponent,\n    DeleteConfirmationDialogComponent,\n    AddCustomerComponent,\n    EditCustomerDialogComponent,\n    ViewCustomerDialogComponent,\n    AddOrderDialogComponent,\n    EditOrderDialogComponent,\n    AddIncomingShipmentComponent,\n    EditIncomingShipmentComponent,\n    AddOutgoingShipmentComponent,\n    EditOutgoingShipmentComponent,\n    ForcastComponent,\n    FulfillOrderDialogComponent,\n    ForecastDialogComponent,\n    ArrivalOrderDialogComponent,\n    UnfulfilledProductsComponent,\n    UnfulfillConfirmationComponent,\n    AddUserDialogComponent\n  ],\n  providers: [\n    ProductService,\n    CustomerService,\n    OrderService,\n    IncomingShipmentService,\n    AuthService,\n    AuthGuardService,\n    AuthInterceptorService,\n    OutgoingShipmentService,\n    UserService,\n    ForecastService,\n    ProductForecastService,\n    UtilService,\n    ExcelServices,\n    DatePipe,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptorService,\n      multi: true\n    },\n    { provide: MatPaginatorIntl, useClass: MatPaginatorIntlCro}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n\nimport { CanActivate, Router } from '@angular/router';\n\nimport { AuthService } from './AuthService';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n        constructor(public auth: AuthService, public router: Router) { }\n    canActivate(): boolean {\n        if (!this.auth.isAuthenticated()) {\n            this.router.navigate(['login']);\n            return false;\n        }\n        return true;\n    }\n\n}","import { environment } from './../../environments/environment';\n\nimport { Injectable } from '@angular/core';\n\nimport { HttpClient } from '@angular/common/http';\nimport { LoginUser } from '../models/LoginUser';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { BehaviorSubject } from 'rxjs';\n\nexport interface Token {\n    sub: string;\n    scopes: string;\n    iat: string;\n    exp: string;\n    firstName: string;\n    lastName: string;\n}\n\n@Injectable()\nexport class AuthService {\n    private jwtHelper = new JwtHelperService();\n    private loggedIn = new BehaviorSubject<boolean>(false);\n    constructor(private http: HttpClient) { }\n\n    apiurl = environment.APIURL;\n    \n    login(user: LoginUser) {\n        console.log(\"userAuth\");\n        return this.http.post<LoginUser>(this.apiurl+\"/login\", user);\n\n    }\n\n    public setSession(authResult) {\n        const user: Token = this.jwtHelper.decodeToken(authResult.token);\n        const expiresAt = user.exp;\n        \n        localStorage.setItem('id_token', authResult.token);\n        localStorage.setItem(\"expires_at\", expiresAt);\n        localStorage.setItem(\"scopes\",user.scopes);\n        localStorage.setItem(\"firstName\",user.firstName);\n        localStorage.setItem(\"lastName\",user.lastName);\n        if (authResult.token) this.loggedIn.next(true);\n    }\n\n    public isLoggedIn() {\n        if (this.isAuthenticated()) {\n            console.log(\"heyyyyyyy\")\n            this.loggedIn.next(true);\n        } else {\n            this.loggedIn.next(false);\n        }\n\n        return this.loggedIn.asObservable();\n    }\n\n    isLoggedOut() {\n        return !this.isLoggedIn();\n    }\n\n    getExpiration() {\n        const expiration = localStorage.getItem(\"expires_at\");\n        const expiresAt: Number = JSON.parse(expiration);\n\n        return expiresAt;\n    }\n\n    logout() {\n        localStorage.removeItem('id_token');\n        localStorage.removeItem(\"expires_at\");\n        this.loggedIn.next(false);\n    }\n\n    public isAuthenticated(): boolean {\n        if (this.getExpiration() > Date.now()/1000 ) {\n            //this.loggedIn.next(true);\n            return true;\n        } else {\n            //this.loggedIn.next(false);\n            return false;\n        }\n    }\n\n    getFirstName(): string{\n        return localStorage.getItem(\"firstName\");\n    }\n\n    getLastName(): string{\n        return localStorage.getItem(\"lastName\");\n    }\n    getRole(): string {\n        return localStorage.getItem(\"scopes\");\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthInterceptorService implements HttpInterceptor {\n\n  intercept(req: HttpRequest<any>,\n    next: HttpHandler): Observable<HttpEvent<any>> {\n    console.log(\"intercepter\");\n\n    \n      const idToken = localStorage.getItem(\"id_token\");\n      if(idToken){\n        \n        const authReq = req.clone({\n          headers: new HttpHeaders({\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + idToken,\n            'Access-Control-Allow-Origin': '*'\n          })\n        });\n    \n        return next.handle(authReq);\n      } else {\n        const authReq = req.clone({\n          headers: new HttpHeaders({\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*'\n          })\n        });\n    \n        return next.handle(authReq);\n      }\n  }\n}\n\n","<mat-toolbar color=\"primary\">\n    <span routerLink=\"/\">{{appName}}</span>\n    <img class=\"logo\" src=\"assets/icon/logo.png\"> \n    <span class=\"spacer\"></span>\n\n    <ng-template ngFor let-lang [ngForOf]=\"languages\">\n        <a href=\"/{{lang.code}}{{url}}\" *ngIf=\"lang.code !== localeId\">\n\n            <mat-icon svgIcon=\"{{lang.label}}\" aria-hidden=\"false\" attr.aria-label=\"{{lang.label}}\" class=\"icon\">\n            </mat-icon>\n        </a>\n        <a *ngIf=\"lang.code === localeId\">\n\n            <mat-icon svgIcon=\"{{lang.label}}\" aria-hidden=\"false\" attr.aria-label=\"{{lang.label}}\" class=\"iconSelected\"\n>\n            </mat-icon>\n        </a>\n        <!-- <span *ngIf=\"lang.code !== localeId\">\n          <a href=\"/{{lang.code}}{{url}}\">{{lang.label}}</a> </span>\n        <span *ngIf=\"lang.code === localeId\">{{lang.label}} </span> -->\n    </ng-template>\n    <button mat-button (click)=\"logout()\" *ngIf=\"isLoggedIn$ | async\" i18n=\"@@logout\">Logout</button>\n    <mat-icon >perm_identity</mat-icon>\n    <button mat-button routerLink=\"/mypage\" class=\"username\" *ngIf=\"isLoggedIn$ | async\">{{lastName}}</button>\n</mat-toolbar>","import { environment } from 'src/environments/environment';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/auth/AuthService';\nimport { Component, OnInit, Inject, LOCALE_ID } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { MatIconRegistry } from '@angular/material';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n  \n  appName = environment.APPNAME;\n  isLoggedIn$: Observable<boolean>;\n  lastName: string;\n  languages = [\n    { code: 'en', label: 'English'},\n    { code: 'ja', label: 'Japanese'},\n  ];\n  url = \"\";\n  constructor(@Inject(LOCALE_ID) public localeId: string,\n  private authService: AuthService, \n  private router: Router,\n  iconRegistry: MatIconRegistry, \n  sanitizer: DomSanitizer) {\n    iconRegistry.addSvgIcon(\n      'English',\n      sanitizer.bypassSecurityTrustResourceUrl('assets/icon/English.svg'));\n      iconRegistry.addSvgIcon(\n        'Japanese',\n        sanitizer.bypassSecurityTrustResourceUrl('assets/icon/Japanese.svg'));\n   }\n\n  ngOnInit() {\n    this.isLoggedIn$ = this.authService.isLoggedIn();\n    this.isLoggedIn$.subscribe((value)=>{\n      if(value){\n\n        this.lastName = this.authService.getLastName();\n      }\n    })\n    this.router.events.subscribe(result=>{\n        this.url = this.router.url;\n\n    })\n  }\n  logout() {\n    this.authService.logout();\n    this.router.navigate([\"/login\"]);\n  }\n\n}\n","<mat-list role=\"list\">\n    <mat-list-item role=\"listitem\">\n        <button mat-button routerLink=\"/products\" i18n=\"@@products\">Products</button>\n    </mat-list-item>\n    <mat-list-item role=\"listitem\">\n        <button mat-button routerLink=\"/customers\" i18n=\"@@customers\">Customers</button>\n    </mat-list-item>\n    <mat-list-item role=\"listitem\">\n        <button mat-button routerLink=\"/orders\" i18n=\"@@orders\">Orders</button>\n    </mat-list-item>\n    <mat-list-item role=\"listitem\">\n        <button mat-button routerLink=\"/shipments\" i18n=\"@@shipments\">Shipments</button>\n    </mat-list-item>\n    <mat-list-item role=\"listitem\">\n        <button mat-button routerLink=\"/forecast\" i18n=\"@@forecast\">Forecast</button>\n    </mat-list-item>\n</mat-list>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<h1 mat-dialog-title i18n=\"@@addNewCustomer\">Add new customer</h1>\n<form (keydown.enter)=\"$event.preventDefault()\" [formGroup]=\"customerForm\" (ngSubmit)=\"onSubmit()\">\n<div mat-dialog-content class=\"example-container\">\n  <mat-form-field>\n    <input matInput type=\"text\" #cnbox (keydown.enter)=\"hankana2Zenkana(cnbox.value,'customerName')\" (blur)=\"hankana2Zenkana(cnbox.value,'customerName')\" i18n-placeholder=\"@@customerName\" placeholder=\"Customer Name\" formControlName=\"customerName\">\n    <mat-error *ngIf=\"customerForm.get('customerName').hasError('required') \" i18n=\"@@customerNameRequired\">Customer Name is required.</mat-error>\n    <mat-error *ngIf=\"customerForm.get('customerName').hasError('pattern') \" i18n=\"@@invalidCharacters\">Invalid Characters.</mat-error>\n  </mat-form-field>\n  <mat-form-field>\n    <input matInput (keypress)=\"validateZip($event)\" type=\"text\" maxlength=\"8\" i18n-placeholder=\"@@zipCode\" placeholder=\"ZIP\" formControlName=\"zip\">\n    <mat-error *ngIf=\"customerForm.get('zip').hasError('maxLength') \" i18n=\"@@maxLength8\">Max length should be 8.</mat-error>\n    <mat-error *ngIf=\"customerForm.get('zip').hasError('pattern') \" i18n=\"@@invalidPostal\">Invalid Characters.</mat-error>\n  </mat-form-field>\n  <mat-form-field>\n    <input matInput type=\"text\" #addressbox (keydown.enter)=\"hankana2Zenkana(addressbox.value,'address')\" (blur)=\"hankana2Zenkana(addressbox.value,'address')\" i18n-placeholder=\"@@address\" placeholder=\"Address\" formControlName=\"address\">\n    <mat-error *ngIf=\"customerForm.get('address').hasError('pattern') \" i18n=\"@@invalidCharacters\">Invalid Characters.</mat-error>\n  </mat-form-field>\n  <mat-form-field>\n    <input matInput (keypress)=\"numberOnly($event)\" type=\"text\" maxlength=\"20\" i18n-placeholder=\"@@tel\" placeholder=\"Tel\" formControlName=\"tel\">\n    <mat-error *ngIf=\"customerForm.get('tel').hasError('pattern') \" i18n=\"@@invalidTP\">Invalid Characters.</mat-error>\n  </mat-form-field>\n  <mat-form-field>\n    <input matInput type=\"text\"  #cnamebox (keydown.enter)=\"hankana2Zenkana(cnamebox.value,'contactName')\" (blur)=\"hankana2Zenkana(cnamebox.value,'contactName')\" placeholder=\"Contact Name\" i18n-placeholder=\"@@contactName\" formControlName=\"contactName\">\n    <mat-error *ngIf=\"customerForm.get('contactName').hasError('pattern') \" i18n=\"@@invalidCharacters\">Invalid Characters.</mat-error>\n    <mat-error *ngIf=\"customerForm.get('contactName').hasError('required') \" i18n=\"@@contactNameRequired\">Contact Name is Required.</mat-error>\n  </mat-form-field>\n  <mat-form-field >\n    <mat-label i18n=\"@@selectAType\">Select a Type</mat-label>\n    <mat-select formControlName=\"type\">\n      <mat-option i18n=\"@@none\">None</mat-option>\n      <mat-option value=\"Customer\" i18n=\"@@customer\">Customer</mat-option>\n      <mat-option value=\"Sales Destination\" i18n=\"@@salesDestination\">Sales Destination</mat-option>\n      <mat-option value=\"Contractor\" i18n=\"@@contractor\">Contractor</mat-option>\n    </mat-select>\n    <mat-error *ngIf=\"customerForm.get('contactName').hasError('required') \" i18n=\"@@typeRequired\">Contact Name is Required.</mat-error>\n  </mat-form-field>\n \n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"onCancelClick()\" i18n=\"@@cancel\">Cancel</button>\n  <button mat-button type=\"submit\" [disabled]=\"!customerForm.valid\" i18n=\"@@ok\">Ok</button>\n</div>\n</form>\n\n","import { UtilService } from './../../services/UtilService';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { FormGroup, FormControl, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-add-customer',\n  templateUrl: './add-customer.component.html',\n  styleUrls: ['./add-customer.component.scss']\n})\nexport class AddCustomerComponent implements OnInit {\n\n  customerForm: FormGroup;\n  constructor(\n    public dialogRef: MatDialogRef<AddCustomerComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public util: UtilService\n  ) { }\n\n  ngOnInit() {\n    this.initializeCustomerForm();\n  }\n\n  initializeCustomerForm() {\n    this.customerForm = new FormGroup({\n      \"customerName\": new FormControl(\"\", [\n        Validators.required,\n        Validators.pattern(\"^[a-zA-z0-9一-龠ぁ-ゔァ-ヴー!-/:-@\\[-`{-~ 　]*$\")\n      ]),\n      \"zip\": new FormControl(\"\", [\n        Validators.maxLength(8),\n        Validators.pattern(/^[0-9\\-]*$/)\n      ]),\n      \"address\": new FormControl(\"\", [\n        Validators.pattern(\"^[a-zA-z0-9一-龠ぁ-ゔァ-ヴー!-/:-@\\[-`{-~ 　]*$\")\n        // Validators.pattern(\"/[一-龠]+|[ぁ-ゔ]+|[ァ-ヴー]+|[a-zA-Z0-9]+/g\")\n      ]),\n      \"tel\": new FormControl(\"\", [\n        Validators.pattern(/^(\\(?\\+?[0-9]*\\)?)?[0-9_\\-\\(\\)]*$/)\n      ]),\n      \"contactName\": new FormControl(\"\", [\n        Validators.required,\n        Validators.pattern(\"^[a-zA-z0-9一-龠ぁ-ゔァ-ヴー!-/:-@\\[-`{-~ 　]*$\")\n      ]),\n      \"type\": new FormControl(\"\", [\n        Validators.required\n      ]),\n\n    })\n  }\n\n  numberOnly(event): boolean {\n    let result = false;\n    const charCode = (event.which) ? event.which : event.keyCode;\n    // if (charCode > 31 && (charCode < 48 || charCode > 57)) {\n    //   result = false;\n    // } \n    if (charCode == 43 || charCode == 45 || (charCode > 47 && charCode < 58)) {\n      result = true;\n    }\n    console.log(\"pressed\");\n    console.log(charCode);\n    return result;\n\n  }\n  validateZip(event): boolean {\n    let result = false;\n    const charCode = (event.which) ? event.which : event.keyCode;\n\n    if (charCode == 45 || (charCode > 47 && charCode < 58)) {\n      result = true;\n    }\n    return result;\n  }\n\n  onCancelClick(): void {\n    this.dialogRef.close(null);\n  }\n  onSubmit() {\n    if (this.customerForm.valid) {\n      this.dialogRef.close(this.customerForm.value);\n    }\n  }\n  getErrorMessage(attribute: string) {\n    //return this.customerForm.get(attribute).hasError('required') ? 'You must enter a value':'' ;\n    switch (attribute) {\n      case \"zip\":\n        return this.customerForm.get(attribute).hasError('required') ? 'You must enter a value' :\n          this.customerForm.get(attribute).hasError('maxlength') ? 'zip code length must be 7' :\n            this.customerForm.get(attribute).hasError('minlength') ? 'zip code length must be 7' : '';\n        break;\n\n      default:\n        return this.customerForm.get(attribute).hasError('required') ? 'You must enter a value' : '';\n        break;\n    }\n  }\n\n  hankana2Zenkana(str,key){\n    console.log(str,key);\n    let trnslated = this.util.hankaku2ZenkakuEN(this.util.hankana2Zenkana(str));\n    this.customerForm.controls[key].setValue(trnslated);\n}\n\n}","<h1 mat-dialog-title i18n=\"@@addIncomingShipment\">Add Incoming Shipment</h1>\n<form (keydown.enter)=\"$event.preventDefault()\" [formGroup]=\"incomingShipmentForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"container\" style=\"overflow-y: scroll; height:300px;\">\n    <mat-form-field>\n      <input matInput type=\"text\" i18n-placeholder=\"@@shipmentNo\" placeholder=\"Shipment No\"\n        formControlName=\"shipmentNo\">\n      <mat-error *ngIf=\"incomingShipmentForm.get('shipmentNo').hasError('required')\" i18n=\"@@shipmentNoRequired\">\n        Shipment No cannot be empty.\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <input matInput type=\"date\" i18n-placeholder=\"@@arrivalDate\" placeholder=\"Arrival Date\"\n        formControlName=\"arrivalDate\">\n      <mat-error *ngIf=\"incomingShipmentForm.get('arrivalDate').hasError('required')\" i18n=\"@@arrivalDateRequired\">\n        Arrival Date cannot be empty.\n      </mat-error>\n    </mat-form-field>\n\n  </div>\n  <div style=\"overflow-y: scroll; height:100px;\" *ngIf=\"viewSelectd.length > 0\">\n    <mat-card class=\"productList\" *ngFor=\"let element of viewSelectd; let i = index\">\n      {{element.productName}} : {{element.quantity}}\n\n\n      <button align=\"end\" mat-stroked-button color=\"warn\" type=\"button\" (click)=\"removeComponent(i)\"\n        i18n=\"@@remove\">Remove</button>\n\n    </mat-card>\n  </div>\n  <mat-form-field class=\"inline\">\n    <mat-label i18n=\"@@selectProduct\">Select a product</mat-label>\n    <mat-select [(value)]=\"selected\">\n        <input (keyup)=\"onKey($event.target.value)\">\n      <mat-option i18n=\"@@none\"> None</mat-option>\n      <mat-option value=\"{{i}}\" *ngFor=\"let product of products; let i = index\">{{product.productName}}</mat-option>\n\n    </mat-select>\n  </mat-form-field>\n  <mat-form-field class=\"inline\">\n    <input matInput type=\"number\" min=\"1\" i18n-placeholder=\"@@qty\" placeholder=\"QTY\" [(ngModel)]=\"qty\"\n      [ngModelOptions]=\"{standalone: true}\">\n  </mat-form-field>\n  <mat-form-field class=\"inline\">\n    <input matInput type=\"number\" min=\"1\" i18n-placeholder=\"@@price\" placeholder=\"Price\" [(ngModel)]=\"price\"\n      [ngModelOptions]=\"{standalone: true}\">\n  </mat-form-field>\n  <mat-form-field class=\"inline\">\n    <mat-select [(value)]=\"currency\">\n      <mat-option se value=\"JPY\">JPY</mat-option>\n      <mat-option value=\"USD\">USD</mat-option>\n    </mat-select>\n  </mat-form-field>\n  <button mat-button type=\"button\" [disabled]=\"!selected && !qty\" (click)=\"addComponent()\" i18n=\"@@add\">Add</button>\n  <br><span class=\"qtyError\" *ngIf=\"qtyError\" color=\"red\" i18n=\"@@qtyRequired\">QTY cannot be empty</span>\n  <span class=\"qtyError\" *ngIf=\"priceError\" color=\"red\" i18n=\"@@priceRequired\">Price cannot be empty</span>\n  <span class=\"qtyError\" *ngIf=\"alreadyExistsError\" color=\"red\" i18n=\"@@productAlreadyExists\">Product is already added\n    to the list.</span>\n\n  <div mat-dialog-actions>\n    <button mat-button (click)=\"onCancelClick()\" i18n=\"@@cancel\">Cancel</button>\n    <button mat-button type=\"submit\" [disabled]=\"!incomingShipmentForm.valid\" i18n=\"@@ok\">Ok</button>\n  </div>\n</form>","import { SaveShipmentProduct } from './../../models/SaveShipmentProduct';\nimport { SaveIncomingShipment } from './../../models/SaveIncomingShipment';\nimport { Component, OnInit, Inject, OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { AddProductDialogComponent } from '../add-product-dialog/add-product-dialog.component';\nimport { Product } from 'src/app/models/Product';\nimport { ProductService } from 'src/app/services/ProductService';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-add-incoming-shipment',\n  templateUrl: './add-incoming-shipment.component.html',\n  styleUrls: ['./add-incoming-shipment.component.scss']\n})\nexport class AddIncomingShipmentComponent implements OnInit, OnDestroy {\n  incomingShipmentForm: FormGroup;\n  selected: number = null;\n  qty = null;\n  qtyError = false;\n  alreadyExistsError = false;\n  price = null;\n  currency = \"JPY\";\n  priceError = false;\n  viewSelectd: { productId: number, productName: String, quantity: number, price: number, currency: string }[] = [];\n  products: Product[] = [];\n  _products: Product[] = [];\n  saveIncomingShipment: SaveIncomingShipment;\n  saveShipmentProducts: SaveShipmentProduct[] = [];\n  unsub = new Subject();\n  constructor(\n    public dialogRef: MatDialogRef<AddProductDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private productService: ProductService\n  ) { }\n\n\n  ngOnInit() {\n    this.initializeShipmentForm();\n    this.getProductData();\n  }\n  ngOnDestroy(){\n    this.unsub.next();\n    this.unsub.complete();\n  }\n  initializeShipmentForm() {\n    this.incomingShipmentForm = new FormGroup({\n      \"shipmentNo\": new FormControl(\"\", [\n        Validators.required\n      ]),\n      \"arrivalDate\": new FormControl(\"\", [\n        Validators.required\n      ]),\n    })\n  }\n  getProductData() {\n    this.productService.getProducts().pipe(takeUntil(this.unsub)).subscribe(result => {\n      this.products = result;\n      this._products = result;\n    })\n  }\n  onCancelClick(): void {\n    this.dialogRef.close(null);\n  }\n  onSubmit() {\n    if (this.incomingShipmentForm.valid) {\n      this.saveIncomingShipment = this.incomingShipmentForm.value;\n      this.saveIncomingShipment.products = this.saveShipmentProducts;\n      this.saveIncomingShipment.arrivalDate = new Date(this.incomingShipmentForm.value.arrivalDate).toISOString();\n      console.log(new Date(this.incomingShipmentForm.value.arrivalDate).toISOString());\n      this.dialogRef.close(this.saveIncomingShipment);\n    }\n  }\n  getErrorMessage(attribute: string) {\n    return this.incomingShipmentForm.get(attribute).hasError('required') ? 'You must enter a value' : '';\n    // switch (attribute) {\n    //   case \"name\":\n    //       return this.productForm.get(attribute).hasError('required') ? 'You must enter a value':'' ;\n    //     break;\n\n    //   default:\n    //     break;\n    // }\n  }\n  addComponent() {\n    if (this.selected && this.qty && this.price) {\n      console.log(this.selected);\n\n      const saveShipmentProduct: SaveShipmentProduct = {\n        productId: this.products[this.selected].productId,\n        quantity: this.qty,\n        price: this.price,\n        currency: this.currency\n      }\n\n      //check the product is already exists\n      this.alreadyExistsError= false;\n      this.saveShipmentProducts.forEach(product => {\n        if (product.productId == saveShipmentProduct.productId)\n          this.alreadyExistsError = true;\n      })\n      if (!this.alreadyExistsError) {\n        this.saveShipmentProducts.push(saveShipmentProduct);\n        this.viewSelectd.push({\n          productId: this.products[this.selected].productId,\n          productName: this.products[this.selected].productName,\n          quantity: this.qty,\n          price: this.price,\n          currency: this.currency\n        })\n        console.log(this.viewSelectd);\n        this.qtyError = false;\n        this.selected = null;\n        this.qty = null;\n        this.price = null;\n        this.priceError = false;\n        this.alreadyExistsError= false;\n      }\n    } else if (!this.qty) {\n      this.qtyError = true;\n    } else if (!this.price) {\n      this.priceError = true;\n    }\n  }\n  removeComponent(id: number) {\n    this.viewSelectd.splice(id, 1);\n    this.saveShipmentProducts.splice(id, 1);\n  }\n  onKey(value) {\n    this.products = this.search(value);\n  }\n  search(value: string) {\n    let filter = value.toLowerCase();\n    this.products = this._products;\n    return this.products.filter(option => option.productName.toLowerCase().startsWith(filter));\n  }\n}\n","<h1 mat-dialog-title i18n=\"@@addNewOrder\">Add new Order</h1>\n<form [formGroup]=\"orderForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"container\" style=\"overflow-y: scroll; height:350px;\">\n        <mat-form-field>\n            <input matInput type=\"text\" i18n-placeholder=\"@@proposalNumber\" placeholder=\"Proposal Number\"\n                formControlName=\"proposalNo\">\n            <mat-error *ngIf=\"orderForm.get('proposalNo').hasError('required')\" i18n=\"@@proposalNumberRequired\">Proposal\n                no cannot be empty.</mat-error>\n        </mat-form-field>\n        <mat-form-field>\n            <mat-label i18n=\"@@selectCustomer\">Select a customer</mat-label>\n            <mat-select formControlName=\"customerId\" (click)=\"onClick('customers')\">\n                <input (keyup)=\"onKey($event.target.value,'customers')\">\n                <mat-option i18n=\"@@none\" (click)=\"onClick('customers')\">None</mat-option>\n                <div *ngFor=\"let customer of customers\" (click)=\"onClick('customers')\">\n                    <mat-option value=\"{{customer.customerId}}\" *ngIf=\"customer.type=='Customer'\">\n                        {{customer.customerName}}\n                    </mat-option>\n                </div>\n            </mat-select>\n            <mat-error *ngIf=\"orderForm.get('customerId').hasError('required')\" i18n=\"@@customerRequired\">Customer\n                cannot be empty.</mat-error>\n        </mat-form-field>\n        <mat-form-field>\n            <mat-label i18n=\"@@selectSalesDestination\">Select a Sales Destination</mat-label>\n            <mat-select formControlName=\"salesDestinationId\" (click)=\"onClick('salesD')\">\n                <input (keyup)=\"onKey($event.target.value,'salesD')\">\n                <mat-option i18n=\"@@none\" (click)=\"onClick('salesD')\">None</mat-option>\n                <div *ngFor=\"let customer of salesD\" (click)=\"onClick('salesD')\">\n                    <mat-option value=\"{{customer.customerId}}\" *ngIf=\"customer.type=='Sales Destination'\">\n                        {{customer.customerName}}</mat-option>\n                </div>\n            </mat-select>\n            <mat-error *ngIf=\"orderForm.get('salesDestinationId').hasError('required')\"\n                i18n=\"@@salesDestinationRequired\">Sales Destination cannot be empty.\n            </mat-error>\n        </mat-form-field>\n        <mat-form-field>\n            <mat-label i18n=\"@@selectContractor\">Select a Contractor</mat-label>\n            <mat-select formControlName=\"contractorId\" (click)=\"onClick('contractors')\">\n                <input (keyup)=\"onKey($event.target.value,'contractors')\">\n                <mat-option i18n=\"@@none\" (click)=\"onClick('contractors')\">None</mat-option>\n                <div *ngFor=\"let customer of contractors\" (click)=\"onClick('contractors')\">\n                    <mat-option value=\"{{customer.customerId}}\" *ngIf=\"customer.type=='Contractor'\">\n                        {{customer.customerName}}</mat-option>\n                </div>\n            </mat-select>\n            <mat-error *ngIf=\"orderForm.get('contractorId').hasError('required')\" i18n=\"@@contractorRequired\">Contractor\n                cannot be empty.\n            </mat-error>\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput type=\"date\" i18n-placeholder=\"@@recievedDate\" placeholder=\"Received Date\"\n                formControlName=\"receivedDate\">\n            <mat-error *ngIf=\"orderForm.get('receivedDate').hasError('required')\" i18n=\"@@receivedDateRequired\">Received\n                Date cannot be empty.</mat-error>\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput type=\"date\" #dueDateBox (keydown.enter)=\"calculateDelivery(dueDateBox.value)\"\n                (blur)=\"calculateDelivery(dueDateBox.value)\" i18n-placeholder=\"@@dueDate\" placeholder=\"Due Date\"\n                formControlName=\"dueDate\">\n            <mat-error *ngIf=\"orderForm.get('dueDate').hasError('required')\" i18n=\"@@dueDateRequired\">Due Date cannot be\n                empty.</mat-error>\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput type=\"date\" i18n-placeholder=\"@@deliveryDate\" placeholder=\"Delivery Date\"\n                formControlName=\"deliveryDate\">\n            <mat-error *ngIf=\"orderForm.get('deliveryDate').hasError('required')\" i18n=\"@@deliveryDateRequired\">Delivery\n                Date cannot be\n                empty.</mat-error>\n        </mat-form-field>\n        <mat-form-field>\n            <mat-label i18n=\"@@selectSalesUser\">Select a Sales User</mat-label>\n            <mat-select formControlName=\"salesUserId\" (click)=\"onClick('users')\">\n                <input (keyup)=\"onKey($event.target.value,'users')\">\n                <mat-option i18n=\"@@none\">None</mat-option>\n                <div *ngFor=\"let user of users\">\n                    <mat-option value=\"{{user.userId}}\">{{user.firstName}} {{user.lastName}}</mat-option>\n\n                </div>\n            </mat-select>\n            <mat-error *ngIf=\"orderForm.get('salesUserId').hasError('required')\" i18n=\"@@salesUserRequired\">Sales user\n                cannot be empty.\n            </mat-error>\n        </mat-form-field>\n    </div>\n    <div style=\"overflow-y: scroll; height:100px;\" *ngIf=\"viewSelectd.length > 0\">\n        <mat-card class=\"productList\" *ngFor=\"let element of viewSelectd; let i = index\">\n            {{element.productName}} : {{element.quantity}}\n\n\n            <button align=\"end\" mat-stroked-button color=\"warn\" type=\"button\" (click)=\"removeComponent(i)\"\n                i18n=\"@@remove\">Remove</button>\n\n        </mat-card>\n    </div>\n    <mat-form-field class=\"inline\">\n        <mat-label i18n=\"@@selectProduct\">Select a product</mat-label>\n        <mat-select [(value)]=\"selected\" (click)=\"onClick('products')\">\n            <input (keyup)=\"onKey($event.target.value,'products')\">\n            <mat-option i18n=\"@@none\">None</mat-option>\n            <mat-option value=\"{{i}}\" *ngFor=\"let product of selectedProductSets; let i = index\" (click)=\"resetP()\">\n                {{product.productName}}</mat-option>\n        </mat-select>\n    </mat-form-field>\n    <mat-form-field class=\"inline\">\n        <input matInput type=\"number\" min=\"1\" placeholder=\"QTY\" [(ngModel)]=\"qty\" [ngModelOptions]=\"{standalone: true}\">\n        <mat-error i18n=\"@@qtyRequired\">QTY cannot be empty</mat-error>\n    </mat-form-field>\n    <button mat-button type=\"button\" [disabled]=\"!selected && !qty\" (click)=\"addComponent()\">Add</button>\n    <br><span class=\"qtyError\" *ngIf=\"qtyError\" color=\"red\" i18n=\"@@qtyRequired\">QTY cannot be empty</span>\n\n    <div mat-dialog-actions>\n        <button mat-button (click)=\"onCancelClick()\" i18n=\"@@cancel\">Cancel</button>\n        <button mat-button type=\"submit\" [disabled]=\"!orderForm.valid\" i18n=\"@@ok\">Ok</button>\n    </div>\n</form>","import { User } from './../../models/User';\nimport { SaveOrder } from './../../models/SaveOrder';\nimport { ProductSet } from './../../models/ProductSet';\nimport { CustomerService } from './../../services/CustomerService';\nimport { Customer } from './../../models/Customer';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Product } from 'src/app/models/Product';\nimport { SaveProductComponent } from 'src/app/models/saveProductComponent';\nimport { ProductService } from 'src/app/services/ProductService';\nimport { UserService } from 'src/app/services/UserService';\n\n@Component({\n  selector: 'app-add-order-dialog',\n  templateUrl: './add-order-dialog.component.html',\n  styleUrls: ['./add-order-dialog.component.scss']\n})\nexport class AddOrderDialogComponent implements OnInit {\n\n  selected: number = null;\n  qty = null;\n  qtyError = false;\n  viewSelectd: { productId: number, productName: String, quantity: number }[] = [];\n  saveProducts: SaveProductComponent[] = [];\n  orderForm: FormGroup;\n  customers: Customer[] = [];\n  salesD: Customer[] = [];\n  contractors: Customer[] = [];\n  _customers: Customer[] = [];\n  products: Product[] = [];\n  productSets: ProductSet[] = [];\n  _productSets: ProductSet[] = [];\n  saveOrder: SaveOrder;\n  users: User[] = [];\n  _users: User[] = [];\n  productSearch = \"\";\n  selectedProductSets = [];\n  constructor(\n    public dialogRef: MatDialogRef<AddOrderDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private customerService: CustomerService,\n    private productService: ProductService,\n    private userService: UserService\n  ) { }\n\n  ngOnInit() {\n    this.getCustomerData();\n    this.initializeCustomerForm();\n    this.getProductData();\n    this.getUserData();\n  }\n  getCustomerData() {\n    this.customerService.getCustomers().subscribe(result => {\n      this.customers = result;\n      this._customers = result;\n      this.contractors = result;\n      this.salesD = result;\n      console.log(this.customers)\n    })\n  }\n  getUserData() {\n    this.userService.getUsers().subscribe(result => {\n      this.users = result;\n      this._users = result;\n\n    })\n  }\n\n  initializeCustomerForm() {\n    this.orderForm = new FormGroup({\n      \"proposalNo\": new FormControl(\"\", [\n        Validators.required\n      ]),\n      \"customerId\": new FormControl(\"\", [\n        Validators.required\n      ]),\n      \"salesDestinationId\": new FormControl(\"\", [\n        Validators.required\n      ]),\n      \"contractorId\": new FormControl(\"\", [\n        Validators.required\n      ]),\n      \"receivedDate\": new FormControl(\"\", [\n        Validators.required\n      ]),\n      \"dueDate\": new FormControl(\"\", [\n        Validators.required\n      ]),\n      \"deliveryDate\": new FormControl(\"\", [\n        Validators.required\n      ]),\n      \"salesUserId\": new FormControl(\"\", [\n        Validators.required\n      ]),\n\n    })\n  }\n\n  onCancelClick(): void {\n    this.dialogRef.close(null);\n  }\n  onSubmit() {\n    if (this.orderForm.valid) {\n      this.saveOrder = this.orderForm.value;\n      this.saveOrder.orderedProducts = this.saveProducts;\n      const date: Date = new Date(this.saveOrder.receivedDate);\n      console.log(date);\n      this.saveOrder.receivedDate = new Date(this.orderForm.value.receivedDate).toISOString();\n      this.saveOrder.dueDate = new Date(this.orderForm.value.dueDate).toISOString();\n      this.saveOrder.deliveryDate = new Date(this.orderForm.value.deliveryDate).toISOString();\n      this.dialogRef.close(this.saveOrder);\n    }\n  }\n  getErrorMessage(attribute: string) {\n    return this.orderForm.get(attribute).hasError('required') ? 'You must enter a value' : '';\n    // switch (attribute) {\n    //   case \"zip\":\n    //       // return this.customerForm.get(attribute).hasError('required') ? 'You must enter a value':\n    //       // this.customerForm.get(attribute).hasError('maxlength') ? 'zip code length must be 7': \n    //       // this.customerForm.get(attribute).hasError('minlength') ? 'zip code length must be 7': '';\n    //     break;\n\n    //   default:\n    //       return this.orderForm.get(attribute).hasError('required') ? 'You must enter a value':'' ;\n    //     break;\n    // }\n  }\n  addComponent() {\n    if (this.selected && this.qty) {\n      console.log(this.selected);\n\n      const saveProductComponent: SaveProductComponent = {\n        productId: this.productSets[this.selected].productId,\n        quantity: this.qty\n      }\n      this.saveProducts.push(saveProductComponent);\n      this.viewSelectd.push({\n        productId: this.productSets[this.selected].productId,\n        productName: this.productSets[this.selected].productName,\n        quantity: this.qty\n      })\n      console.log(this.viewSelectd);\n      this.qtyError = false;\n      this.selected = null;\n      this.qty = null;\n    } else {\n      this.qtyError = true;\n    }\n  }\n\n  removeComponent(id: number) {\n    this.viewSelectd.splice(id, 1);\n    this.saveProducts.splice(id, 1);\n  }\n  getProductData() {\n    this.productService.getProductSets().subscribe(result => {\n      this.productSets = result;\n      this.productService.getProducts().subscribe(presult => {\n        for (let product of presult) {\n          const p: ProductSet = {\n\n            active: product.active,\n            productId: product.productId,\n            price: product.price,\n            currency: product.currency,\n            productName: product.productName,\n            createdAt: product.createdAt,\n            description: product.description,\n            isSet: product.isSet,\n            leadTime: product.leadTime,\n            moq: product.moq,\n            obicNo: product.obicNo,\n            products: null,\n            quantity: product.quantity,\n            updatedAt: product.updatedAt,\n            userId: product.userId\n          };\n          this.productSets.push(p);\n        }\n      })\n      this.selectedProductSets = this.productSets;\n      this._productSets = this.productSets;\n    })\n  }\n  // Receive user input and send to search method**\n  onKey(value, key) {\n    switch (key) {\n      case 'products':\n        this.selectedProductSets = this.searchProducts(value);\n        break;\n      case 'customers':\n        this.customers = this.searchCustomers(value);\n        break;\n      case 'salesD':\n        this.salesD = this.searchSalesD(value);\n        break;\n      case 'contractors':\n        this.contractors = this.searchContractors(value);\n        break;\n\n      case 'users':\n        this.users = this.searchUsers(value);\n        break;\n\n      default:\n        break;\n    }\n  }\n  onClick(key) {\n    switch (key) {\n      case 'products':\n        this.selectedProductSets = this._productSets;\n        break;\n      case 'customers':\n        this.customers = this._customers;\n        break;\n      case 'users':\n        this.users = this._users;\n        break;\n\n      default:\n        break;\n    }\n  }\n  searchProducts(value: string) {\n    let filter = value.toLowerCase();\n    this.selectedProductSets = this._productSets;\n    return this.selectedProductSets.filter(option => option.productName.toLowerCase().startsWith(filter));\n  }\n  searchUsers(value: string) {\n    let filter = value.toLowerCase();\n    this.users = this._users;\n    return this.users.filter(option => option.firstName.toLowerCase().startsWith(filter));\n  }\n  searchCustomers(value: string) {\n    let filter = value.toLowerCase();\n    this.customers = this._customers;\n    return this.customers.filter(option => option.customerName.toLowerCase().startsWith(filter));\n  }\n  searchContractors(value: string) {\n    let filter = value.toLowerCase();\n    this.contractors = this._customers;\n    return this.contractors.filter(option => option.customerName.toLowerCase().startsWith(filter));\n  }\n  searchSalesD(value: string) {\n    let filter = value.toLowerCase();\n    this.salesD = this._customers;\n    return this.salesD.filter(option => option.customerName.toLowerCase().startsWith(filter));\n  }\n\n  resetP() {\n    this.productSearch = \"\";\n    this.selectedProductSets = this.productSets;\n  }\n\n  calculateDelivery(value) {\n    const dueDate = new Date(value);\n    const deliveryDate = dueDate;\n    deliveryDate.setDate(dueDate.getDate()-14);\n    console.log(deliveryDate);\n    this.orderForm.get(\"deliveryDate\").setValue(deliveryDate.toISOString().substring(0,10));\n  }\n}\n","<h1 mat-dialog-title i18n=\"@@addOutgoingShipment\">Add Outgoing Shipment</h1>\n<form (keydown.enter)=\"$event.preventDefault()\" [formGroup]=\"outgoingShipmentForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"container\" style=\"overflow-y: scroll; height:300px;\" >\n    <mat-form-field>\n      <input matInput type=\"text\" i18n-placeholder=\"@@shipmentNo\" placeholder=\"Shipment No\" formControlName=\"shipmentNo\">\n      <mat-error *ngIf=\"outgoingShipmentForm.get('shipmentNo').invalid\">{{getErrorMessage('shipmentNo')}}</mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <input matInput type=\"date\" i18n-placeholder=\"@@shipmentDate\" placeholder=\"Shipment Date\" formControlName=\"shipmentDate\">\n      <mat-error *ngIf=\"outgoingShipmentForm.get('shipmentDate').invalid\">{{getErrorMessage('shipmentDate')}}</mat-error>\n    </mat-form-field>\n    <mat-form-field>\n        <mat-label i18n=\"@@selectSalesDestination\">Select a Sales Destination</mat-label>\n        <mat-select formControlName=\"salesDestinationId\">\n            <mat-option i18n=\"@@none\">None</mat-option>\n            <div *ngFor=\"let customer of customers\">\n                <mat-option value=\"{{customer.customerId}}\" *ngIf=\"customer.type=='Sales Destination'\">\n                    {{customer.customerName}}</mat-option>\n            </div>\n        </mat-select>\n        <mat-error *ngIf=\"outgoingShipmentForm.get('salesDestinationId').hasError('required')\" i18n=\"@@salesDestinationRequired\">Sales Destination cannot be empty.\n        </mat-error>\n    </mat-form-field>\n\n  </div>\n  <div style=\"overflow-y: scroll; height:100px;\" *ngIf=\"viewSelectd.length > 0\">\n    <mat-card class=\"productList\" *ngFor=\"let element of viewSelectd; let i = index\">\n      {{element.productName}} : {{element.quantity}}\n      \n\n      <button align=\"end\" mat-stroked-button color=\"warn\"  type=\"button\" (click)=\"removeComponent(i)\" i18n=\"@@remove\">Remove</button>\n\n    </mat-card>\n    </div>\n    <mat-form-field class=\"inline\">\n      <mat-label i18n=\"@@selectProduct\">Select a product</mat-label>\n      <mat-select [(value)]=\"selected\">\n        <mat-option i18n=\"@@none\"> None</mat-option>\n        <mat-option value=\"{{i}}\" *ngFor=\"let product of products; let i = index\">{{product.productName}}</mat-option>\n\n      </mat-select>\n    </mat-form-field>\n    <mat-form-field class=\"inline\">\n      <input matInput type=\"number\" min=\"1\" i18n-placeholder=\"@@quantity\" placeholder=\"QTY\" [(ngModel)]=\"qty\" [ngModelOptions]=\"{standalone: true}\">\n    </mat-form-field>\n    <button mat-button type=\"button\" [disabled]=\"!selected && !qty\" (click)=\"addComponent()\" i18n=\"@@add\">Add</button>\n    <br><span class=\"qtyError\" *ngIf=\"qtyError\" color=\"red\" i18n=\"@@qtyRequired\">QTY cannot be empty</span>\n    \n\n  <div mat-dialog-actions>\n    <button mat-button (click)=\"onCancelClick()\" i18n=\"@@cancel\">Cancel</button>\n    <button mat-button type=\"submit\" [disabled]=\"!outgoingShipmentForm.valid\" i18n=\"@@ok\">Ok</button>\n  </div>\n</form>","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Product } from 'src/app/models/Product';\nimport { SaveOutgoingShipment } from 'src/app/models/SaveOutgoingShipment';\nimport { SaveProductComponent } from 'src/app/models/saveProductComponent';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { ProductService } from 'src/app/services/ProductService';\nimport { CustomerService } from 'src/app/services/CustomerService';\nimport { Customer } from 'src/app/models/Customer';\n\n@Component({\n  selector: 'app-add-outgoing-shipment',\n  templateUrl: './add-outgoing-shipment.component.html',\n  styleUrls: ['./add-outgoing-shipment.component.scss']\n})\nexport class AddOutgoingShipmentComponent implements OnInit {\n  outgoingShipmentForm: FormGroup;\n  selected: number=null;\n  qty=null;\n  qtyError=false;\n  price=null;\n  priceError=false;\n  customers: Customer[] = [];\n  viewSelectd: {productId: number,productName: String,quantity: number}[] = [];\n  products: Product[] = [];\n  saveOutgoingShipment:SaveOutgoingShipment;\n  saveShipmentProducts: SaveProductComponent [] = [];\n  constructor(\n    public dialogRef: MatDialogRef<AddOutgoingShipmentComponent>,\n    private customerService: CustomerService,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private productService: ProductService\n  ) { }\n\n\n  ngOnInit() {\n   this.initializeShipmentForm();\n    this.getProductData();\n    this.getCustomerData();\n  }\n  initializeShipmentForm(){\n    this.outgoingShipmentForm = new FormGroup({\n      \"shipmentNo\": new FormControl(\"\",[\n        Validators.required\n      ]),\n      \"shipmentDate\": new FormControl(\"\",[\n        Validators.required\n      ]),\n      \"salesDestinationId\": new FormControl(\"\",[\n        Validators.required\n      ]),\n    })\n  }\n  getCustomerData() {\n    this.customerService.getCustomers().subscribe(result => {\n      this.customers = result;\n      console.log(this.customers)\n    })\n  }\n  getProductData() {\n    this.productService.getProducts().subscribe(result=>{\n      this.products = result;\n    })\n  }\n  onCancelClick(): void {\n    this.dialogRef.close(null);\n  }\n  onSubmit(){\n    if(this.outgoingShipmentForm.valid){\n      this.saveOutgoingShipment = this.outgoingShipmentForm.value;\n      this.saveOutgoingShipment.products = this.saveShipmentProducts;\n      this.saveOutgoingShipment.shipmentDate = new Date(this.outgoingShipmentForm.value.shipmentDate).toISOString();\n      console.log(this.saveOutgoingShipment);\n      this.dialogRef.close(this.saveOutgoingShipment);\n    }\n  }\n  getErrorMessage(attribute:string) {\n    return this.outgoingShipmentForm.get(attribute).hasError('required') ? 'You must enter a value':'' ;\n    // switch (attribute) {\n    //   case \"name\":\n    //       return this.productForm.get(attribute).hasError('required') ? 'You must enter a value':'' ;\n    //     break;\n    \n    //   default:\n    //     break;\n    // }\n  }\n  addComponent(){\n    if(this.selected && this.qty){\n      console.log(this.selected);\n      \n      const saveShipmentProduct: SaveProductComponent = {\n        productId : this.products[this.selected].productId,\n        quantity : this.qty\n      }\n      this.saveShipmentProducts.push(saveShipmentProduct);\n      this.viewSelectd.push({\n        productId: this.products[this.selected].productId,\n        productName: this.products[this.selected].productName,\n        quantity: this.qty\n      })\n      console.log(this.viewSelectd);\n      this.qtyError = false;\n      this.selected=null;\n      this.qty = null;\n      this.price = null;\n      this.priceError =false;\n    } else if(!this.qty){\n      this.qtyError = true;\n    } \n  }\n  removeComponent(id: number){\n    this.viewSelectd.splice(id,1);\n    this.saveShipmentProducts.splice(id,1);\n  }\n\n}\n","<h1 mat-dialog-title i18n=\"@@addNewProduct\">Add new product</h1>\n<form (keydown.enter)=\"$event.preventDefault()\" [formGroup]=\"productForm\" (ngSubmit)=\"onSubmit()\">\n  <div mat-dialog-content class=\"example-container\">\n    <mat-form-field>\n      <input matInput type=\"text\" i18n-placeholder=\"@@productName\" placeholder=\"Product Name\"\n        formControlName=\"productName\">\n      <mat-error *ngIf=\"productForm.get('productName').hasError('required')\" i18n=\"@@productNameRequired\">Product Name\n        cannot be empty.</mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <input matInput type=\"text\" i18n-placeholder=\"@@description\" placeholder=\"Description\"\n        formControlName=\"description\">\n      <mat-error *ngIf=\"productForm.get('description').hasError('required')\" i18n=\"@@descriptionRequired\">Description\n        cannot be empty.</mat-error>\n    </mat-form-field>\n    <mat-form-field class=\"inline\">\n      <input matInput type=\"number\" min=\"1\" i18n-placeholder=\"@@price\" placeholder=\"Price\" formControlName=\"price\">\n      <mat-error *ngIf=\"productForm.get('price').hasError('required')\" i18n=\"@@priceRequired\">Price cannot be empty.\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field class=\"inline\">\n      <mat-select formControlName=\"currency\">\n        <mat-option se value=\"JPY\">JPY</mat-option>\n        <mat-option value=\"USD\">USD</mat-option>\n      </mat-select>\n    </mat-form-field>\n    <mat-form-field>\n      <input matInput type=\"number\" min=\"1\" i18n-placeholder=\"@@quantity\" placeholder=\"QTY\" formControlName=\"quantity\">\n      <mat-error *ngIf=\"productForm.get('quantity').hasError('required')\" i18n=\"@@qtyRequired\">QTY cannot be empty.\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <input matInput type=\"number\" min=\"1\" i18n-placeholder=\"@@leadTime\" placeholder=\"Lead Time (w)\"\n        formControlName=\"leadTime\">\n      <mat-error *ngIf=\"productForm.get('leadTime').hasError('required')\" i18n=\"@@leadTimeRequired\">Lead Time cannot be\n        empty.</mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <input matInput type=\"number\" min=\"1\" i18n-placeholder=\"@@moq\" placeholder=\"MOQ\" formControlName=\"moq\">\n      <mat-error *ngIf=\"productForm.get('moq').hasError('required')\" i18n=\"@@moqRequired\">MOQ cannot be empty.\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <input matInput type=\"text\" i18n-placeholder=\"@@obicNo\" placeholder=\"Obic No\" formControlName=\"obicNo\">\n      <mat-error *ngIf=\"productForm.get('obicNo').hasError('required')\" i18n=\"@@obicNoRequired\">Obic No cannot be empty.\n      </mat-error>\n    </mat-form-field>\n\n  </div>\n  <div mat-dialog-actions>\n    <button mat-button (click)=\"onCancelClick()\" i18n=\"@@cancel\">Cancel</button>\n    <button mat-button type=\"submit\" [disabled]=\"!productForm.valid\" i18n-placeholder=\"@@ok\">Ok</button>\n  </div>\n</form>","import { Product } from './../../models/Product';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-add-product-dialog',\n  templateUrl: './add-product-dialog.component.html',\n  styleUrls: ['./add-product-dialog.component.scss']\n})\nexport class AddProductDialogComponent implements OnInit {\n  productForm: FormGroup;\n\n  constructor(\n    public dialogRef: MatDialogRef<AddProductDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) { }\n\n\n  ngOnInit() {\n    this.productForm = new FormGroup({\n      \"productName\": new FormControl(\"\",[\n        Validators.required\n      ]),\n      \"description\": new FormControl(\"\",[\n        Validators.required\n      ]),\n      \"price\": new FormControl(\"\",[\n        Validators.required\n      ]),\n      \"currency\": new FormControl(\"JPY\",[\n        Validators.required\n      ]),\n      \"quantity\": new FormControl(\"\",[\n        Validators.required\n      ]),\n      \"leadTime\": new FormControl(\"\",[\n        Validators.required\n      ]),\n      \"moq\": new FormControl(\"\",[\n        Validators.required\n      ]),\n      \"obicNo\": new FormControl(\"\",[\n        Validators.required\n      ]),\n\n    })\n  }\n  onCancelClick(): void {\n    this.dialogRef.close(null);\n  }\n  onSubmit(){\n    if(this.productForm.valid){\n      this.dialogRef.close(this.productForm.value);\n    }\n  }\n  getErrorMessage(attribute:string) {\n    return this.productForm.get(attribute).hasError('required') ? 'You must enter a value':'' ;\n    // switch (attribute) {\n    //   case \"name\":\n    //       return this.productForm.get(attribute).hasError('required') ? 'You must enter a value':'' ;\n    //     break;\n    \n    //   default:\n    //     break;\n    // }\n  }\n}\n","<h1 mat-dialog-title i18n=\"@@addNewProductSet\">Add new product set</h1>\n<form [formGroup]=\"productForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"container\" style=\"overflow-y: scroll; height:350px;\">\n    <mat-form-field>\n      <input matInput type=\"text\" i18n-placeholder=\"@@productSetName\" placeholder=\"Product Set Name\"\n        formControlName=\"productName\">\n      <mat-error *ngIf=\"productForm.get('productName').hasError('required')\" i18n=\"@@productSetNameRequired\">Product Set Name\n        cannot be empty.</mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <input matInput type=\"text\" i18n-placeholder=\"@@description\" placeholder=\"Description\"\n        formControlName=\"description\">\n      <mat-error *ngIf=\"productForm.get('description').hasError('required')\" i18n=\"@@descriptionRequired\">Description\n        cannot be empty.</mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <input matInput type=\"number\" min=\"1\" i18n-placeholder=\"@@price\" placeholder=\"Price\" formControlName=\"price\"\n        class=\"inline\">\n      <mat-error *ngIf=\"productForm.get('price').hasError('required')\" i18n=\"@@priceRequired\">Price cannot be empty.\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field class=\"inline\">\n      <mat-select formControlName=\"currency\">\n        <mat-option se value=\"JPY\">JPY</mat-option>\n        <mat-option value=\"USD\">USD</mat-option>\n      </mat-select>\n    </mat-form-field>\n    <!-- <mat-form-field>\n      <input matInput type=\"number\" i18n-placeholder=\"@@quantity\"  placeholder=\"QTY\" formControlName=\"quantity\">\n      <mat-error *ngIf=\"productForm.get('quantity').hasError('required')\" i18n=\"@@qtyRequired\">QTY cannot be empty.</mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <input matInput type=\"number\" i18n-placeholder=\"@@leadTime\"  placeholder=\"Lead Time\" formControlName=\"leadTime\">\n      <mat-error *ngIf=\"productForm.get('leadTime').hasError('required')\" i18n=\"@@leadTimeRequired\">Lead Time cannot be empty.</mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <input matInput type=\"text\" i18n-placeholder=\"@@moq\"  placeholder=\"MOQ\" formControlName=\"moq\">\n      <mat-error *ngIf=\"productForm.get('moq').hasError('required')\" i18n=\"@@moqRequired\">MOQ cannot be empty.</mat-error>\n    </mat-form-field> -->\n    <mat-form-field>\n      <input matInput type=\"text\" i18n-placeholder=\"@@obicNo\" placeholder=\"Obic No\" formControlName=\"obicNo\">\n      <mat-error *ngIf=\"productForm.get('obicNo').hasError('required')\" i18n=\"@@obicNoRequired\">Obic No cannot be empty.\n      </mat-error>\n    </mat-form-field>\n\n  </div>\n  <div style=\"overflow-y: scroll; height:100px;\" *ngIf=\"viewSelectd.length > 0\">\n    <mat-card class=\"productList\" *ngFor=\"let element of viewSelectd; let i = index\">\n      {{element.productName}} : {{element.quantity}}\n\n\n      <button align=\"end\" mat-stroked-button color=\"warn\" type=\"button\" (click)=\"removeComponent(i)\"\n        i18n=\"@@remove\">Remove</button>\n\n    </mat-card>\n  </div>\n  <mat-form-field class=\"inline\">\n    <mat-label i18n=\"@@selectProduct\">Select a product</mat-label>\n    <mat-select [(value)]=\"selected\">\n      <input (keyup)=\"onKey($event.target.value)\">\n      <mat-option i18n=\"@@none\">None</mat-option>\n      <mat-option value=\"{{i}}\" *ngFor=\"let product of products; let i = index\">{{product.productName}}</mat-option>\n\n    </mat-select>\n  </mat-form-field>\n  <mat-form-field class=\"inline\">\n    <input matInput type=\"number\" min=\"1\" i18n-placeholder=\"@@quantity\" placeholder=\"QTY\" [(ngModel)]=\"qty\"\n      [ngModelOptions]=\"{standalone: true}\">\n  </mat-form-field>\n  <button mat-button type=\"button\" [disabled]=\"!selected && !qty\" (click)=\"addComponent()\" i18n=\"@@add\">Add</button>\n  <br><span class=\"qtyError\" *ngIf=\"qtyError\" color=\"red\" i18n=\"@@qtyRequired\">QTY cannot be empty</span>\n\n  <div mat-dialog-actions>\n    <button mat-button (click)=\"onCancelClick()\" i18n=\"@@cancel\">Cancel</button>\n    <button mat-button type=\"submit\" [disabled]=\"!productForm.valid\" i18n-placeholder=\"@@ok\">Ok</button>\n  </div>\n</form>","import { ProductService } from './../../services/ProductService';\nimport { Product } from 'src/app/models/Product';\nimport { SaveProductComponent } from './../../models/saveProductComponent';\nimport { SaveProductSet } from './../../models/saveProductSet';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { AddProductDialogComponent } from '../add-product-dialog/add-product-dialog.component';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-add-product-set-dialog',\n  templateUrl: './add-product-set-dialog.component.html',\n  styleUrls: ['./add-product-set-dialog.component.scss']\n})\nexport class AddProductSetDialogComponent implements OnInit {\n  selected: number = null;\n  qty = null;\n  qtyError = false;\n  productForm: FormGroup;\n  saveProductSet: SaveProductSet;\n  saveProducts: SaveProductComponent[] = [];\n  viewSelectd: { productId: number, productName: String, quantity: number }[] = [];\n  products: Product[] = [];\n  _products: Product[] = [];\n  constructor(\n    public dialogRef: MatDialogRef<AddProductDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private productService: ProductService\n  ) { }\n\n\n  ngOnInit() {\n    this.initializeProductForm();\n    this.getProductData();\n\n  }\n  getProductData() {\n    this.productService.getProducts().subscribe(result => {\n      this._products = result;\n      this.products = result;\n    })\n  }\n  initializeProductForm() {\n    this.productForm = new FormGroup({\n      \"productName\": new FormControl(\"\", [\n        Validators.required\n      ]),\n      \"description\": new FormControl(\"\", [\n        Validators.required\n      ]),\n      \"price\": new FormControl(\"\", [\n        Validators.required\n      ]),\n      \"currency\": new FormControl(\"JPY\", [\n        Validators.required\n      ]),\n      // \"quantity\": new FormControl(\"\",[\n      //   Validators.required\n      // ]),\n      // \"leadTime\": new FormControl(\"\",[\n      //   Validators.required\n      // ]),\n      // \"moq\": new FormControl(\"\",[\n      //   Validators.required\n      // ]),\n      \"obicNo\": new FormControl(\"\", [\n        Validators.required\n      ]),\n\n    })\n  }\n  onCancelClick(): void {\n    this.dialogRef.close(null);\n  }\n  onSubmit() {\n    if (this.productForm.valid) {\n      this.saveProductSet = this.productForm.value;\n      this.saveProductSet.products = this.saveProducts;\n      this.dialogRef.close(this.saveProductSet);\n    }\n  }\n  getErrorMessage(attribute: string) {\n    return this.productForm.get(attribute).hasError('required') ? 'You must enter a value' : '';\n    // switch (attribute) {\n    //   case \"name\":\n    //       return this.productForm.get(attribute).hasError('required') ? 'You must enter a value':'' ;\n    //     break;\n\n    //   default:\n    //     break;\n    // }\n  }\n  addComponent() {\n    if (this.selected && this.qty) {\n      console.log(this.selected);\n\n      const saveProductComponent: SaveProductComponent = {\n        productId: this.products[this.selected].productId,\n        quantity: this.qty\n      }\n      this.saveProducts.push(saveProductComponent);\n      this.viewSelectd.push({\n        productId: this.products[this.selected].productId,\n        productName: this.products[this.selected].productName,\n        quantity: this.qty\n      })\n      console.log(this.viewSelectd);\n      this.qtyError = false;\n      this.selected = null;\n      this.qty = null;\n    } else {\n      this.qtyError = true;\n    }\n  }\n\n  removeComponent(id: number) {\n    this.viewSelectd.splice(id, 1);\n    this.saveProducts.splice(id, 1);\n  }\n\n  onKey(value) {\n    this.products = this.search(value);\n  }\n  search(value: string) {\n    let filter = value.toLowerCase();\n    this.products = this._products;\n    return this.products.filter(option => option.productName.toLowerCase().startsWith(filter));\n  }\n}\n","<h1 mat-dialog-title i18n=\"@@addNewUser\">Add new User</h1>\n<form (keydown.enter)=\"$event.preventDefault()\" [formGroup]=\"userForm\" (ngSubmit)=\"onSubmit()\">\n  <div mat-dialog-content class=\"example-container\">\n    <mat-form-field>\n      <input matInput type=\"text\" i18n-placeholder=\"@@firstName\" placeholder=\"First Name\"\n        formControlName=\"firstName\">\n      <mat-error *ngIf=\"userForm.get('firstName').hasError('required')\" i18n=\"@@firstNameRequired\">First Name\n        cannot be empty.</mat-error>\n    </mat-form-field>\n    <mat-form-field>\n        <input matInput type=\"text\" i18n-placeholder=\"@@lastName\" placeholder=\"Last Name\"\n          formControlName=\"lastName\">\n        <mat-error *ngIf=\"userForm.get('lastName').hasError('required')\" i18n=\"@@lastNameRequired\">Last Name\n          cannot be empty.</mat-error>\n      </mat-form-field>\n      <mat-form-field>\n        <input matInput type=\"email\" i18n-placeholder=\"@@lastName\" placeholder=\"Email\"\n          formControlName=\"email\">\n        <mat-error *ngIf=\"userForm.get('email').hasError('required')\" i18n=\"@@emailRequired\">Email\n          cannot be empty.</mat-error>\n      </mat-form-field>\n    <mat-form-field>\n      <input matInput type=\"password\" i18n-placeholder=\"@@password\" placeholder=\"Password\"\n        formControlName=\"password\">\n      <mat-error *ngIf=\"userForm.get('password').hasError('required')\" i18n=\"@@passwordRequired\">Password\n        cannot be empty.</mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"inline\">\n      <mat-select formControlName=\"role\">\n        <mat-option value=\"2\">USER</mat-option>\n        <mat-option value=\"1\">ADMIN</mat-option>\n      </mat-select>\n    </mat-form-field>\n\n  </div>\n  <div mat-dialog-actions>\n    <button mat-button (click)=\"onCancelClick()\" i18n=\"@@cancel\">Cancel</button>\n    <button mat-button type=\"submit\" [disabled]=\"!userForm.valid\" i18n-placeholder=\"@@ok\">Ok</button>\n  </div>\n</form>","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { AddProductDialogComponent } from '../add-product-dialog/add-product-dialog.component';\n\n@Component({\n  selector: 'app-add-user-dialog',\n  templateUrl: './add-user-dialog.component.html',\n  styleUrls: ['./add-user-dialog.component.scss']\n})\nexport class AddUserDialogComponent implements OnInit {\n  userForm: FormGroup;\n\n  constructor(\n    public dialogRef: MatDialogRef<AddProductDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) { }\n\n  ngOnInit() {\n    this.userForm = new FormGroup({\n      \"firstName\": new FormControl(\"\",[\n        Validators.required\n      ]),\n      \"lastName\": new FormControl(\"\",[\n        Validators.required\n      ]),\n      \"email\": new FormControl(\"\",[\n        Validators.required\n      ]),\n      \"password\": new FormControl(\"\",[\n        Validators.required\n      ]),\n      \"role\": new FormControl(\"2\",[\n        Validators.required\n      ])\n    })\n  }\n  onCancelClick(): void {\n    this.dialogRef.close(null);\n  }\n  onSubmit(){\n    if(this.userForm.valid){\n      this.dialogRef.close(this.userForm.value);\n    }\n  }\n\n}\n","<h1 mat-dialog-title i18n=\"@@arrivalConfirmation\">Arrival Confirmation</h1>\n<div mat-dialog-content>\n    <h3 >\"{{data}}\" <span i18n=\"@@arrivalConfirmationMassege\">Are you sure you want to complete the arrival of</span></h3>\n  </div>\n  <div mat-dialog-actions>\n    <button mat-button [mat-dialog-close]=\"false\" i18n=\"@@cancel\">Cancel</button>\n    <button mat-raised-button color=\"warn\" [mat-dialog-close]=\"true\" cdkFocusInitial i18n=\"@@ok\">Ok</button>\n  </div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-arrival-order-dialog',\n  templateUrl: './arrival-order-dialog.component.html',\n  styleUrls: ['./arrival-order-dialog.component.scss']\n})\nexport class ArrivalOrderDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<ArrivalOrderDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: String,) { }\n\n  ngOnInit() {\n  }\n\n}\n","<h1 mat-dialog-title i18n=\"@@deleteConfirmation\">Delete Confirmation</h1>\n<div mat-dialog-content>\n    <h3 ><span i18n=\"@@deleteConfirmationMassege\">Are you sure you want to delete</span> \"{{data}}\"?</h3>\n  </div>\n  <div mat-dialog-actions>\n    <button mat-button [mat-dialog-close]=\"false\" i18n=\"@@cancel\">Cancel</button>\n    <button mat-raised-button color=\"warn\" [mat-dialog-close]=\"true\" cdkFocusInitial i18n=\"@@delete\">Delete</button>\n  </div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { EditProductSetDialogComponent } from '../edit-product-set-dialog/edit-product-set-dialog.component';\nimport { ProductSet } from 'src/app/models/ProductSet';\n\n@Component({\n  selector: 'app-delete-confirmation-dialog',\n  templateUrl: './delete-confirmation-dialog.component.html',\n  styleUrls: ['./delete-confirmation-dialog.component.scss']\n})\nexport class DeleteConfirmationDialogComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<DeleteConfirmationDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: String,\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n","<h1 mat-dialog-title>Edit customer</h1>\n<form (keydown.enter)=\"$event.preventDefault()\" [formGroup]=\"customerForm\" (ngSubmit)=\"onSubmit()\">\n<div mat-dialog-content class=\"example-container\">\n  <mat-form-field>\n    <input matInput type=\"text\" placeholder=\"Customer Name\" formControlName=\"customerName\">\n    <mat-error *ngIf=\"customerForm.get('customerName').invalid\">{{getErrorMessage('customerName')}}</mat-error>\n  </mat-form-field>\n  <mat-form-field>\n    <input matInput (keypress)=\"numberOnly($event)\" type=\"text\" placeholder=\"ZIP\" formControlName=\"zip\">\n    <mat-error *ngIf=\"customerForm.get('zip').invalid\">{{getErrorMessage('zip')}}</mat-error>\n  </mat-form-field>\n  <mat-form-field>\n    <input matInput type=\"text\" placeholder=\"Address\" formControlName=\"address\">\n    <mat-error *ngIf=\"customerForm.get('address').invalid\">{{getErrorMessage('address')}}</mat-error>\n  </mat-form-field>\n  <mat-form-field>\n    <input matInput (keypress)=\"numberOnly($event)\" type=\"text\" placeholder=\"Tel\" formControlName=\"tel\">\n    <mat-error *ngIf=\"customerForm.get('tel').invalid\">{{getErrorMessage('tel')}}</mat-error>\n  </mat-form-field>\n  <mat-form-field>\n    <input matInput type=\"text\" placeholder=\"Contact Name\" formControlName=\"contactName\">\n    <mat-error *ngIf=\"customerForm.get('contactName').invalid\">{{getErrorMessage('contactName')}}</mat-error>\n  </mat-form-field>\n  <mat-form-field >\n    <mat-label>Select a Type</mat-label>\n    <mat-select formControlName=\"type\">\n      <mat-option>None</mat-option>\n      <mat-option value=\"Customer\" >Customer</mat-option>\n      <mat-option value=\"Sales Destination\" >Sales Destination</mat-option>\n      <mat-option value=\"Contractor\" >Contractor</mat-option>\n    </mat-select>\n    <mat-error *ngIf=\"customerForm.get('type').invalid\">{{getErrorMessage('type')}}</mat-error>\n  </mat-form-field>\n \n</div>\n<div mat-dialog-actions>\n  <button mat-button type=\"button\" (click)=\"onCancelClick()\">Cancel</button>\n  <button mat-button type=\"submit\" [disabled]=\"!customerForm.valid\" >Ok</button>\n</div>\n</form>\n\n","import { Customer } from './../../models/Customer';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-edit-customer-dialog',\n  templateUrl: './edit-customer-dialog.component.html',\n  styleUrls: ['./edit-customer-dialog.component.scss']\n})\nexport class EditCustomerDialogComponent implements OnInit {\n\n  customerForm: FormGroup;\n  constructor(\n    public dialogRef: MatDialogRef<EditCustomerDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: Customer\n  ) { }\n\n  ngOnInit() {\n    this.initializeCustomerForm();\n  }\n\n  initializeCustomerForm(){\n    this.customerForm = new FormGroup({\n      \"customerName\": new FormControl(this.data.customerName,[\n        Validators.required\n      ]),\n      \"zip\": new FormControl(this.data.zip,[\n        Validators.maxLength(7),Validators.minLength(7)\n      ]),\n      \"address\": new FormControl(this.data.address,[\n      ]),\n      \"tel\": new FormControl(this.data.tel,[\n        Validators.required\n      ]),\n      \"contactName\": new FormControl(this.data.contactName,[\n        Validators.required\n      ]),\n      \"type\": new FormControl(this.data.type,[\n        Validators.required\n      ]),\n\n    })\n  }\n\n  numberOnly(event): boolean {\n    const charCode = (event.which) ? event.which : event.keyCode;\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\n      return false;\n    }\n    return true;\n\n  }\n  \n  onCancelClick(): void {\n    this.dialogRef.close(null);\n  }\n  onSubmit(){\n    if(this.customerForm.valid){\n      this.dialogRef.close(this.customerForm.value);\n      this.data = null;\n    }\n  }\n  getErrorMessage(attribute:string) {\n    return this.customerForm.get(attribute).hasError('required') ? 'You must enter a value':'' ;\n    // switch (attribute) {\n    //   case \"name\":\n    //       return this.productForm.get(attribute).hasError('required') ? 'You must enter a value':'' ;\n    //     break;\n    \n    //   default:\n    //     break;\n    // }\n  }\n\n}\n","<h1 mat-dialog-title i18n=\"@@editIncomingShipment\">Edit Incoming Shipment</h1>\n<form (keydown.enter)=\"$event.preventDefault()\" [formGroup]=\"incomingShipmentForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"container\" style=\"overflow-y: scroll; height:300px;\" >\n    <mat-form-field>\n      <input matInput type=\"text\" i18n-placeholder=\"@@shipmentNo\" placeholder=\"Shipment No\" formControlName=\"shipmentNo\">\n      <mat-error *ngIf=\"incomingShipmentForm.get('shipmentNo').invalid\">{{getErrorMessage('shipmentNo')}}</mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <input matInput type=\"date\" i18n-placeholder=\"@@arrivalDate\" placeholder=\"Arrival Date\" formControlName=\"arrivalDate\">\n      <mat-error *ngIf=\"incomingShipmentForm.get('arrivalDate').invalid\">{{getErrorMessage('arrivalDate')}}</mat-error>\n    </mat-form-field>\n\n  </div>\n  <div style=\"overflow-y: scroll; height:100px;\" *ngIf=\"viewSelectd.length > 0\">\n    <mat-card class=\"productList\" *ngFor=\"let element of viewSelectd; let i = index\">\n      {{element.productName}} : {{element.quantity}}\n      \n\n      <button align=\"end\" mat-stroked-button color=\"warn\"  type=\"button\" (click)=\"removeComponent(i)\" i18n=\"@@remove\">Remove</button>\n\n    </mat-card>\n    </div>\n    <mat-form-field class=\"inline\">\n      <mat-label i18n=\"@@selectProduct\">Select a product</mat-label>\n      <mat-select [(value)]=\"selected\">\n          <input (keyup)=\"onKey($event.target.value)\">\n        <mat-option i18n=\"@@none\"> None</mat-option>\n        <mat-option value=\"{{i}}\" *ngFor=\"let product of products; let i = index\">{{product.productName}}</mat-option>\n\n      </mat-select>\n    </mat-form-field>\n    <mat-form-field class=\"inline\">\n      <input matInput type=\"number\" min=\"1\" i18n-placeholder=\"@@quantity\" placeholder=\"QTY\" [(ngModel)]=\"qty\" [ngModelOptions]=\"{standalone: true}\">\n    </mat-form-field>\n    <mat-form-field class=\"inline\">\n        <input matInput type=\"number\" min=\"1\" i18n-placeholder=\"@@price\" placeholder=\"Price\" [(ngModel)]=\"price\" [ngModelOptions]=\"{standalone: true}\">\n      </mat-form-field>\n    <button mat-button type=\"button\" [disabled]=\"!selected && !qty\" (click)=\"addComponent()\" i18n=\"@@add\">Add</button>\n    <br><span class=\"qtyError\" *ngIf=\"qtyError\" color=\"red\" i18n=\"@@qtyRequired\">QTY cannot be empty</span>\n    <span class=\"qtyError\" *ngIf=\"priceError\" color=\"red\" i18n=\"@@priceRequired\">Price cannot be empty</span>\n    <span class=\"qtyError\" *ngIf=\"alreadyExistsError\" color=\"red\" i18n=\"@@productAlreadyExists\">Product is already added to the list.</span>\n\n  <div mat-dialog-actions>\n    <button mat-button (click)=\"onCancelClick()\" i18n=\"@@cancel\">Cancel</button>\n    <button mat-button type=\"submit\" [disabled]=\"!incomingShipmentForm.valid\" i18n=\"@@ok\">Ok</button>\n  </div>\n</form>","import { Component, OnInit, Inject } from '@angular/core';\nimport { SaveShipmentProduct } from 'src/app/models/SaveShipmentProduct';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Product } from 'src/app/models/Product';\nimport { SaveIncomingShipment } from 'src/app/models/SaveIncomingShipment';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { AddProductDialogComponent } from '../add-product-dialog/add-product-dialog.component';\nimport { ProductService } from 'src/app/services/ProductService';\n\n@Component({\n  selector: 'app-edit-incoming-shipment',\n  templateUrl: './edit-incoming-shipment.component.html',\n  styleUrls: ['./edit-incoming-shipment.component.scss']\n})\nexport class EditIncomingShipmentComponent implements OnInit {\n  incomingShipmentForm: FormGroup;\n  selected: number = null;\n  qty = null;\n  qtyError = false;\n  price = null;\n  priceError = false;\n  currency = \"JPY\";\n  viewSelectd: { productId: number, productName: String, quantity: number, price: number, currency: string }[] = [];\n  products: Product[] = [];\n  _products: Product[] = [];\n  saveIncomingShipment: SaveIncomingShipment;\n  saveShipmentProducts: SaveShipmentProduct[] = [];\n  alreadyExistsError: boolean;\n  constructor(\n    public dialogRef: MatDialogRef<AddProductDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private productService: ProductService\n  ) { }\n\n\n  ngOnInit() {\n    this.initializeShipmentForm();\n    this.getProductData();\n\n  }\n  initializeShipmentForm() {\n    const aDate = new Date(this.data.arrivalDate).toISOString().substring(0, 10);\n    this.incomingShipmentForm = new FormGroup({\n      \"shipmentNo\": new FormControl(this.data.shipmentNo, [\n        Validators.required\n      ]),\n      \"arrivalDate\": new FormControl(aDate, [\n        Validators.required\n      ]),\n    })\n    for (let product of this.data.products) {\n      const saveShipmentProduct: SaveShipmentProduct = {\n        productId: product.product.productId,\n        quantity: product.quantity,\n        price: product.price\n      }\n      this.saveShipmentProducts.push(saveShipmentProduct);\n      this.viewSelectd.push({\n        productId: product.product.productId,\n        productName: product.product.productName,\n        quantity: product.quantity,\n        price: product.price,\n        currency: product.currency\n      })\n    }\n\n  }\n  getProductData() {\n    this.productService.getProducts().subscribe(result => {\n      this.products = result;\n      this._products = result;\n    })\n  }\n  onCancelClick(): void {\n    this.dialogRef.close(null);\n  }\n  onSubmit() {\n    if (this.incomingShipmentForm.valid) {\n      this.saveIncomingShipment = this.incomingShipmentForm.value;\n      this.saveIncomingShipment.products = this.saveShipmentProducts;\n      this.saveIncomingShipment.arrivalDate = new Date(this.incomingShipmentForm.value.arrivalDate).toISOString();\n      console.log(new Date(this.incomingShipmentForm.value.arrivalDate).toISOString());\n      this.saveIncomingShipment.incomingShipmentId = this.data.incomingShipmentId;\n      this.dialogRef.close(this.saveIncomingShipment);\n    }\n  }\n  getErrorMessage(attribute: string) {\n    return this.incomingShipmentForm.get(attribute).hasError('required') ? 'You must enter a value' : '';\n    // switch (attribute) {\n    //   case \"name\":\n    //       return this.productForm.get(attribute).hasError('required') ? 'You must enter a value':'' ;\n    //     break;\n\n    //   default:\n    //     break;\n    // }\n  }\n  addComponent() {\n    if (this.selected && this.qty && this.price) {\n      console.log(this.selected);\n\n      const saveShipmentProduct: SaveShipmentProduct = {\n        productId: this.products[this.selected].productId,\n        quantity: this.qty,\n        price: this.price,\n        currency: this.currency\n      }\n      //check the product is already exists\n      this.alreadyExistsError = false;\n      this.saveShipmentProducts.forEach(product => {\n        if (product.productId == saveShipmentProduct.productId)\n          this.alreadyExistsError = true;\n      })\n      if (!this.alreadyExistsError) {\n        this.saveShipmentProducts.push(saveShipmentProduct);\n        this.viewSelectd.push({\n          productId: this.products[this.selected].productId,\n          productName: this.products[this.selected].productName,\n          quantity: this.qty,\n          price: this.price,\n          currency: this.currency\n        })\n        console.log(this.viewSelectd);\n        this.qtyError = false;\n        this.selected = null;\n        this.qty = null;\n        this.price = null;\n        this.priceError = false;\n        this.alreadyExistsError = false;\n      }\n    } else if (!this.qty) {\n      this.qtyError = true;\n    } else if (!this.price) {\n      this.priceError = true;\n    }\n  }\n  removeComponent(id: number) {\n    this.viewSelectd.splice(id, 1);\n    this.saveShipmentProducts.splice(id, 1);\n  }\n  onKey(value) {\n    this.products = this.search(value);\n  }\n  search(value: string) {\n    let filter = value.toLowerCase();\n    this.products = this._products;\n    return this.products.filter(option => option.productName.toLowerCase().startsWith(filter));\n  }\n}\n","<h1 mat-dialog-title>Edit Order</h1>\n\n<form (keydown.enter)=\"$event.preventDefault()\" [formGroup]=\"orderForm\" (ngSubmit)=\"onSubmit()\">\n    <div mat-dialog-content>\n        <div class=\"container\" style=\"overflow-y: scroll; height:350px;\">\n            <mat-form-field>\n                <input matInput type=\"text\" placeholder=\"Proposal Number\" formControlName=\"proposalNo\">\n                <mat-error *ngIf=\"orderForm.get('proposalNo').invalid\">{{getErrorMessage('proposalNo')}}</mat-error>\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>Select a customer</mat-label>\n                <mat-select formControlName=\"customerId\">\n                    <input (keyup)=\"onKey($event.target.value,'customers')\">\n                    <mat-option>None</mat-option>\n                    <div *ngFor=\"let customer of customers\">\n                        <mat-option [value]=\"customer.customerId\" *ngIf=\"customer.type=='Customer'\">\n                            {{customer.customerName}}\n                        </mat-option>\n                    </div>\n                </mat-select>\n                <mat-error *ngIf=\"orderForm.get('customerId').invalid\">{{getErrorMessage('customerId')}}</mat-error>\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>Select a Sales Destination</mat-label>\n                <mat-select formControlName=\"salesDestinationId\">\n                    <input (keyup)=\"onKey($event.target.value,'salesD')\">\n                    <mat-option>None</mat-option>\n                    <div *ngFor=\"let customer of salesD\">\n                        <mat-option [value]=\"customer.customerId\" *ngIf=\"customer.type=='Sales Destination'\">\n                            {{customer.customerName}}</mat-option>\n                    </div>\n                </mat-select>\n                <mat-error *ngIf=\"orderForm.get('salesDestinationId').invalid\">{{getErrorMessage('salesDestinationId')}}\n                </mat-error>\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>Select a Contractor</mat-label>\n                <mat-select formControlName=\"contractorId\">\n                    <input (keyup)=\"onKey($event.target.value,'contractors')\">\n                    <mat-option>None</mat-option>\n                    <div *ngFor=\"let customer of contractors\">\n                        <mat-option [value]=\"customer.customerId\" *ngIf=\"customer.type=='Contractor'\">\n                            {{customer.customerName}}</mat-option>\n                    </div>\n                </mat-select>\n                <mat-error *ngIf=\"orderForm.get('contractorId').invalid\">{{getErrorMessage('contractorId')}}\n                </mat-error>\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput type=\"date\" placeholder=\"Received Date\" formControlName=\"receivedDate\">\n                <mat-error *ngIf=\"orderForm.get('receivedDate').invalid\">{{getErrorMessage('receivedDate')}}</mat-error>\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput type=\"date\" #dueDateBox (keydown.enter)=\"calculateDelivery(dueDateBox.value)\"\n                    (blur)=\"calculateDelivery(dueDateBox.value)\" i18n-placeholder=\"@@dueDate\" placeholder=\"Due Date\"\n                    formControlName=\"dueDate\">\n                <mat-error *ngIf=\"orderForm.get('dueDate').hasError('required')\" i18n=\"@@dueDateRequired\">Due Date\n                    cannot be\n                    empty.</mat-error>\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput type=\"date\" i18n-placeholder=\"@@deliveryDate\" placeholder=\"Delivery Date\"\n                    formControlName=\"deliveryDate\">\n                <mat-error *ngIf=\"orderForm.get('deliveryDate').hasError('required')\" i18n=\"@@deliveryDateRequired\">\n                    Delivery\n                    Date cannot be\n                    empty.</mat-error>\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>Select a Sales User</mat-label>\n                <mat-select formControlName=\"salesUserId\">\n                    <input (keyup)=\"onKey($event.target.value,'users')\">\n                    <mat-option>None</mat-option>\n                    <div *ngFor=\"let user of users\">\n                        <mat-option [value]=\"user.userId\">{{user.firstName}} {{user.lastName}}</mat-option>\n\n                    </div>\n                </mat-select>\n                <mat-error *ngIf=\"orderForm.get('salesUserId').invalid\">{{getErrorMessage('salesUserId')}}\n                </mat-error>\n            </mat-form-field>\n        </div>\n        <div style=\"overflow-y: scroll; height:100px;\" *ngIf=\"viewSelectd.length > 0\">\n            <mat-card class=\"productList\" *ngFor=\"let element of viewSelectd; let i = index\">\n                {{element.productName}} : {{element.quantity}}\n\n\n                <button align=\"end\" mat-stroked-button color=\"warn\" type=\"button\"\n                    (click)=\"removeComponent(i)\">Remove</button>\n\n            </mat-card>\n        </div>\n        <mat-form-field class=\"inline\">\n            <mat-label>Select a product</mat-label>\n            <mat-select [(value)]=\"selected\">\n                <input (keyup)=\"onKey($event.target.value,'products')\">\n                <mat-option>None</mat-option>\n                <mat-option value=\"{{i}}\" *ngFor=\"let product of productSets; let i = index\">{{product.productName}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <mat-form-field class=\"inline\">\n            <input matInput type=\"number\" min=\"1\" placeholder=\"QTY\" [(ngModel)]=\"qty\"\n                [ngModelOptions]=\"{standalone: true}\">\n            <mat-error>QTY cannot be empty</mat-error>\n        </mat-form-field>\n        <button mat-button type=\"button\" [disabled]=\"!selected && !qty\" (click)=\"addComponent()\">Add</button>\n        <br><span class=\"qtyError\" *ngIf=\"qtyError\" color=\"red\">QTY cannot be empty</span>\n        <mat-form-field class=\"inline\">\n            <input matInput type=\"text\" placeholder=\"Edit Reason\" formControlName=\"editReason\">\n            <mat-error>Edit Reason cannot be empty</mat-error>\n        </mat-form-field>\n\n    </div>\n    <div mat-dialog-actions>\n        <button mat-button (click)=\"onCancelClick()\">Cancel</button>\n        <button mat-button type=\"submit\" [disabled]=\"!orderForm.valid\">Ok</button>\n    </div>\n</form>","import { User } from './../../models/User';\nimport { SaveOrder } from './../../models/SaveOrder';\nimport { Order } from './../../models/Order';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { SaveProductComponent } from 'src/app/models/saveProductComponent';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Customer } from 'src/app/models/Customer';\nimport { Product } from 'src/app/models/Product';\nimport { ProductSet } from 'src/app/models/ProductSet';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { CustomerService } from 'src/app/services/CustomerService';\nimport { ProductService } from 'src/app/services/ProductService';\nimport { UserService } from 'src/app/services/UserService';\n\n@Component({\n  selector: 'app-edit-order-dialog',\n  templateUrl: './edit-order-dialog.component.html',\n  styleUrls: ['./edit-order-dialog.component.scss']\n})\nexport class EditOrderDialogComponent implements OnInit {\n\n  selected: number = null;\n  qty = null;\n  qtyError = false;\n  viewSelectd: { productId: number, productName: String, quantity: number }[] = [];\n  saveProducts: SaveProductComponent[] = [];\n  orderForm: FormGroup;\n  customers: Customer[] = [];\n  salesD: Customer[] = [];\n  contractors: Customer[] = [];\n  _customers: Customer[] = [];\n  products: Product[] = [];\n  productSets: ProductSet[] = [];\n  _productSets: ProductSet[] = [];\n  users: User[] = [];\n  _users:User[] =[];\n  constructor(\n    public dialogRef: MatDialogRef<EditOrderDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: Order,\n    private customerService: CustomerService,\n    private productService: ProductService,\n    private userService: UserService\n  ) { }\n\n  ngOnInit() {\n    this.getCustomerData();\n    this.initializeCustomerForm();\n    this.getProductData();\n    this.getUserData();\n  }\n  getCustomerData() {\n    this.customerService.getCustomers().subscribe(result => {\n      this.customers = result;\n      this._customers = result;\n      this.contractors = result;\n      this.salesD = result;\n      console.log(this.customers)\n    })\n  }\n  getUserData() {\n    this.userService.getUsers().subscribe(result => {\n      this.users = result;\n      this._users = result;\n    })\n  }\n\n  initializeCustomerForm() {\n    console.log(\"popup data\");\n    console.log(this.data);\n    const rDate = new Date(this.data.receivedDate).toISOString().substring(0, 10);\n    const dDate = new Date(this.data.dueDate).toISOString().substring(0, 10);\n    const delDate = new Date(this.data.deliveryDate).toISOString().substring(0, 10);\n\n    this.orderForm = new FormGroup({\n      \"proposalNo\": new FormControl(this.data.proposalNo, [\n        Validators.required\n      ]),\n      \"customerId\": new FormControl(this.data.customer.customerId, [\n        Validators.required\n      ]),\n      \"salesDestinationId\": new FormControl(this.data.salesDestination.customerId, [\n        Validators.required\n      ]),\n      \"contractorId\": new FormControl(this.data.contractor.customerId, [\n        Validators.required\n      ]),\n      \"receivedDate\": new FormControl(rDate, [\n        Validators.required\n      ]),\n      \"dueDate\": new FormControl(dDate, [\n        Validators.required\n      ]),\n      \"deliveryDate\": new FormControl(delDate, [\n        Validators.required\n      ]),\n      \"salesUserId\": new FormControl(this.data.salesUser.userId, [\n        Validators.required\n      ]),\n\n      \"editReason\": new FormControl(\"\", [\n        Validators.required\n      ]),\n\n    });\n    //this.orderForm.controls['customer'].setValue(this.data.customer.customerId,{onlySelf: true})\n    for (let product of this.data.orderedProducts) {\n      this.viewSelectd.push({\n        productId: product.product.productId,\n        productName: product.product.productName,\n        quantity: product.quantity\n      });\n      this.saveProducts.push({\n        productId: product.product.productId,\n        quantity: product.quantity\n      });\n    }\n  }\n\n  onCancelClick(): void {\n    this.dialogRef.close(null);\n  }\n  onSubmit() {\n    if (this.orderForm.valid) {\n      const order: SaveOrder = this.orderForm.value;\n      order.orderedProducts = this.saveProducts;\n      order.receivedDate = new Date(this.orderForm.value.receivedDate).toISOString();\n      order.dueDate = new Date(this.orderForm.value.dueDate).toISOString();\n      order.deliveryDate = new Date(this.orderForm.value.deliveryDate).toISOString();\n      this.dialogRef.close(order);\n    }\n  }\n  getErrorMessage(attribute: string) {\n    return this.orderForm.get(attribute).hasError('required') ? 'You must enter a value' : '';\n    // switch (attribute) {\n    //   case \"zip\":\n    //       // return this.customerForm.get(attribute).hasError('required') ? 'You must enter a value':\n    //       // this.customerForm.get(attribute).hasError('maxlength') ? 'zip code length must be 7': \n    //       // this.customerForm.get(attribute).hasError('minlength') ? 'zip code length must be 7': '';\n    //     break;\n\n    //   default:\n    //       return this.orderForm.get(attribute).hasError('required') ? 'You must enter a value':'' ;\n    //     break;\n    // }\n  }\n  addComponent() {\n    if (this.selected && this.qty) {\n      console.log(this.selected);\n\n      const saveProductComponent: SaveProductComponent = {\n        productId: this.productSets[this.selected].productId,\n        quantity: this.qty\n      }\n      this.saveProducts.push(saveProductComponent);\n      this.viewSelectd.push({\n        productId: this.productSets[this.selected].productId,\n        productName: this.productSets[this.selected].productName,\n        quantity: this.qty\n      })\n      console.log(this.viewSelectd);\n      this.qtyError = false;\n      this.selected = null;\n      this.qty = null;\n    } else {\n      this.qtyError = true;\n    }\n  }\n\n  removeComponent(id: number) {\n    this.viewSelectd.splice(id, 1);\n    this.saveProducts.splice(id, 1);\n  }\n  getProductData() {\n    this.productService.getProductSets().subscribe(result => {\n      this.productSets = result;\n      this.productService.getProducts().subscribe(presult => {\n        for (let product of presult) {\n          const p: ProductSet = {\n\n            active: product.active,\n            productId: product.productId,\n            price: product.price,\n            productName: product.productName,\n            createdAt: product.createdAt,\n            description: product.description,\n            isSet: product.isSet,\n            leadTime: product.leadTime,\n            moq: product.moq,\n            obicNo: product.obicNo,\n            products: null,\n            quantity: product.quantity,\n            updatedAt: product.updatedAt,\n            userId: product.userId\n          };\n          this.productSets.push(p);\n        }\n        this._productSets = this.productSets; \n      })\n    })\n  }\n  onKey(value, key) {\n    switch (key) {\n      case 'products':\n        this.productSets = this.searchProducts(value);\n        break;\n      case 'customers':\n        this.customers = this.searchCustomers(value);\n        break;\n      case 'salesD':\n        this.salesD = this.searchSalesD(value);\n        break;\n      case 'contractors':\n        this.contractors = this.searchContractors(value);\n        break;\n\n      case 'users':\n        this.users = this.searchUsers(value);\n        break;\n\n      default:\n        break;\n    }\n  }\n  onClick(key) {\n    switch (key) {\n      case 'products':\n        this.productSets = this._productSets;\n        break;\n      case 'customers':\n        this.customers = this._customers;\n        break;\n      case 'users':\n        this.users = this._users;\n        break;\n\n      default:\n        break;\n    }\n  }\n  searchProducts(value: string) {\n    let filter = value.toLowerCase();\n    this.productSets = this._productSets;\n    return this.productSets.filter(option => option.productName.toLowerCase().startsWith(filter));\n  }\n  searchUsers(value: string) {\n    let filter = value.toLowerCase();\n    this.users = this._users;\n    return this.users.filter(option => option.firstName.toLowerCase().startsWith(filter));\n  }\n  searchCustomers(value: string) {\n    let filter = value.toLowerCase();\n    this.customers = this._customers;\n    return this.customers.filter(option => option.customerName.toLowerCase().startsWith(filter));\n  }\n  searchContractors(value: string) {\n    let filter = value.toLowerCase();\n    this.contractors = this._customers;\n    return this.contractors.filter(option => option.customerName.toLowerCase().startsWith(filter));\n  }\n  searchSalesD(value: string) {\n    let filter = value.toLowerCase();\n    this.salesD = this._customers;\n    return this.salesD.filter(option => option.customerName.toLowerCase().startsWith(filter));\n  }\n  calculateDelivery(value) {\n    const dueDate = new Date(value);\n    const deliveryDate = dueDate;\n    deliveryDate.setDate(dueDate.getDate()-14);\n    console.log(deliveryDate);\n    this.orderForm.get(\"deliveryDate\").setValue(deliveryDate.toISOString().substring(0,10));\n  }\n}\n","<h1 mat-dialog-title i18n=\"@@editOutgoingShipment\">edit Outgoing Shipment</h1>\n<form (keydown.enter)=\"$event.preventDefault()\" [formGroup]=\"outgoingShipmentForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"container\" style=\"overflow-y: scroll; height:300px;\" >\n    <mat-form-field>\n      <input matInput type=\"text\" i18n-placeholder=\"@@shipmentNo\" placeholder=\"Shipment No\" formControlName=\"shipmentNo\">\n      <mat-error *ngIf=\"outgoingShipmentForm.get('shipmentNo').invalid\">{{getErrorMessage('shipmentNo')}}</mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <input matInput type=\"date\" i18n-placeholder=\"@@shipmentDate\" placeholder=\"Shipment Date\" formControlName=\"shipmentDate\">\n      <mat-error *ngIf=\"outgoingShipmentForm.get('shipmentDate').invalid\">{{getErrorMessage('shipmentDate')}}</mat-error>\n    </mat-form-field>\n    <mat-form-field>\n        <mat-label i18n=\"@@selectSalesDestination\">Select a Sales Destination</mat-label>\n        <mat-select formControlName=\"salesDestinationId\">\n            <mat-option i18n=\"@@none\">None</mat-option>\n            <div *ngFor=\"let customer of customers\">\n                <mat-option [value]=\"customer.customerId\" *ngIf=\"customer.type=='Sales Destination'\">\n                    {{customer.customerName}}</mat-option>\n            </div>\n        </mat-select>\n        <mat-error *ngIf=\"outgoingShipmentForm.get('salesDestinationId').hasError('required')\" i18n=\"@@salesDestinationRequired\">Sales Destination cannot be empty.\n        </mat-error>\n    </mat-form-field>\n\n  </div>\n  <div style=\"overflow-y: scroll; height:100px;\" *ngIf=\"viewSelectd.length > 0\">\n    <mat-card class=\"productList\" *ngFor=\"let element of viewSelectd; let i = index\">\n      {{element.productName}} : {{element.quantity}}\n      \n\n      <button align=\"end\" mat-stroked-button color=\"warn\"  type=\"button\" (click)=\"removeComponent(i)\" i18n=\"@@remove\">Remove</button>\n\n    </mat-card>\n    </div>\n    <mat-form-field class=\"inline\">\n      <mat-label i18n=\"@@selectProduct\">Select a product</mat-label>\n      <mat-select [(value)]=\"selected\">\n        <mat-option i18n=\"@@none\"> None</mat-option>\n        <mat-option value=\"{{i}}\" *ngFor=\"let product of products; let i = index\">{{product.productName}}</mat-option>\n\n      </mat-select>\n    </mat-form-field>\n    <mat-form-field class=\"inline\">\n      <input matInput type=\"number\" min=\"1\" i18n-placeholder=\"@@quantity\" placeholder=\"QTY\" [(ngModel)]=\"qty\" [ngModelOptions]=\"{standalone: true}\">\n    </mat-form-field>\n    <button mat-button type=\"button\" [disabled]=\"!selected && !qty\" (click)=\"addComponent()\" i18n=\"@@add\">Add</button>\n    <br><span class=\"qtyError\" *ngIf=\"qtyError\" color=\"red\" i18n=\"@@qtyRequired\">QTY cannot be empty</span>\n    \n\n  <div mat-dialog-actions>\n    <button mat-button (click)=\"onCancelClick()\" i18n=\"@@cancel\">Cancel</button>\n    <button mat-button type=\"submit\" [disabled]=\"!outgoingShipmentForm.valid\" i18n=\"@@ok\">Ok</button>\n  </div>\n</form>","import { Component, OnInit, Inject } from '@angular/core';\nimport { SaveProductComponent } from 'src/app/models/saveProductComponent';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Customer } from 'src/app/models/Customer';\nimport { Product } from 'src/app/models/Product';\nimport { SaveOutgoingShipment } from 'src/app/models/SaveOutgoingShipment';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { AddOutgoingShipmentComponent } from '../add-outgoing-shipment/add-outgoing-shipment.component';\nimport { CustomerService } from 'src/app/services/CustomerService';\nimport { ProductService } from 'src/app/services/ProductService';\n\n@Component({\n  selector: 'app-edit-outgoing-shipment',\n  templateUrl: './edit-outgoing-shipment.component.html',\n  styleUrls: ['./edit-outgoing-shipment.component.scss']\n})\nexport class EditOutgoingShipmentComponent implements OnInit {\n  outgoingShipmentForm: FormGroup;\n  selected: number = null;\n  qty = null;\n  qtyError = false;\n  price = null;\n  priceError = false;\n  customers: Customer[] = [];\n  viewSelectd: { productId: number, productName: String, quantity: number }[] = [];\n  products: Product[] = [];\n  saveOutgoingShipment: SaveOutgoingShipment;\n  saveShipmentProducts: SaveProductComponent[] = [];\n  constructor(\n    public dialogRef: MatDialogRef<AddOutgoingShipmentComponent>,\n    private customerService: CustomerService,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private productService: ProductService\n  ) { }\n\n\n  ngOnInit() {\n    this.initializeShipmentForm();\n    this.getProductData();\n    this.getCustomerData();\n  }\n  initializeShipmentForm() {\n    console.log(this.data);\n    const sDate = new Date(this.data.shipmentDate).toISOString().substring(0, 10);\n    this.outgoingShipmentForm = new FormGroup({\n      \"shipmentNo\": new FormControl(this.data.shipmentNo, [\n        Validators.required\n      ]),\n      \"shipmentDate\": new FormControl(sDate, [\n        Validators.required\n      ]),\n      \"salesDestinationId\": new FormControl(this.data.salesDestination.customerId, [\n        Validators.required\n      ]),\n    });\n    for (let product of this.data.products) {\n      const saveShipmentProduct: SaveProductComponent = {\n        productId : product.product.productId,\n        quantity : product.quantity\n      }\n      this.saveShipmentProducts.push(saveShipmentProduct);\n      this.viewSelectd.push({\n        productId : product.product.productId,\n        quantity : product.quantity,\n        productName: product.product.productName,\n      })\n    }\n  }\n  getCustomerData() {\n    this.customerService.getCustomers().subscribe(result => {\n      this.customers = result;\n      console.log(this.customers)\n    })\n  }\n  getProductData() {\n    this.productService.getProducts().subscribe(result => {\n      this.products = result;\n    })\n  }\n  onCancelClick(): void {\n    this.dialogRef.close(null);\n  }\n  onSubmit() {\n    if (this.outgoingShipmentForm.valid) {\n      this.saveOutgoingShipment = this.outgoingShipmentForm.value;\n      this.saveOutgoingShipment.products = this.saveShipmentProducts;\n      this.saveOutgoingShipment.shipmentDate = new Date(this.outgoingShipmentForm.value.shipmentDate).toISOString();\n      this.saveOutgoingShipment.outgoingShipmentId = this.data.outgoingShipmentId;\n      console.log(this.saveOutgoingShipment);\n      this.dialogRef.close(this.saveOutgoingShipment);\n    }\n  }\n  getErrorMessage(attribute: string) {\n    return this.outgoingShipmentForm.get(attribute).hasError('required') ? 'You must enter a value' : '';\n    // switch (attribute) {\n    //   case \"name\":\n    //       return this.productForm.get(attribute).hasError('required') ? 'You must enter a value':'' ;\n    //     break;\n\n    //   default:\n    //     break;\n    // }\n  }\n  addComponent() {\n    if (this.selected && this.qty) {\n      console.log(this.selected);\n\n      const saveShipmentProduct: SaveProductComponent = {\n        productId: this.products[this.selected].productId,\n        quantity: this.qty\n      }\n      this.saveShipmentProducts.push(saveShipmentProduct);\n      this.viewSelectd.push({\n        productId: this.products[this.selected].productId,\n        productName: this.products[this.selected].productName,\n        quantity: this.qty\n      })\n      console.log(this.viewSelectd);\n      this.qtyError = false;\n      this.selected = null;\n      this.qty = null;\n      this.price = null;\n      this.priceError = false;\n    } else if (!this.qty) {\n      this.qtyError = true;\n    }\n  }\n  removeComponent(id: number) {\n    this.viewSelectd.splice(id, 1);\n    this.saveShipmentProducts.splice(id, 1);\n  }\n}\n","<h1 mat-dialog-title i18n=\"@@updateProductSet\">Edit product set</h1>\n<form [formGroup]=\"productForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"container\" style=\"overflow-y: scroll; height:350px;\">\n    <mat-form-field>\n      <input matInput type=\"text\" i18n-placeholder=\"@@productSetName\" placeholder=\"Product Name\" placeholder=\"Product Set Name\"\n        formControlName=\"productName\">\n      <mat-error *ngIf=\"productForm.get('productName').hasError('required')\" i18n=\"@@productSetNameRequired\">Product Set Name\n        cannot be empty.</mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <input matInput type=\"text\" i18n-placeholder=\"@@description\" placeholder=\"Product Name\" placeholder=\"Description\"\n        formControlName=\"description\">\n      <mat-error *ngIf=\"productForm.get('description').hasError('required')\" i18n=\"@@descriptionRequired\">\n        {{getErrorMessage('description')}}</mat-error>\n    </mat-form-field>\n    <mat-form-field class=\"inline\">\n      <input matInput type=\"number\" min=\"1\" i18n-placeholder=\"@@price\" placeholder=\"Price\" formControlName=\"price\">\n      <mat-error *ngIf=\"productForm.get('price').hasError('required')\" i18n=\"@@priceRequired\">Price cannot be empty.\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field class=\"inline\">\n      <mat-select formControlName=\"currency\">\n        <mat-option se value=\"JPY\">JPY</mat-option>\n        <mat-option value=\"USD\">USD</mat-option>\n      </mat-select>\n    </mat-form-field>\n    <!-- <mat-form-field>\n      <input matInput type=\"number\" i18n-placeholder=\"@@quantity\" placeholder=\"Product Name\" placeholder=\"QTY\" formControlName=\"quantity\">\n      <mat-error *ngIf=\"productForm.get('quantity').hasError('required')\" i18n=\"@@qtyRequired\">{{getErrorMessage('quantity')}}</mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <input matInput type=\"number\" i18n-placeholder=\"@@leadTime\" placeholder=\"Product Name\" placeholder=\"Lead Time\" formControlName=\"leadTime\">\n      <mat-error *ngIf=\"productForm.get('leadTime').hasError('required')\" i18n=\"@@leadTimeRequired\">{{getErrorMessage('leadTime')}}</mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <input matInput type=\"text\" i18n-placeholder=\"@@moq\" placeholder=\"Product Name\" placeholder=\"MOQ\" formControlName=\"moq\">\n      <mat-error *ngIf=\"productForm.get('moq').hasError('required')\" i18n=\"@@moqRequired\">{{getErrorMessage('moq')}}</mat-error>\n    </mat-form-field> -->\n    <mat-form-field>\n      <input matInput type=\"text\" i18n-placeholder=\"@@obicNo\" placeholder=\"Product Name\" placeholder=\"Obic No\"\n        formControlName=\"obicNo\">\n      <mat-error *ngIf=\"productForm.get('obicNo').hasError('required')\" i18n=\"@@obicNoRequired\">\n        {{getErrorMessage('obicNo')}}</mat-error>\n    </mat-form-field>\n\n  </div>\n  <div style=\"overflow-y: scroll; height:100px;\" *ngIf=\"viewSelectd.length > 0\">\n    <mat-card class=\"productList\" *ngFor=\"let element of viewSelectd; let i = index\">\n      {{element.productName}} : {{element.quantity}}\n\n\n      <button align=\"end\" mat-stroked-button color=\"warn\" type=\"button\" (click)=\"removeComponent(i)\"\n        i18n=\"@@remove\">Remove</button>\n\n    </mat-card>\n  </div>\n  <mat-form-field class=\"inline\">\n    <mat-label i18n=\"@@selectProduct\">Select a product</mat-label>\n    <mat-select [(value)]=\"selected\">\n      <input (keyup)=\"onKey($event.target.value)\">\n      <mat-option i18n=\"@@none\">None</mat-option>\n      <mat-option value=\"{{i}}\" *ngFor=\"let product of products; let i = index\">{{product.productName}}</mat-option>\n\n    </mat-select>\n  </mat-form-field>\n  <mat-form-field class=\"inline\">\n    <input matInput type=\"number\" min=\"1\" i18n-placeholder=\"@@quantity\" placeholder=\"QTY\" [(ngModel)]=\"qty\"\n      [ngModelOptions]=\"{standalone: true}\">\n  </mat-form-field>\n  <button mat-button type=\"button\" [disabled]=\"!selected && !qty\" (click)=\"addComponent()\" i18n=\"@@add\">Add</button>\n  <br><span class=\"qtyError\" *ngIf=\"qtyError\" color=\"red\" i18n=\"@@qtyRequired\">QTY cannot be empty</span>\n\n  <div mat-dialog-actions>\n    <button mat-button (click)=\"onCancelClick()\" i18n=\"@@cancel\">Cancel</button>\n    <button mat-button type=\"submit\" [disabled]=\"!productForm.valid\" i18n=\"@@ok\">Ok</button>\n  </div>\n</form>","import { ProductSet } from './../../models/ProductSet';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { SaveProductSet } from 'src/app/models/saveProductSet';\nimport { SaveProductComponent } from 'src/app/models/saveProductComponent';\nimport { Product } from 'src/app/models/Product';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { ProductService } from 'src/app/services/ProductService';\n\n@Component({\n  selector: 'app-edit-product-set-dialog',\n  templateUrl: './edit-product-set-dialog.component.html',\n  styleUrls: ['./edit-product-set-dialog.component.scss']\n})\nexport class EditProductSetDialogComponent implements OnInit {\n  selected: number = null;\n  qty = null;\n  qtyError = false;\n  productForm: FormGroup;\n  saveProductSet: SaveProductSet;\n  saveProducts: SaveProductComponent[] = [];\n  viewSelectd: { productId: number, productName: String, quantity: number }[] = [];\n  products: Product[] = [];\n  _products : Product[] = [];\n  constructor(\n    public dialogRef: MatDialogRef<EditProductSetDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: ProductSet,\n    private productService: ProductService\n  ) { }\n\n  ngOnInit() {\n    this.initializeProductForm();\n    this.getProductData();\n    this.initializeProducts();\n  }\n  getProductData() {\n    this.productService.getProducts().subscribe(result => {\n      this.products = result;\n      this._products = result;\n    })\n  }\n  initializeProductForm() {\n    this.productForm = new FormGroup({\n      \"productName\": new FormControl(this.data.productName, [\n        Validators.required\n      ]),\n      \"description\": new FormControl(this.data.description, [\n        Validators.required\n      ]),\n      \"price\": new FormControl(this.data.price, [\n        Validators.required\n      ]),\n      \"currency\": new FormControl(this.data.currency?this.data.currency:\"JPY\", [\n        Validators.required\n      ]),\n      // \"quantity\": new FormControl(this.data.quantity, [\n      //   Validators.required\n      // ]),\n      // \"leadTime\": new FormControl(this.data.leadTime, [\n      //   Validators.required\n      // ]),\n      // \"moq\": new FormControl(this.data.moq, [\n      //   Validators.required\n      // ]),\n      \"obicNo\": new FormControl(this.data.obicNo, [\n        Validators.required\n      ]),\n\n    })\n  }\n  onCancelClick(): void {\n    this.dialogRef.close(null);\n  }\n  onSubmit() {\n    if (this.productForm.valid) {\n      this.saveProductSet = this.productForm.value;\n      this.saveProductSet.products = this.saveProducts;\n      this.dialogRef.close(this.saveProductSet);\n    }\n  }\n  getErrorMessage(attribute: string) {\n    return this.productForm.get(attribute).hasError('required') ? 'You must enter a value' : '';\n    // switch (attribute) {\n    //   case \"name\":\n    //       return this.productForm.get(attribute).hasError('required') ? 'You must enter a value':'' ;\n    //     break;\n\n    //   default:\n    //     break;\n    // }\n  }\n  addComponent() {\n    if (this.selected && this.qty) {\n      console.log(this.selected);\n\n      const saveProductComponent: SaveProductComponent = {\n        productId: this.products[this.selected].productId,\n        quantity: this.qty\n      }\n      this.saveProducts.push(saveProductComponent);\n      this.viewSelectd.push({\n        productId: this.products[this.selected].productId,\n        productName: this.products[this.selected].productName,\n        quantity: this.qty\n      })\n      console.log(this.viewSelectd);\n      this.qtyError = false;\n      this.selected = null;\n      this.qty = null;\n    } else {\n      this.qtyError = true;\n    }\n  }\n\n  removeComponent(id: number) {\n    this.viewSelectd.splice(id, 1);\n    this.saveProducts.splice(id, 1);\n  }\n\n  initializeProducts() {\n    for (let product of this.data.products) {\n      const saveProductComponent: SaveProductComponent = {\n        productId: product.product.productId,\n        quantity: product.quantity\n      }\n      this.saveProducts.push(saveProductComponent);\n      this.viewSelectd.push({\n        productId: product.product.productId,\n        productName: product.product.productName,\n        quantity: product.quantity\n      });\n    }\n  }\n\n  onKey(value) {\n    this.products = this.search(value);\n  }\n  search(value: string) {\n    let filter = value.toLowerCase();\n    this.products = this._products;\n    return this.products.filter(option => option.productName.toLowerCase().startsWith(filter));\n  }\n}\n","<h1 mat-dialog-title i18n=\"@@forecastInformation\">Forecast Information</h1>\n\n<h5 [routerLink]= \"['orders',data.proposalNo]\" [mat-dialog-close]=\"true\"><span i18n=\"@@proposalNo1\">Proposal No</span> \"{{data.proposalNo}}\"?</h5>\n\n<span i18n=\"@@recievedDate\">Recieved Date</span><span> : {{data.receivedDate | date:'shortDate'}}</span><br>\n<span i18n=\"@@dueDate\">Due Date</span><span> : {{data.dueDate | date:'shortDate'}}</span><br>\n<div mat-dialog-content>\n    <div class=\"scroll\">\n  <mat-card  *ngFor=\"let product of data.orderedProducts\" \n  [ngClass]=\"{'products': product.forecast,'productsRed': !product.forecast}\">\n      <h4>{{product.product.productName}}</h4>\n    <span>{{product.product.description}}</span><br>\n    <span i18n=\"@@obicNo\">Obic No</span><span>: {{product.product.obicNo}}</span><br>\n    <span *ngIf=\"!product.product.set\" i18n=\"@@quantity\">Stock QTY</span><span *ngIf=\"!product.product.set\">: {{product.product.quantity}}</span><br *ngIf=\"!product.product.set\">\n    <span *ngIf=\"!product.product.set\" i18n=\"@@moq\">MOQ</span><span *ngIf=\"!product.product.set\">: {{product.product.moq}}</span><br *ngIf=\"!product.product.set\">\n    <span *ngIf=\"product.product.set\" class=\"bold\" i18n=\"@@requiredQtySet\"> Required QTY of Sets </span><span *ngIf=\"product.product.set\">: {{product.quantity}}</span><br *ngIf=\"product.product.set\">\n    <mat-accordion *ngIf=\"product.product.set\">\n        <mat-expansion-panel *ngFor=\"let sub of product.product.products\" \n        [ngClass]=\"{'products': sub.forecast,'productsDark': !sub.forecast}\">\n            <mat-expansion-panel-header class=\"left-aligned-header\">\n                <mat-panel-title>\n                    {{sub.product.productName}}\n                </mat-panel-title>\n            </mat-expansion-panel-header>\n            <span>{{sub.product.description}}</span><br>\n            <span i18n=\"@@price\">Price</span><span> : {{util.getCurrencySign(sub.product.currency)}} {{sub.product.price}}</span><br>\n            <span i18n=\"@@obicNo\">Obic No</span><span>: {{sub.product.obicNo}}</span><br>\n            <span i18n=\"@@quantity\">Stock QTY</span><span>: {{sub.product.quantity}}</span><br>\n            <span i18n=\"@@leadTime\">Lead Time</span><span>: {{sub.product.leadTime}}w</span><br>\n            <span i18n=\"@@moq\">MOQ</span><span> : {{sub.product.moq}}</span><br>\n            <span class=\"bold\" i18n=\"@@amount\">Amount</span><span>: {{sub.quantity}}</span><br>\n            <span class=\"bold\" i18n=\"@@requiredQty\">Required QTY</span><span>: {{sub.requiredQuantity}}</span><br>\n            <span class=\"bold\" i18n=\"@@estimatedQty\">Estimated available QTY</span><span>: {{sub.currentQuantity}}</span><br>\n            <span class=\"bold\" i18n=\"@@minimumOrderDate\">Minimum Order Date</span><span>: {{sub.mod | date:'shortDate'}}</span><br>\n        </mat-expansion-panel>\n    </mat-accordion>\n    <span *ngIf=\"!product.product.set\" class=\"bold\" i18n=\"@@requiredQty\"> Required QTY </span><span *ngIf=\"!product.product.set\">: {{product.quantity}}</span><br *ngIf=\"!product.product.set\">\n    <span *ngIf=\"!product.product.set\" class=\"bold\" i18n=\"@@estimatedQty\">Estimated available QTY</span><span *ngIf=\"!product.product.set\" >: {{product.currentQuantity}}</span><br *ngIf=\"!product.product.set\">\n    <span *ngIf=\"!product.product.set && !product.forecast\" class=\"bold\" i18n=\"@@minimumOrderDate\">Minimum Order Date</span><span *ngIf=\"!product.product.set && !product.forecast\">: {{product.mod | date:'shortDate'}}</span><br *ngIf=\"!product.product.set && !product.forecast\">\n  </mat-card>\n\n</div>\n</div>\n  <div mat-dialog-actions>\n    <button mat-button [mat-dialog-close]=\"false\" i18n=\"@@ok\">OK</button>\n  </div>","import { UtilService } from './../../services/UtilService';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-forecast-dialog',\n  templateUrl: './forecast-dialog.component.html',\n  styleUrls: ['./forecast-dialog.component.scss']\n})\nexport class ForecastDialogComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<ForecastDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public util: UtilService\n  ) { }\n\n  ngOnInit() {\n    console.log(this.data);\n  }\n\n}\n","<h1 mat-dialog-title i18n=\"@@fulfillConfirmation\">Fullment Confirmation</h1>\n<div mat-dialog-content>\n    <h3 >\"{{data}}\" <span i18n=\"@@fulfillConfirmationMassege\">Are you sure you want to fulfill</span></h3>\n  </div>\n  <div mat-dialog-actions>\n    <button mat-button [mat-dialog-close]=\"false\" i18n=\"@@cancel\">Cancel</button>\n    <button mat-raised-button color=\"warn\" [mat-dialog-close]=\"true\" cdkFocusInitial i18n=\"@@ok\">Fulfill</button>\n  </div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-fulfill-order-dialog',\n  templateUrl: './fulfill-order-dialog.component.html',\n  styleUrls: ['./fulfill-order-dialog.component.scss']\n})\nexport class FulfillOrderDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<FulfillOrderDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: String, ) { }\n\n  ngOnInit() {\n  }\n\n}\n","<h1 mat-dialog-title i18n=\"@@unfulfillConfirmation\">Undo Fulfillment Confirmation</h1>\n<div mat-dialog-content>\n    <h3 >\"{{data}}\" <span i18n=\"@@unfulfillConfirmationMassege\">Are you sure you want to undo fulfillment</span></h3>\n  </div>\n  <div mat-dialog-actions>\n    <button mat-button [mat-dialog-close]=\"false\" i18n=\"@@cancel\">Cancel</button>\n    <button mat-raised-button color=\"warn\" [mat-dialog-close]=\"true\" cdkFocusInitial i18n=\"@@ok\">OK</button>\n  </div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-unfulfill-confirmation',\n  templateUrl: './unfulfill-confirmation.component.html',\n  styleUrls: ['./unfulfill-confirmation.component.scss']\n})\nexport class UnfulfillConfirmationComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<UnfulfillConfirmationComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: String,\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n","<h1 mat-dialog-title i18n=\"@@unfulfilledProducts\">Products that cannot be fulfilled.</h1>\n\n<div mat-dialog-content>\n    <div class=\"scroll\">\n\n        <mat-card >\n            <mat-accordion >\n                <mat-expansion-panel class=\"productsRed\" *ngFor=\"let product of data\">\n                    <mat-expansion-panel-header class=\"left-aligned-header\">\n                        <mat-panel-title>\n                            {{product.product.productName}}\n                        </mat-panel-title>\n                    </mat-expansion-panel-header>\n                    <span><b>{{product.product.description}}</b></span><br>\n                    <span i18n=\"@@price\">Price</span><span> : {{product.product.price}}</span><br>\n                    <span i18n=\"@@obicNo\">Obic No</span><span>: {{product.product.obicNo}}</span><br>\n                    <span i18n=\"@@leadTime\">Lead Time</span><span>: {{product.product.leadTime}}w</span><br>\n                    <span i18n=\"@@moq\">MOQ</span><span> : {{product.product.moq}}</span><br>\n                    <!-- <span class=\"bold\" i18n=\"@@amount\">Amount</span><span>: {{product.quantity}}</span><br> -->\n                    <span i18n=\"@@quantity\" class=\"bold\">Stock QTY</span><span>: {{product.product.quantity}}</span><br>\n                    <span class=\"bold\" i18n=\"@@requiredQty\">Required QTY</span><span>:\n                        {{product.requiredQuantity}}</span><br>\n                    <!-- <span class=\"bold\" i18n=\"@@estimatedQty\">Estimated available QTY</span><span>:\n                        {{product.currentQuantity}}</span><br> -->\n                    <!-- <span class=\"bold\" i18n=\"@@minimumOrderDate\">Minimum Order Date</span><span>: -->\n                        <!-- {{product.mod | date:'shortDate'}}</span><br> -->\n                </mat-expansion-panel>\n            </mat-accordion>\n        </mat-card>\n\n    </div>\n</div>\n<div mat-dialog-actions>\n    <button mat-button [mat-dialog-close]=\"false\" i18n=\"@@ok\">OK</button>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-unfulfilled-products',\n  templateUrl: './unfulfilled-products.component.html',\n  styleUrls: ['./unfulfilled-products.component.scss']\n})\nexport class UnfulfilledProductsComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<UnfulfilledProductsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n  ) { }\n\n  ngOnInit() {\n    console.log(this.data);\n  }\n\n}\n","<h1 mat-dialog-title i18n=\"@@updateProduct\">Update product</h1>\n<form (keydown.enter)=\"$event.preventDefault()\" [formGroup]=\"productForm\" (ngSubmit)=\"onSubmit()\">\n<div mat-dialog-content class=\"example-container\">\n  <mat-form-field>\n    <input matInput type=\"text\" i18n-placeholder=\"@@productName\" placeholder=\"Product Name\" formControlName=\"productName\">\n    <mat-error *ngIf=\"productForm.get('productName').hasError('required')\" i18n=\"@@productNameRequired\">Product Name cannot be empty.</mat-error>\n  </mat-form-field>\n  <mat-form-field>\n    <input matInput type=\"text\" i18n-placeholder=\"@@description\" placeholder=\"Description\" formControlName=\"description\">\n    <mat-error *ngIf=\"productForm.get('description').hasError('required')\" i18n=\"@@descriptionRequired\">Description cannot be empty.</mat-error>\n  </mat-form-field>\n  <mat-form-field class=\"inline\">\n    <input matInput type=\"number\" min=\"1\" i18n-placeholder=\"@@price\" placeholder=\"Price\" formControlName=\"price\">\n    <mat-error *ngIf=\"productForm.get('price').hasError('required')\" i18n=\"@@priceRequired\">Price cannot be empty.\n    </mat-error>\n  </mat-form-field>\n  <mat-form-field class=\"inline\">\n    <mat-select formControlName=\"currency\">\n      <mat-option se value=\"JPY\">JPY</mat-option>\n      <mat-option value=\"USD\">USD</mat-option>\n    </mat-select>\n  </mat-form-field>\n  <mat-form-field>\n    <input matInput type=\"number\" min=\"1\" i18n-placeholder=\"@@quantity\" placeholder=\"QTY\" formControlName=\"quantity\">\n    <mat-error *ngIf=\"productForm.get('quantity').hasError('required')\" i18n=\"@@qtyRequired\">QTY cannot be empty.</mat-error>\n  </mat-form-field>\n  <mat-form-field>\n    <input matInput type=\"number\" min=\"1\" i18n-placeholder=\"@@leadTime\" placeholder=\"Lead Time (w)\" formControlName=\"leadTime\">\n    <mat-error *ngIf=\"productForm.get('leadTime').hasError('required')\" i18n=\"@@leadTimeRequired\">Lead Time cannot be empty.</mat-error>\n  </mat-form-field>\n  <mat-form-field>\n    <input matInput type=\"number\" min=\"1\" i18n-placeholder=\"@@moq\" placeholder=\"MOQ\" formControlName=\"moq\">\n    <mat-error *ngIf=\"productForm.get('moq').hasError('required')\" i18n=\"@@moqRequired\">MOQ cannot be empty.</mat-error>\n  </mat-form-field>\n  <mat-form-field>\n    <input matInput type=\"text\" i18n-placeholder=\"@@obicNo\" placeholder=\"obicNo\" formControlName=\"obicNo\">\n    <mat-error *ngIf=\"productForm.get('obicNo').hasError('required')\" i18n=\"@@moqRequired\">Obic No cannot be empty.</mat-error>\n  </mat-form-field>\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"onCancelClick()\" i18n=\"@@cancel\">Cancel</button>\n  <button mat-button type=\"submit\" [disabled]=\"!productForm.valid\" i18n=\"@@ok\">Ok</button>\n  \n</div>\n</form>\n\n","import { Product } from './../../models/Product';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-update-product-dialog',\n  templateUrl: './update-product-dialog.component.html',\n  styleUrls: ['./update-product-dialog.component.scss']\n})\nexport class UpdateProductDialogComponent implements OnInit {\n  productForm: FormGroup;\n  constructor(\n    public dialogRef: MatDialogRef<UpdateProductDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: Product\n  ) { }\n\n  ngOnInit() {\n    this.productForm = new FormGroup({\n      \"productName\": new FormControl(this.data.productName,[\n        Validators.required\n      ]),\n      \"description\": new FormControl(this.data.description,[\n        Validators.required\n      ]),\n      \"price\": new FormControl(this.data.price,[\n        Validators.required\n      ]),\n      \"currency\": new FormControl(this.data.currency?this.data.currency:\"JPY\",[\n        Validators.required\n      ]),\n      \"quantity\": new FormControl(this.data.quantity,[\n        Validators.required\n      ]),\n      \"leadTime\": new FormControl(this.data.leadTime,[\n        Validators.required\n      ]),\n      \"moq\": new FormControl(this.data.moq,[\n        Validators.required\n      ]),\n      \"obicNo\": new FormControl(this.data.obicNo,[\n        Validators.required\n      ]),\n\n    })\n  }\n  onCancelClick(): void {\n    this.dialogRef.close(null);\n  }\n  onSubmit(){\n    if(this.productForm.valid){\n      this.dialogRef.close(this.productForm.value);\n    }\n  }\n  \n  getErrorMessage(attribute:string) {\n    return this.productForm.get(attribute).hasError('required') ? 'You must enter a value':'' ;\n    // switch (attribute) {\n    //   case \"name\":\n    //       return this.productForm.get(attribute).hasError('required') ? 'You must enter a value':'' ;\n    //     break;\n    \n    //   default:\n    //     break;\n    // }\n  }\n\n}\n","<h1 mat-dialog-title>{{data.type}} Details</h1>\n<div mat-dialog-content class=\"example-container\">\n    <mat-card>\n        <mat-list>\n            <mat-list-item> Name :&emsp;{{data.customerName}} </mat-list-item>\n            <mat-list-item> ZIP :&emsp;{{data.zip}} </mat-list-item>\n            <mat-list-item> Address :&emsp;{{data.address}} </mat-list-item>\n            <mat-list-item> Tel :&emsp;{{data.tel}} </mat-list-item>\n            <mat-list-item> Contact Name :&emsp;{{data.contactName}} </mat-list-item>\n        </mat-list>\n    </mat-card>\n\n</div>\n<div mat-dialog-actions>\n    <button mat-button [mat-dialog-close]=\"\" cdkFocusInitial>Ok</button>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { AddCustomerComponent } from '../add-customer/add-customer.component';\n\n@Component({\n  selector: 'app-view-customer-dialog',\n  templateUrl: './view-customer-dialog.component.html',\n  styleUrls: ['./view-customer-dialog.component.scss']\n})\nexport class ViewCustomerDialogComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<AddCustomerComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n","import { MatPaginatorIntl } from '@angular/material';\nimport { Inject, LOCALE_ID, Injectable } from '@angular/core';\n\n@Injectable()\nexport class MatPaginatorIntlCro extends MatPaginatorIntl {\n    constructor(@Inject(LOCALE_ID) public localeId: string) {\n        super();\n        console.log(this.localeId);\n    }\n    itemsPerPageLabel = this.localeId==\"en\"?'Items per page':this.localeId==\"ja\"?'1ページの商品数':'Items per page';\n    nextPageLabel = this.localeId==\"en\"?'Next page':this.localeId==\"ja\"?'次のページ':'Next page';\n    previousPageLabel = this.localeId==\"en\"?'Previous page':this.localeId==\"ja\"?'前のページ':'Previous page';\n    firstPageLabel = this.localeId==\"en\"?'First page':this.localeId==\"ja\"?'一ページ目':'First page';\n    lastPageLabel = this.localeId==\"en\"?'Last page':this.localeId==\"ja\"?'最後のページ':'Last page';\n\n    getRangeLabel = (page, pageSize, length) => {\n        if (length === 0 || pageSize === 0) {\n            if(this.localeId==\"en\"){\n                return '0 ' + 'of ' + length;\n            }else if (this.localeId==\"ja\"){\n                return '0 件中 0 件を表示';\n            }\n            return '0 ' + 'of ' + length;\n            // return '0 '+(this.localeId==\"en\"?'of':this.localeId==\"ja\"?'の':'of') + ' '+ length;\n        }\n        length = Math.max(length, 0);\n        const startIndex = page * pageSize;\n        // If the start index exceeds the list length, do not try and fix the end index to the end.\n        const endIndex = startIndex < length ?\n            Math.min(startIndex + pageSize, length) :\n            startIndex + pageSize;\n\n        if(this.localeId==\"en\"){\n                return startIndex + 1 + ' - ' + endIndex +'of'+ length;\n        }else if (this.localeId==\"ja\"){\n                return length+ ' 件中 ' + (startIndex + 1) + ' - ' + endIndex+' 件を表示';\n        }\n        return startIndex + 1 + ' - ' + endIndex + (this.localeId==\"en\"?'of':this.localeId==\"ja\"?'の':'of') + length;\n    };\n}","<mat-tab-group>\n    <mat-tab i18n-label=\"@@customers\" label=\"Customers\">\n      <ng-template matTabContent>\n    </ng-template>\n</mat-tab>\n</mat-tab-group>        \n        <mat-progress-bar mode=\"indeterminate\" *ngIf=\"progress\"></mat-progress-bar>\n        <mat-card>\n            <button mat-raised-button color=\"primary\" (click)=\"openDialog()\" i18n=\"@@add\">Add</button><br><br>\n            <mat-form-field>\n                    <input matInput (keyup)=\"applyFilter($event.target.value)\" i18n-placeholder=\"@@filter\" placeholder=\"Filter\">\n            </mat-form-field>\n            <mat-paginator #paginatorTop (page)=\"onTopPaginateChange()\" [pageSizeOptions]=\"[5, 10, 20, 50]\" showFirstLastButtons></mat-paginator>\n            <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" matSort>\n                <ng-container matColumnDef=\"customerName\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header i18n=\"@@customerName\"> Name </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.customerName}} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"zip\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header i18n=\"@@zipCode\"> ZIP Code </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.zip}} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"address\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header i18n=\"@@address\"> Address </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.address}} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"tel\">\n                    <th mat-header-cell *matHeaderCellDef i18n=\"@@tel\"> Tel </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.tel}} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"contactName\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header i18n=\"@@contactName\"> Contact Name </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.contactName}} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"type\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header i18n=\"@@type\"> Type </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.type}} </td>\n                </ng-container>\n                <ng-container matColumnDef=\"actions\" >\n                    <th mat-header-cell *matHeaderCellDef></th>\n                    <td mat-cell *matCellDef=\"let element;\" >\n                        <button mat-button color=\"primary\" (click)=\"editCustomer(element)\" i18n=\"@@edit\">Edit</button>\n                        <button mat-button color=\"warn\" (click)=\"deleteCustomer(element)\" i18n=\"@@delete\">Delete</button>\n                    </td>\n                </ng-container>\n        \n                \n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"\n                (click)=\"editCustomer(row)\"\n                 class=\"element-row\"></tr>\n                \n            </table>\n            \n        </mat-card>\n        <mat-paginator #paginatorBottom (page)=\"onBottomPaginateChange($event)\" [pageSizeOptions]=\"[5, 10, 20, 50]\" showFirstLastButtons></mat-paginator>\n\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { CustomerService } from 'src/app/services/CustomerService';\nimport { Customer } from 'src/app/models/Customer';\nimport { MatTableDataSource, MatTable, MatPaginator, MatDialog, MatSort } from '@angular/material';\nimport { Product } from 'src/app/models/Product';\nimport { AddCustomerComponent } from 'src/app/dialogs/add-customer/add-customer.component';\nimport { DeleteConfirmationDialogComponent } from 'src/app/dialogs/delete-confirmation-dialog/delete-confirmation-dialog.component';\nimport { EditCustomerDialogComponent } from 'src/app/dialogs/edit-customer-dialog/edit-customer-dialog.component';\n\n@Component({\n  selector: 'app-customers',\n  templateUrl: './customers.component.html',\n  styleUrls: ['./customers.component.scss']\n})\nexport class CustomersComponent implements OnInit {\n  displayedColumns: string[] = [\n    'customerName',\n    'zip',\n    'address',\n    'tel',\n    'contactName',\n    'type',\n    'actions'\n  ];\n  progress = false;\n  customers: Customer[] = [];\n  dataSource = new MatTableDataSource<Customer>();\n  @ViewChild(MatTable, { static: true }) table: MatTable<any>;\n  @ViewChild('paginatorTop', { static: true }) paginatorTop: MatPaginator;\n  @ViewChild('paginatorBottom', { static: true }) paginatorBottom: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n  constructor(\n    public dialog: MatDialog,\n    private customerService: CustomerService\n  ) { }\n\n  ngOnInit() {\n    this.getCustomers();\n    this.dataSource.paginator = this.paginatorTop;\n    this.dataSource.sort = this.sort;\n  }\n\n  getCustomers() {\n    this.progress = true;\n    this.customerService.getCustomers().subscribe(result => {\n      this.customers = result;\n      this.dataSource.data = this.customers;\n      this.progress = false;\n      this.onTopPaginateChange();\n    }, error => {\n      this.progress = false;\n    })\n  }\n\n  onTopPaginateChange(){\n    this.paginatorBottom.length = this.dataSource.data.length;\n    this.paginatorBottom.pageSize = this.paginatorTop.pageSize;\n    this.paginatorBottom.pageIndex = this.paginatorTop.pageIndex;\n  }\n  onBottomPaginateChange(event){\n    if(event.previousPageIndex<event.pageIndex && event.pageIndex-event.previousPageIndex==1) {\n      this.paginatorTop.nextPage();\n    }\n    if(event.previousPageIndex>event.pageIndex && event.pageIndex-event.previousPageIndex==-1) {\n      this.paginatorTop.previousPage();\n    }\n    if(event.previousPageIndex<event.pageIndex && event.pageIndex-event.previousPageIndex>1) {\n      this.paginatorTop.lastPage();\n    }\n    if(event.previousPageIndex>event.pageIndex && event.previousPageIndex-event.pageIndex>1) {\n      this.paginatorTop.firstPage();\n    }\n    this.paginatorTop._changePageSize(this.paginatorBottom.pageSize);\n\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(AddCustomerComponent, {\n      width: '600px',\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      if (result) {\n        this.progress = true;\n        const customer: Customer = result;\n        this.customerService.addCustomer(result).subscribe(result => {\n          this.getCustomers();\n          this.progress = false;\n        }, error => {\n          this.progress = false;\n        })\n\n      }\n    });\n  }\n\n  deleteCustomer(i: any) {\n    const data = this.customers[this.customers.indexOf(i)]\n    const dialogRef = this.dialog.open(DeleteConfirmationDialogComponent, {\n      width: '600px',\n      data: data.customerName\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.progress = true;\n        this.customerService.deleteCustomer(data.customerId).subscribe(result => {\n          this.getCustomers();\n          this.progress = false;\n          console.log(result);\n        }, error => {\n          console.log(error);\n          this.progress = false;\n        })\n      }\n    });\n\n  }\n  editCustomer(i: Customer) {\n    const data = this.customers[this.customers.indexOf(i)];\n    const dialogRef = this.dialog.open(EditCustomerDialogComponent, {\n      width: '600px',\n      data: data\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      if (result) {\n        const customer: Customer = result;\n        customer.customerId = data.customerId;\n        this.progress = true;\n        this.customerService.editCustomer(customer).subscribe(result => {\n          this.getCustomers();\n          this.progress = false;\n        }, error => {\n          this.progress = false;\n        })\n      }\n    });\n\n  }\n}\n","<mat-progress-bar mode=\"indeterminate\" *ngIf=\"progress\"></mat-progress-bar>\n<button class=\"calenderNav\" mwlCalendarPreviousView [view]=\"view\" [(viewDate)]=\"viewDate\"\n  (viewDateChange)=\"closeOpenMonthViewDay()\" mat-raised-button color=\"primary\" i18n=\"@@previous\">Previous</button>\n\n<button class=\"calenderNav\" mwlCalendarToday [(viewDate)]=\"viewDate\" (viewDateChange)=\"closeOpenMonthViewDay()\"\n  mat-raised-button color=\"primary\" i18n=\"@@today\">Today</button>\n<button class=\"calenderNav\" mwlCalendarNextView [view]=\"view\" [(viewDate)]=\"viewDate\"\n  (viewDateChange)=\"closeOpenMonthViewDay()\" mat-raised-button color=\"primary\" i18n=\"@@next\">Next</button>\n<h3>{{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}</h3>\n\n\n<br />\n\n<mwl-calendar-month-view [viewDate]=\"viewDate\" [events]=\"events\" [refresh]=\"refresh\" [activeDayIsOpen]=\"activeDayIsOpen\"\n  (dayClicked)=\"dayClicked($event.day)\" (eventClicked)=\"handleEvent('Clicked', $event.event)\"\n  (eventTimesChanged)=\"eventTimesChanged($event)\">\n</mwl-calendar-month-view>\n\n<mat-list role=\"list\">\n  <span *ngFor=\"let forecast of forecasts\">\n  <mat-list-item role=\"listitem\" *ngIf=\"!forecast.forecast\" (click)=\"handleListItem(forecast)\">\n    <mat-icon svgIcon=\"info\" aria-hidden=\"false\"></mat-icon>\n    {{forecast.proposalNo}}   <span class=\"forecastDate\">{{forecast.dueDate | date:'shortDate'}}</span>\n  </mat-list-item>\n</span>\n</mat-list>","\nimport {\n  Component,\n  ChangeDetectionStrategy,\n  ViewChild,\n  TemplateRef,\n  OnInit,\n  OnDestroy\n} from '@angular/core';\nimport {\n  startOfDay,\n  endOfDay,\n  subDays,\n  addDays,\n  endOfMonth,\n  isSameDay,\n  isSameMonth,\n  addHours\n} from 'date-fns';\nimport { Subject } from 'rxjs';\nimport {\n  CalendarEvent,\n  CalendarEventAction,\n  CalendarEventTimesChangedEvent,\n  CalendarView\n} from 'angular-calendar';\nimport { MatDialog, MatIconRegistry } from '@angular/material';\nimport { EditOrderDialogComponent } from 'src/app/dialogs/edit-order-dialog/edit-order-dialog.component';\nimport { ForecastService } from 'src/app/services/ForecastService';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Order } from 'src/app/models/Order';\nimport { ForecastDialogComponent } from 'src/app/dialogs/forecast-dialog/forecast-dialog.component';\nimport { takeUntil } from 'rxjs/operators';\n\nconst colors: any = {\n  red: {\n    primary: '#ad2121',\n    secondary: '#FAE3E3'\n  },\n  blue: {\n    primary: '#1e90ff',\n    secondary: '#D1E8FF'\n  },\n  yellow: {\n    primary: '#e3bc08',\n    secondary: '#FDF1BA'\n  },\n  green: {\n    primary: '#006400',\n    secondary: '#006400'\n  }\n};\n@Component({\n  selector: 'app-calendar',\n  templateUrl: './calendar.component.html',\n  styleUrls: ['./calendar.component.scss']\n})\nexport class CalendarComponent implements OnInit, OnDestroy {\n  @ViewChild('modalContent', { static: true }) modalContent: TemplateRef<any>;\n  unsub = new Subject();\n  view: CalendarView = CalendarView.Month;\n\n  CalendarView = CalendarView;\n\n  viewDate: Date = new Date();\n\n  modalData: {\n    action: string;\n    event: CalendarEvent;\n  };\n\n  refresh: Subject<any> = new Subject();\n\n  events: CustomCalendarEvent[];\n\n  activeDayIsOpen: boolean = true;\n  forecasts: Order[];\n  progress;\n  constructor(\n    public dialog: MatDialog,\n    private forecastService: ForecastService,\n    iconRegistry: MatIconRegistry,\n    sanitizer: DomSanitizer\n  ) {\n    iconRegistry.addSvgIcon(\n      'info',\n      sanitizer.bypassSecurityTrustResourceUrl('assets/icon/info.svg'));\n  }\n\n  ngOnInit() {\n    this.events = [];\n    this.getForecastdata();\n    this.getProductForecastData();\n  }\n  ngOnDestroy() {\n    this.unsub.next();\n    this.unsub.complete();\n  }\n  getForecastdata() {\n    this.progress = true;\n    this.forecastService.getForecast().pipe(takeUntil(this.unsub))\n      .subscribe(result => {\n        this.forecasts = result;\n        this.populateCalender();\n        this.viewDate = new Date();\n        this.progress = false;\n      }, error => {\n        this.progress = false;\n        console.log(error);\n      })\n\n  }\n\n  populateCalender() {\n    this.forecasts.forEach((order) => {\n      this.addEvent(order.proposalNo, new Date(order.dueDate), order.forecast ? colors.green : colors.red, order);\n    })\n    this.refresh.next();\n  }\n  dayClicked({ date, events }: { date: Date; events: CalendarEvent[] }): void {\n    if (isSameMonth(date, this.viewDate)) {\n      if (\n        (isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) ||\n        events.length === 0\n      ) {\n        this.activeDayIsOpen = false;\n      } else {\n        this.activeDayIsOpen = true;\n      }\n      this.viewDate = date;\n    }\n  }\n\n  eventTimesChanged({\n    event,\n    newStart,\n    newEnd\n  }: CalendarEventTimesChangedEvent): void {\n    this.events = this.events.map(iEvent => {\n      if (iEvent === event) {\n        return {\n          ...event,\n          start: newStart,\n          end: newEnd\n        };\n      }\n      return iEvent;\n    });\n    this.handleEvent('Dropped or resized', event);\n  }\n\n  handleEvent(action: string, event: CustomCalendarEvent): void {\n    console.log(event);\n    const dialogRef = this.dialog.open(ForecastDialogComponent, {\n      width: '600px',\n      data: event.data\n    });\n  }\n  handleListItem(data: Order): void {\n    console.log(event);\n    const dialogRef = this.dialog.open(ForecastDialogComponent, {\n      width: '600px',\n      data: data\n    });\n  }\n\n  addEvent(title: string, start: Date, color: any, data: Order): void {\n    this.events = [\n      ...this.events,\n      {\n        title: title,\n        start: start,\n        color: color,\n        data: data\n      }\n    ];\n\n  }\n\n  deleteEvent(eventToDelete: CalendarEvent) {\n    this.events = this.events.filter(event => event !== eventToDelete);\n  }\n\n  setView(view: CalendarView) {\n    this.view = view;\n  }\n\n  closeOpenMonthViewDay() {\n    this.activeDayIsOpen = false;\n  }\n\n  getProductForecastData() {\n    this.progress = true;\n    this.forecastService.getProductForecast().subscribe((data) => {\n      console.log(data);\n      this.progress = false;\n    })\n  }\n}\n\nexport interface CustomCalendarEvent extends CalendarEvent {\n  data?: Order;\n}\n","<mat-tab-group animationDuration=\"0ms\">\n  <mat-tab i18n-label=\"@@calendarView\" label=\"Calendar View\">\n    <ng-template matTabContent>\n      <app-calendar></app-calendar>\n    </ng-template>\n  </mat-tab>\n  <mat-tab i18n-label=\"@@tableView\" label=\"Table View\">\n    <ng-template matTabContent>\n      <mat-progress-bar mode=\"indeterminate\" *ngIf=\"progress\"></mat-progress-bar>\n      <div class=\"table-container mat-elevation-z8\">\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n          <ng-container matColumnDef=\"setName\" sticky>\n            <th mat-header-cell *matHeaderCellDef> setName </th>\n            <td mat-cell *matCellDef=\"let data;let i = index\" [attr.rowspan]=\"getRowSpanSet('setName', i)\"\n              [style.display]=\"!isTheSame('setName', i) ? '' : 'none'\" [ngStyle]=\"changeColor(data,'set')\">\n              {{ data.setName}} </td>\n            <td mat-footer-cell *matFooterCellDef> Total </td>\n          </ng-container>\n          <ng-container matColumnDef=\"productId\" sticky>\n            <th mat-header-cell *matHeaderCellDef> productId </th>\n            <td mat-cell *matCellDef=\"let data;let i = index\" [attr.rowspan]=\"getRowSpan('productId', i)\"\n              [style.display]=\"!isTheSame('productId', i) ? '' : 'none'\" [ngStyle]=\"changeColor(data)\">\n              {{ data.productId }} </td>\n            <td mat-footer-cell *matFooterCellDef> null </td>\n          </ng-container>\n          <ng-container matColumnDef=\"productName\" sticky>\n            <th mat-header-cell *matHeaderCellDef> productName </th>\n            <td mat-cell *matCellDef=\"let data;let i = index\" [attr.rowspan]=\"getRowSpan('productName', i)\"\n              [style.display]=\"!isTheSame('productName', i) ? '' : 'none'\" [ngStyle]=\"changeColor(data)\">\n              {{ data.productName }} </td>\n            <td mat-footer-cell *matFooterCellDef> null </td>\n          </ng-container>\n          <ng-container matColumnDef=\"description\" sticky>\n            <th mat-header-cell *matHeaderCellDef> description </th>\n            <td mat-cell *matCellDef=\"let data;let i = index\" [attr.rowspan]=\"getRowSpan('description', i)\"\n              [style.display]=\"!isTheSame('description', i) ? '' : 'none'\" [ngStyle]=\"changeColor(data)\">\n              {{ data.description }} </td>\n            <td mat-footer-cell *matFooterCellDef> null </td>\n          </ng-container>\n          <ng-container matColumnDef=\"values\" sticky>\n            <th mat-header-cell *matHeaderCellDef> values </th>\n            <td mat-cell *matCellDef=\"let data\" class=\"bold\" [ngStyle]=\"changeColor(data)\"> {{ data.values }} </td>\n            <td mat-footer-cell *matFooterCellDef> null </td>\n          </ng-container>\n\n          <ng-container [matColumnDef]=\"column\" *ngFor=\"let column of displayedColumns.slice(5)\">\n            <th mat-header-cell *matHeaderCellDef> {{column}} </th>\n            <td mat-cell *matCellDef=\"let element\" [ngStyle]=\"changeColor(element)\"> {{element[column]}} </td>\n            <td mat-footer-cell *matFooterCellDef matTooltip=\"My Name is Khaan\" class=\"forecastOrders\"> My Name is Khaan\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay; sticky: true\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"></tr>\n          <tr mat-footer-row *matFooterRowDef=\"columnsToDisplay\"></tr>\n        </table>\n      </div>\n      <button mat-raised-button matTooltip=\"Info about the action\" matTooltipPosition=\"right\"\n        aria-label=\"Button that displays a tooltip in various positions\">\n        Action\n      </button>\n    </ng-template>\n  </mat-tab>\n</mat-tab-group>","import { Component, ChangeDetectionStrategy, OnInit, OnDestroy } from '@angular/core';\nimport { ForecastService } from 'src/app/services/ForecastService';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n\n@Component({\n  selector: 'app-forcast',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['forcast.component.scss'],\n  templateUrl: 'forcast.component.html'\n})\nexport class ForcastComponent implements OnInit, OnDestroy{\n  displayedColumns: string[] = [\n    'setName',\n    'productId',\n    'productName',\n    'description',\n    'values',\n\n  ];\n  columnsToDisplay: string[] = this.displayedColumns.slice();\n  subColumns: any[] = [\n    {\n      value: \"in qty\",\n      key: \"incomingQuantity\"\n    },\n    {\n      value: \"out qty\",\n      key: \"requiredQuantity\"\n    },\n    {\n      value: \"predicted stock\",\n      key: \"currentQuantity\"\n    },\n    {\n      value: \"stock\",\n      key: \"quantity\"\n    },\n  ]\n  dataSource: Array<any> = [];\n  spans = [];\n  spanningColumns = ['productId', 'productName', 'description'];\n  tempRowId = null;\n  tempRowCount = null;\n  productForecast;\n  progress;\n  unsub = new Subject();\n  constructor(private forecastService: ForecastService) {\n\n  }\n\n  ngOnInit() {\n    this.populateData();\n    // console.log(this.dataSource);\n    // console.log(this.displayedColumns);\n  }\n  ngOnDestroy(){\n    this.unsub.next();\n    this.unsub.complete();\n  }\n\n  populateData() {\n    this.progress = true;\n    // this.progress = false;\n    this.forecastService.getProductForecast().pipe(takeUntil(this.unsub)).subscribe(data => {\n      this.addColumnsToTables(data[0].products[0].values);\n      this.productForecast = data;\n      console.log(this.productForecast);\n      let setcount = 0;\n      let productcount = 0;\n      let tempdata:any[]= [];\n      data.forEach(productSet => {\n        productSet.products.forEach(product => {\n          this.subColumns.forEach(column => {\n\n            let temp: any = {\n              \"setId\": productSet.productId,\n              \"setObicNo\": productSet.obicNo,\n              \"setName\": productSet.productName,\n              \"setDescription\": productSet.description,\n              \"setColor\": setcount % 2 == 0 ? \"#E8EAF6\" : \"#C5CAE9\",\n\n              \"productId\": product.productId,\n              \"obicNo\": product.obicNo,\n              \"productName\": product.productName,\n              \"description\": product.description,\n              \"color\": productcount % 2 == 0 ? \"#E0F2F1\" : \"#B2DFDB\",\n              \"values\": column.value,\n\n            }\n            product.values.forEach(dateItem => {\n              if ((column.key === \"incomingQuantity\" || column.key === \"requiredQuantity\") && (dateItem[column.key]==0)) {\n                temp[this.getDateString(dateItem.date)] = \"\";\n              } else {\n                temp[this.getDateString(dateItem.date)] = dateItem[column.key];\n              }\n            });\n            tempdata.push(temp);\n            // this.dataSource.push(temp);\n            \n          })\n          productcount++;\n        });\n        setcount++;\n        \n      });\n      this.dataSource = tempdata;\n      \n      console.log(this.dataSource);\n      this.progress = false;\n      this.unsub.next();\n      this.unsub.complete();\n      console.log(this.progress);\n    },error=>{\n      this.progress = false;\n    });\n\n  }\n  addColumnsToTables(dateArray) {\n \n    dateArray.forEach(element => {\n      const date = element.date;\n      this.displayedColumns.push(this.getDateString(date));\n    });\n    this.columnsToDisplay = this.displayedColumns.slice();\n    // console.log(this.columnsToDisplay);\n  }\n  getDateString(date: string) {\n    return new Date(date).toLocaleDateString(\"en-US\", { month: \"numeric\", day: \"numeric\" });\n  }\n\n  changeColor(data, set?) {\n    if (set)\n      return { 'background-color': data.setColor };\n\n    return { 'background-color': data.color };\n  }\n\n  getRowSpanSet(col, index) {\n    // console.log(col,index);\n    const rowVal = this.dataSource[index];\n    const cellVal = rowVal[col];\n    let count = 0;\n    for (let row of this.dataSource) {\n      if (cellVal == row[col])\n        count++;\n    }\n    return count;\n  }\n  getRowSpan(col, index) {\n\n    return 4;\n  }\n\n  isTheSame(column, index) {\n    let result = false;\n    const i = index;\n    if (i == 0) {\n      result = false;\n    } else {\n      const valObj = this.dataSource[i];\n      const preObj = this.dataSource[i - 1];\n\n      if (valObj[column] == preObj[column]) {\n        result = true;\n      }\n      // console.log (valObj[column],preObj[column]);\n    }\n    return result;\n  }\n \n}\n","<h2>Welcome!!! </h2>\n<h3>Dashboard features will be developed according to your request.</h3>\n\n<mat-card *ngIf=\"browser=='ie' || browser=='edge'\">\n    <h4>「{{browser}}」を使用している場合、一部の機能は正常に動作しません。</h4>\n    <h3>「Google Chrome」または「Firefox」ブラウザを使用して最高の体験をしてください。</h3>\n</mat-card>\n","import { Component, OnInit, Inject, LOCALE_ID } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  browser;\n\n  ngOnInit() {\n    this.browser = this.getBrowserName();\n  }\n\n  public getBrowserName() {\n    const agent = window.navigator.userAgent.toLowerCase()\n    switch (true) {\n      case agent.indexOf('edge') > -1:\n        return 'edge';\n      case agent.indexOf('opr') > -1 && !!(<any>window).opr:\n        return 'opera';\n      case agent.indexOf('chrome') > -1 && !!(<any>window).chrome:\n        return 'chrome';\n      case agent.indexOf('trident') > -1:\n        return 'ie';\n      case agent.indexOf('firefox') > -1:\n        return 'firefox';\n      case agent.indexOf('safari') > -1:\n        return 'safari';\n      default:\n        return 'other';\n    }\n}\n\n}\n","<div class=\"container\">\n<mat-card>\n        <mat-card-title i18n=\"@@login\">Login</mat-card-title>\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n    <mat-card-content  class=\"loginForm\">\n            <mat-form-field>\n                <input matInput type=\"email\" i18n-placeholder=\"@@email\" placeholder=\"Email\" formControlName=\"email\">\n                <mat-error *ngIf=\"loginForm.get('email').hasError('required')\" i18n=\"@@emailRequired\">Email is required.</mat-error>\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput type=\"password\" i18n-placeholder=\"@@password\" placeholder=\"Password\" formControlName=\"password\">\n                <mat-error *ngIf=\"loginForm.get('password').hasError('required')\" i18n=\"@@passwordRequired\">Password is required.</mat-error>\n            </mat-form-field>\n            <mat-error *ngIf=\"loginError==401\" i18n=\"@@invalidCredentials\">Invalid Credentials.</mat-error>\n            <mat-error *ngIf=\"loginError==500\" i18n=\"@@somethingWentWrong\">Something went wrong! Please try again later.</mat-error>\n            <div class=\"row\" *ngIf=\"progress\">\n                <mat-spinner diameter=\"25\" color=\"white\"></mat-spinner>\n            </div>\n        </mat-card-content>\n        <mat-card-actions class=\"actions\">\n            <button type=\"submit\" mat-raised-button color=\"primary\" i18n=\"@@login\">Login\n            </button>\n            \n        </mat-card-actions>\n    </form>\n</mat-card>\n</div>","import { Router } from '@angular/router';\nimport { LoginUser } from './../../models/LoginUser';\nimport { AuthService } from 'src/app/auth/AuthService';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  loginError = null;\n  progress = false;\n  constructor(private authService: AuthService,\n    private router: Router, ) { }\n\n  ngOnInit() {\n    this.checkAlreadyLoggedIn();\n    this.initializeLoginForm();\n  }\n\n  checkAlreadyLoggedIn(){\n    console.log(this.authService.isAuthenticated());\n    if(this.authService.isAuthenticated()){\n      this.router.navigate(['/']);\n    }\n  }\n\n  initializeLoginForm() {\n    this.loginForm = new FormGroup({\n      \"email\": new FormControl(\"\", [\n        Validators.required, Validators.email\n      ]),\n      \"password\": new FormControl(\"\", [\n        Validators.required\n      ])\n\n    })\n  }\n  onSubmit() {\n    if (this.loginForm.valid) {\n      this.progress = true;\n      const user: LoginUser = {\n        \"email\": this.loginForm.value.email,\n        \"password\": this.loginForm.value.password\n      }\n      this.authService.login(user).subscribe(result => {\n        console.log(\"test1\");\n        this.authService.setSession(result);\n        console.log(result);\n        this.router.navigate(['/']);\n      },\n        error => {\n          if(error.error && error.error.status && error.error.status==401) {\n            this.loginError = 401;\n          } else {\n            this.loginError = 500;\n          }\n          console.log(error);\n          this.progress = false;\n        })\n\n      console.log(this.loginForm.value)\n    }\n  }\n\n  getErrorMessage(attribute: string) {\n    //return this.customerForm.get(attribute).hasError('required') ? 'You must enter a value':'' ;\n    switch (attribute) {\n      case \"email\":\n        return this.loginForm.get(attribute).hasError('required') ? 'Email cannot be empty' :\n          this.loginForm.get(attribute).hasError('email') ? 'Please Enter a valid email.' : '';\n        break;\n\n      case \"password\":\n        return this.loginForm.get(attribute).hasError('required') ? 'Password Cannot be empty' : '';\n\n      default:\n        return this.loginForm.get(attribute).hasError('required') ? 'You must enter a value' : '';\n        break;\n    }\n  }\n}\n","<mat-tab-group>\n    <mat-tab i18n-label=\"@@profile\" label=\"Profile\">\n        <ng-template matTabContent>\n            <app-profile></app-profile>\n        </ng-template>\n    </mat-tab>\n    <mat-tab *ngIf=\"role=='ROLE_ADMIN'\" i18n-label=\"@@users\" label=\"Users\">\n        <ng-template matTabContent>\n            <app-users></app-users>\n        </ng-template>\n    </mat-tab>\n</mat-tab-group>","import { UserService } from 'src/app/services/UserService';\nimport { AuthService } from 'src/app/auth/AuthService';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-my-page',\n  templateUrl: './my-page.component.html',\n  styleUrls: ['./my-page.component.scss']\n})\nexport class MyPageComponent implements OnInit {\n  passwordForm: FormGroup;\n  progress = false;\n  successPasswordChange: boolean;\n  constructor(private auth: AuthService,) { }\n\n  role;\n\n  ngOnInit() {\n    this.role = this.auth.getRole();\n  }\n\n \n\n}\n","<h3>My Page</h3>\n<p>First Name : {{firstName}}</p>\n<p>Last Name : {{lastName}}</p>\n<p>Role : {{role}}</p>\n\n<div class=\"container\">\n    <mat-card>\n<form [formGroup]=\"passwordForm\" (ngSubmit)=\"onSubmit()\">\n<mat-card-content  class=\"passwordForm\">\n    <mat-form-field>\n        <input matInput type=\"password\" i18n-placeholder=\"@@oldPassword\" placeholder=\"Old Password\" formControlName=\"oldPassword\">\n        <!-- <mat-error *ngIf=\"passwordForm.get('oldPassword').hasError('required')\" i18n=\"@@oldPasswordRequired\">Old Password is required.</mat-error> -->\n    </mat-form-field>\n    <mat-form-field>\n        <input matInput type=\"password\" i18n-placeholder=\"@@newPassword\" placeholder=\"New Password\" formControlName=\"newPassword\">\n        <!-- <mat-error *ngIf=\"passwordForm.get('newPassword').hasError('required')\" i18n=\"@@newPasswordRequired\">New Password is required.</mat-error> -->\n    </mat-form-field>\n    <mat-form-field>\n        <input matInput type=\"password\" i18n-placeholder=\"@@confirmPassword\" placeholder=\"Confirm Password\" formControlName=\"confirmPassword\">\n        <!-- <mat-error *ngIf=\"passwordForm.get('cconfirmPassword').hasError('required')\" i18n=\"@@confirmPasswordRequired\">Confirm Password is required.</mat-error> -->\n    </mat-form-field>\n    <mat-error *ngIf=\"changeError==401\" i18n=\"@@invalidCredentials\">Invalid Credentials.</mat-error>\n    <mat-error *ngIf=\"changeError==500\" i18n=\"@@somethingWentWrong\">Something went wrong! Please try again later.</mat-error>\n    <mat-error *ngIf=\"changeError==400\" i18n=\"@@samePassword\">New password cannot be the same as your old password.</mat-error>\n    <mat-error *ngIf=\"passwordError\" i18n=\"@@passwordError\">Your password and confirmation password do not match.</mat-error>\n    <div class=\"row\" *ngIf=\"progress\">\n        <mat-spinner diameter=\"25\" color=\"white\"></mat-spinner>\n    </div>\n</mat-card-content>\n<mat-card-actions class=\"actions\">\n    <button type=\"submit\" mat-raised-button color=\"primary\" i18n=\"@@changePassword\">Change Password\n    </button>\n    \n</mat-card-actions>\n</form>\n</mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/auth/AuthService';\nimport { UserService } from 'src/app/services/UserService';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n  passwordForm: FormGroup;\n  progress = false;\n  successPasswordChange: boolean;\n  constructor(private auth: AuthService,\n    private userService: UserService,\n    private _snackBar: MatSnackBar) { }\n  firstName;\n  lastName;\n  role;\n  passwordError: boolean = false;\n  changeError = null;\n  ngOnInit() {\n    this.initializeLoginForm();\n    this.firstName = this.auth.getFirstName();\n    this.lastName = this.auth.getLastName();\n    this.role = this.auth.getRole();\n    const r = this.role.split(\"_\");\n    this.role = r[1];\n  }\n\n  initializeLoginForm() {\n    this.passwordForm = new FormGroup({\n      \"oldPassword\": new FormControl(\"\", [\n        Validators.required,\n      ]),\n      \"newPassword\": new FormControl(\"\", [\n        Validators.required\n      ]),\n      \"confirmPassword\": new FormControl(\"\", [\n        Validators.required\n      ])\n\n    })\n  }\n  onSubmit() {\n    this.progress = true;\n    this.passwordError = false;\n    if (this.passwordForm.value.newPassword != this.passwordForm.value.confirmPassword) {\n      this.passwordError = true;\n      this.progress = false;\n    } else {\n      this.userService.updatePassword(this.passwordForm.value).subscribe(success => {\n        this.successPasswordChange = true;\n        this.progress = false;\n        this.openSnackBar(\"Your password has been changed successfully!\", \"ok\");\n        // this.passwordForm.reset();\n        this.passwordForm.markAsPristine();\n        this.passwordForm.markAsUntouched();\n        this.passwordForm.updateValueAndValidity();\n        this.changeError = null;\n      }, error => {\n        if (error && error.status ) {\n          if(error.status == 401){\n          this.changeError = 401;\n        } else if(error.status == 400) {\n          this.changeError = 400;\n        }\n        } else {\n          this.changeError = 500;\n        }\n        this.progress = false;\n      })\n      this.passwordError = false;\n    }\n  }\n\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action, {\n      duration: 2000,\n    });\n  }\n\n\n}\n","<mat-progress-bar mode=\"indeterminate\" *ngIf=\"progress\"></mat-progress-bar>\n<mat-card>\n\n    <div class=\"row\">\n\n        <button mat-raised-button color=\"primary\" (click)=\"openDialog()\" i18n=\"@@add\">Add</button>\n    </div>\n\n    <mat-form-field>\n            <input matInput (keyup)=\"applyFilter($event.target.value)\" i18n-placeholder=\"@@filter\" placeholder=\"Filter\">\n    </mat-form-field>\n    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n        <ng-container matColumnDef=\"fName\">\n            <th mat-header-cell *matHeaderCellDef i18n=\"@@firstName\"> First Name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.firstName}} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"lName\">\n            <th mat-header-cell *matHeaderCellDef i18n=\"@@lastName\"> Last Name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.lastName}} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"email\">\n            <th mat-header-cell *matHeaderCellDef i18n=\"@@email\"> Email </th>\n            <td mat-cell *matCellDef=\"let element\">{{element.email}} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"role\">\n            <th mat-header-cell *matHeaderCellDef i18n=\"@@role\"> Role </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.roles[0].description}} </td>\n        </ng-container>\n        \n        <ng-container matColumnDef=\"actions\" >\n            <th mat-header-cell *matHeaderCellDef></th>\n            <td mat-cell *matCellDef=\"let element;\" >\n                <!-- <button mat-button color=\"primary\" (click)=\"editUser(element)\" i18n=\"@@edit\">Edit</button>\n                <button mat-button color=\"warn\" (click)=\"deleteProduct(element)\" i18n=\"@@delete\">Delete</button> -->\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        \n    </table>\n</mat-card>\n<mat-paginator [pageSizeOptions]=\"[5, 10, 20, 50]\" showFirstLastButtons></mat-paginator>","import { AddUserDialogComponent } from './../../../dialogs/add-user-dialog/add-user-dialog.component';\nimport { User } from './../../../models/User';\nimport { UserService } from './../../../services/UserService';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatTable, MatPaginator, MatDialog } from '@angular/material';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    'fName',\n    'lName',\n    'email',\n    'role',\n    'actions'\n  ];\n  users: User[] = [];\n  dataSource = new MatTableDataSource<User>();\n  progress=false;\n  @ViewChild(MatTable, { static: true }) table: MatTable<any>;\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  constructor(private userService: UserService,    public dialog: MatDialog,) { }\n\n  ngOnInit() {\n    this.getUserData();\n    this.dataSource.paginator = this.paginator;\n  }\n\n  openDialog() {\n    const dialogRef = this.dialog.open(AddUserDialogComponent, {\n      width: '600px',\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      if (result) {\n        console.log(result);\n        this.progress = true;\n        const user: User = result;\n        // change concat to replace when using real api\n        this.userService.register(user).subscribe(result => {\n          this.getUserData();\n          console.log(result);\n        }, error => {\n          console.log(error);\n          this.progress = false;\n        })\n      }\n    });\n  }\n\n  getUserData(){\n    this.progress = true;\n    this.userService.getUsers().subscribe((result) => {\n      this.users = result;\n      console.log(result);\n      this.dataSource.data = this.users;\n      this.progress = false;\n    }, error=>{\n      console.log(error);\n      this.progress = false;\n    })\n  }\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n}\n","<mat-tab-group>\n    <mat-tab i18n-label=\"@@orders\" label=\"Orders\">\n        <ng-template matTabContent>\n\n\n        </ng-template>\n    </mat-tab>\n</mat-tab-group>\n<mat-progress-bar mode=\"indeterminate\" *ngIf=\"progress\"></mat-progress-bar>\n<mat-card>\n    <button mat-raised-button color=\"primary\" (click)=\"openDialog()\" i18n=\"@@add\">Add</button><br><br>\n    <mat-form-field>\n        <input matInput (keyup)=\"applyFilter($event.target.value)\" [(ngModel)]=\"id\" i18n-placeholder=\"@@filter\"\n            placeholder=\"Filter\">\n    </mat-form-field>\n    <mat-paginator #paginatorTop (page)=\"onTopPaginateChange()\" [pageSizeOptions]=\"[5, 10, 20, 50]\"\n        showFirstLastButtons></mat-paginator>\n    <table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows class=\"mat-elevation-z8\" matSort>\n        <ng-container matColumnDef=\"proposalNo\">\n            <th mat-header-cell *matHeaderCellDef i18n=\"@@proposalNo\" mat-sort-header> Proposal No </th>\n            <td mat-cell *matCellDef=\"let element\"\n                (click)=\"expandedElement = expandedElement === element ? null : element\">\n                {{element.proposalNo}} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"customerName\">\n            <th mat-header-cell *matHeaderCellDef i18n=\"@@customer\" mat-sort-header> Customer</th>\n            <td mat-cell *matCellDef=\"let element\">\n                <button mat-button [color]=\"!element.customer.active ? 'warn':''\" class=\"customerBtn\"\n                    (click)=\"viewCustomer(element.customer)\">{{element.customer.customerName}}</button>\n            </td>\n        </ng-container>\n        <ng-container matColumnDef=\"salesDestination\">\n            <th mat-header-cell *matHeaderCellDef i18n=\"@@salesDestination\" mat-sort-header> Sales Destination </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <button mat-button [color]=\"!element.salesDestination.active ? 'warn':''\" class=\"customerBtn\"\n                    (click)=\"viewCustomer(element.salesDestination)\">{{element.salesDestination.customerName}}\n                </button>\n            </td>\n        </ng-container>\n        <ng-container matColumnDef=\"contractor\">\n            <th mat-header-cell *matHeaderCellDef i18n=\"@@contractor\" mat-sort-header> Contractor </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <button mat-button [color]=\"!element.contractor.active ? 'warn':''\" class=\"customerBtn\"\n                    (click)=\"viewCustomer(element.contractor)\">\n                    {{element.contractor.customerName}}\n                </button>\n            </td>\n        </ng-container>\n        <ng-container matColumnDef=\"receivedDate\">\n            <th mat-header-cell *matHeaderCellDef i18n=\"@@recievedDate\" mat-sort-header> Received Date </th>\n            <td mat-cell *matCellDef=\"let element\"\n                (click)=\"expandedElement = expandedElement === element ? null : element\">\n                {{element.receivedDate | date:'shortDate'}} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"dueDate\">\n            <th mat-header-cell *matHeaderCellDef i18n=\"@@dueDate\" mat-sort-header> Due Date </th>\n            <td mat-cell *matCellDef=\"let element\"\n                (click)=\"expandedElement = expandedElement === element ? null : element\">\n                {{element.dueDate | date:'shortDate'}} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"deliveryDate\">\n                <th mat-header-cell *matHeaderCellDef i18n=\"@@deliveryDate\" mat-sort-header> Delivery Date </th>\n                <td mat-cell *matCellDef=\"let element\"\n                    (click)=\"expandedElement = expandedElement === element ? null : element\">\n                    {{element.deliveryDate | date:'shortDate'}} </td>\n            </ng-container>\n        <ng-container matColumnDef=\"salesUser\">\n            <th mat-header-cell *matHeaderCellDef i18n=\"@@salesUser\" mat-sort-header> Sales User</th>\n            <td mat-cell *matCellDef=\"let element\"\n                (click)=\"expandedElement = expandedElement === element ? null : element\">\n                {{element.salesUser.firstName}} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"actions\">\n            <th mat-header-cell *matHeaderCellDef></th>\n            <td mat-cell *matCellDef=\"let element;\">\n                <button mat-raised-button color=\"warn\" (click)=\"unFullFillOrder(element)\" *ngIf=\"element.fulfilled\"\n                    i18n=\"@@shipped\">Shipped</button>\n                <button mat-raised-button class=\"fullfillBtn\" (click)=\"fullFillOrder(element)\"\n                    *ngIf=\"!element.fulfilled\" i18n=\"@@waitToShip\">Wait</button>\n                <button mat-button color=\"primary\" (click)=\"editOrder(element)\" i18n=\"@@edit\">Edit</button>\n                <button mat-button color=\"warn\" (click)=\"deleteOrder(element)\" i18n=\"@@delete\">Delete</button>\n            </td>\n        </ng-container>\n\n        <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n        <ng-container matColumnDef=\"expandedDetail\">\n            <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"columnsToDisplay.length\">\n\n                <div class=\"element-detail\" [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n                    <mat-card\n                        [ngClass]=\"{'productComponent': !component.product.set,'productSetComponent': component.product.set}\"\n                        *ngFor=\"let component of element.orderedProducts\" matBadge=\"Set\"\n                        [matBadgeHidden]=\"!component.product.set\">\n                        <h4>{{component.product.productName}}</h4>\n                        <p>{{component.product.description}}</p>\n                        <span>Price : {{util.getCurrencySign(component.product.currency)}}\n                            {{component.product.price}}</span><br>\n                        <span *ngIf=\"!component.product.set\">QTY: {{component.product.quantity}}</span><br\n                            *ngIf=\"!component.product.set\">\n                        <span *ngIf=\"!component.product.set\">Lead Time: {{component.product.leadTime}}w</span><br\n                            *ngIf=\"!component.product.set\">\n                        <span *ngIf=\"!component.product.set\">MOQ : {{component.product.moq}}</span><br\n                            *ngIf=\"!component.product.set\">\n                        <span>Obic No: {{component.product.obicNo}}</span><br>\n                        <h5>Amount: {{component.quantity}}</h5>\n                        <mat-accordion *ngIf=\"component.product.set\">\n                            <mat-expansion-panel *ngFor=\"let sub of component.product.products\">\n                                <mat-expansion-panel-header class=\"left-aligned-header\">\n                                    <mat-panel-title>\n                                        {{sub.product.productName}}\n                                    </mat-panel-title>\n                                    <mat-panel-description>\n                                        {{sub.quantity}}\n                                    </mat-panel-description>\n                                </mat-expansion-panel-header>\n                                <p>{{sub.product.description}}</p>\n                                <span>Price : {{util.getCurrencySign(sub.product.currency)}}\n                                    {{sub.product.price}}</span><br>\n                                <span>QTY: {{sub.product.quantity}}</span><br>\n                                <span>Lead Time: {{sub.product.leadTime}}w</span><br>\n                                <span>MOQ : {{sub.product.moq}}</span><br>\n                                <span>Obic No: {{sub.product.obicNo}}</span><br>\n                                <h5>Amount: {{sub.quantity}}</h5>\n                            </mat-expansion-panel>\n                        </mat-accordion>\n\n                    </mat-card>\n\n                </div>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n        <tr mat-row *matRowDef=\"let element; columns: columnsToDisplay;\" class=\"element-row\"\n            [class.expanded-row]=\"expandedElement === element\">\n        </tr>\n        <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"detail-row\"></tr>\n\n    </table>\n</mat-card>\n<mat-paginator #paginatorBottom (page)=\"onBottomPaginateChange($event)\" [pageSizeOptions]=\"[5, 10, 20, 50]\"\n    showFirstLastButtons></mat-paginator>","import { UtilService } from './../../services/UtilService';\nimport { UnfulfilledProductsComponent } from './../../dialogs/unfulfilled-products/unfulfilled-products.component';\nimport { FulfillOrderDialogComponent } from './../../dialogs/fulfill-order-dialog/fulfill-order-dialog.component';\nimport { SaveOrder } from './../../models/SaveOrder';\nimport { AddOrderDialogComponent } from './../../dialogs/add-order-dialog/add-order-dialog.component';\nimport { OrderedProduct } from './../../models/OrderedProduct';\nimport { Customer } from 'src/app/models/Customer';\nimport { OrderService } from './../../services/OrderService';\nimport { MatTableDataSource, MatTable, MatPaginator, MatDialog, MatSort } from '@angular/material';\nimport { Order } from './../../models/Order';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { ViewCustomerDialogComponent } from 'src/app/dialogs/view-customer-dialog/view-customer-dialog.component';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { EditOrderDialogComponent } from 'src/app/dialogs/edit-order-dialog/edit-order-dialog.component';\nimport { DeleteConfirmationDialogComponent } from 'src/app/dialogs/delete-confirmation-dialog/delete-confirmation-dialog.component';\nimport { ActivatedRoute } from '@angular/router';\nimport { UnfulfillConfirmationComponent } from 'src/app/dialogs/unfulfill-confirmation/unfulfill-confirmation.component';\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.scss'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed, void', style({ height: '0px', minHeight: '0', display: 'none' })),\n  state('expanded', style({ height: '*' })),\n  transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n  transition('expanded <=> void', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\n    ]),]\n})\nexport class OrdersComponent implements OnInit {\n  expandedElement;\n  columnsToDisplay: string[] = [\n    'proposalNo',\n    'customerName',\n    'salesDestination',\n    'contractor',\n    'receivedDate',\n    'dueDate',\n    'deliveryDate',\n    'salesUser',\n    'actions'\n  ];\n  progress = false;\n  orders: Order[] = [];\n  id: string;\n  private searchSub: any;\n  dataSource = new MatTableDataSource<Order>();\n  @ViewChild(MatTable, { static: true }) table: MatTable<any>\n  @ViewChild('paginatorTop', { static: true }) paginatorTop: MatPaginator;\n  @ViewChild('paginatorBottom', { static: true }) paginatorBottom: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n  constructor(\n    private route: ActivatedRoute,\n    public dialog: MatDialog,\n    private orderService: OrderService,\n    public util: UtilService  ) { }\n\n  ngOnInit() {\n    this.getOrderData();\n    this.dataSource.paginator = this.paginatorTop;\n    this.dataSource.sortingDataAccessor = (item, property) => {\n      switch(property) {\n        case 'customerName': return item.customer.customerName;\n        case 'salesDestination': return item.salesDestination.customerName;\n        case 'contractor': return item.contractor.customerName;\n        case 'salesUser': return item.salesUser.firstName;\n        default: return item[property];\n      }\n    };\n    this.searchSub = this.route.params.subscribe(params => {\n      this.id = params['id'];\n      if (this.id) {\n\n        this.applyFilter(this.id);\n      }\n    });\n    this.dataSource.sort = this.sort;\n    this.dataSource.filterPredicate = (data, filter: string)  => {\n      const accumulator = (currentTerm, key) => {\n        return key === 'contractor' ? currentTerm + data.contractor.customerName : \n        key === 'salesUser' ? currentTerm + data.salesUser.firstName : \n        key === 'salesDestination' ? currentTerm + data.salesDestination.customerName :\n        key === 'customer' ? currentTerm + data.customer.customerName :currentTerm + data[key];\n      };\n      const dataStr = Object.keys(data).reduce(accumulator, '').toLowerCase();\n      // Transform the filter by converting it to lowercase and removing whitespace.\n      const transformedFilter = filter.trim().toLowerCase();\n      return dataStr.indexOf(transformedFilter) !== -1;\n    };\n  }\n\n  onTopPaginateChange(){\n    this.paginatorBottom.length = this.dataSource.data.length;\n    this.paginatorBottom.pageSize = this.paginatorTop.pageSize;\n    this.paginatorBottom.pageIndex = this.paginatorTop.pageIndex;\n  }\n  onBottomPaginateChange(event){\n    if(event.previousPageIndex<event.pageIndex && event.pageIndex-event.previousPageIndex==1) {\n      this.paginatorTop.nextPage();\n    }\n    if(event.previousPageIndex>event.pageIndex && event.pageIndex-event.previousPageIndex==-1) {\n      this.paginatorTop.previousPage();\n    }\n    if(event.previousPageIndex<event.pageIndex && event.pageIndex-event.previousPageIndex>1) {\n      this.paginatorTop.lastPage();\n    }\n    if(event.previousPageIndex>event.pageIndex && event.previousPageIndex-event.pageIndex>1) {\n      this.paginatorTop.firstPage();\n    }\n    this.paginatorTop._changePageSize(this.paginatorBottom.pageSize);\n\n  }\n\n  getOrderData() {\n    this.progress = true;\n    this.orderService.getOrders().subscribe(result => {\n      this.orders = result;\n      this.dataSource.data = this.orders;\n      console.log(this.orders);\n      this.progress = false;\n      this.onTopPaginateChange();\n    }, error => {\n      this.progress = false;\n      console.log(error);\n    })\n\n  }\n  viewCustomer(customer: Customer) {\n    const dialogRef = this.dialog.open(ViewCustomerDialogComponent, {\n      width: '600px',\n      data: customer\n    });\n  }\n  openDialog() {\n    const dialogRef = this.dialog.open(AddOrderDialogComponent, {\n      width: '600px',\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      if (result) {\n        console.log(result);\n        this.progress = true;\n        const order: SaveOrder = result;\n        // change concat to replace when using real api\n        this.orderService.addOrder(order).subscribe(result => {\n          this.getOrderData();\n          console.log(result);\n        }, error => {\n          console.log(error);\n          this.progress = false;\n        })\n      }\n    });\n  }\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  editOrder(data: Order) {\n    const dialogRef = this.dialog.open(EditOrderDialogComponent, {\n      width: '600px',\n      data: data\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      if (result) {\n        this.progress = true;\n        const order: SaveOrder = result;\n        order.orderId = data.orderId;\n        this.orderService.editOrder(order).subscribe(result => {\n          this.getOrderData();\n        }, error => {\n          this.progress = false;\n        })\n      }\n    });\n  }\n\n  fullFillOrder(data: Order) {\n    const dialogRef = this.dialog.open(FulfillOrderDialogComponent, {\n      width: '600px',\n      data: data.proposalNo\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      if (result) {\n        this.progress = true;\n        this.orderService.fulfillOrder(data.orderId).subscribe(result => {\n          this.getOrderData();\n        }, error => {\n          // open unfulfilled porducts\n          console.log(error.error.unfulfilled);\n          const dialogRef = this.dialog.open(UnfulfilledProductsComponent, {\n            width: '600px',\n            data: error.error.unfulfilled\n          });\n          this.progress = false;\n        })\n      }\n    });\n  }\n  unFullFillOrder(data: Order) {\n    const dialogRef = this.dialog.open(UnfulfillConfirmationComponent, {\n      width: '600px',\n      data: data.proposalNo\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.progress = true;\n        this.orderService.unFulfillOrder(data.orderId).subscribe(result => {\n          this.getOrderData();\n        }, error => {\n          this.progress = false;\n        })\n      }\n    });\n  }\n\n  deleteOrder(order: Order) {\n    const data = this.orders[this.orders.indexOf(order)];\n    const dialogRef = this.dialog.open(DeleteConfirmationDialogComponent, {\n      width: '600px',\n      data: data.proposalNo\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.progress = true;\n        this.orderService.deleteOrder(data.orderId).subscribe(result => {\n          this.getOrderData();\n        }, error => {\n          this.progress = false;\n        })\n      }\n    });\n  }\n\n\n}\n","<mat-progress-bar mode=\"indeterminate\" *ngIf=\"progress\"></mat-progress-bar>\n<mat-card>\n    <button mat-raised-button color=\"primary\" (click)=\"openDialog()\" i18n=\"@@add\">Add</button><br><br>\n    <mat-form-field>\n        <input matInput (keyup)=\"applyFilter($event.target.value)\" i18n-placeholder=\"@@filter\" placeholder=\"Filter\">\n    </mat-form-field>\n    <mat-paginator #paginatorTop (page)=\"onTopPaginateChange()\" [pageSizeOptions]=\"[5, 10, 20, 50]\"\n        showFirstLastButtons></mat-paginator>\n    <table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows class=\"mat-elevation-z8\" matSort>\n        <ng-container matColumnDef=\"productName\">\n            <th mat-header-cell *matHeaderCellDef i18n=\"@@productSetName\" mat-sort-header> Name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.productName}} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"description\">\n            <th mat-header-cell *matHeaderCellDef i18n=\"@@description\" mat-sort-header> Description </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.description}} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"price\">\n            <th mat-header-cell *matHeaderCellDef i18n=\"@@price\" mat-sort-header> Price </th>\n            <td mat-cell *matCellDef=\"let element\">{{util.getCurrencySign(element.currency)}} {{element.price}} </td>\n        </ng-container>\n        <!-- <ng-container matColumnDef=\"quantity\" >\n        <th mat-header-cell *matHeaderCellDef i18n=\"@@quantity\"> QTY </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.quantity}} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"leadTime\">\n        <th mat-header-cell *matHeaderCellDef i18n=\"@@leadTime\"> Lead Time </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.leadTime}} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"moq\">\n        <th mat-header-cell *matHeaderCellDef i18n=\"@@moq\"> MOQ </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.moq}} </td>\n    </ng-container> -->\n        <ng-container matColumnDef=\"obicNo\">\n            <th mat-header-cell *matHeaderCellDef i18n=\"@@obicNo\" mat-sort-header> Obic No </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.obicNo}} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"actions\">\n            <th mat-header-cell *matHeaderCellDef></th>\n            <td mat-cell *matCellDef=\"let element;\">\n                <button mat-button color=\"primary\" (click)=\"editProductSet(element)\" i18n=\"@@edit\">Edit</button>\n                <button mat-button color=\"warn\" (click)=\"deleteProduct(element)\" i18n=\"@@delete\">Delete</button>\n            </td>\n        </ng-container>\n\n        <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n        <ng-container matColumnDef=\"expandedDetail\">\n            <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"columnsToDisplay.length\">\n                <div class=\"element-detail\" [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n                    <mat-card\n                        [ngClass]=\"{'productComponent': component.product.active,'notAvailable': !component.product.active}\"\n                        *ngFor=\"let component of element.products\">\n                        <h4>{{component.product.productName}}</h4>\n                        <p>{{component.product.description}}</p>\n                        <span i18n=\"@@price\">Price</span> <span>:{{util.getCurrencySign(component.product.currency)}}\n                            {{component.product.price}}</span><br>\n                        <span i18n=\"@@quantity\">QTY</span><span>: {{component.product.quantity}}</span><br>\n                        <span i18n=\"@@leadTime\">Lead Time</span><span>: {{component.product.leadTime}}w</span><br>\n                        <span i18n=\"@@moq\">MOQ</span><span> : {{component.product.moq}}</span><br>\n                        <span i18n=\"@@obicNo\">Obic No</span><span>: {{component.product.obicNo}}</span><br>\n                        <h5><span i18n=\"@@amount\">Amount</span>: {{component.quantity}}</h5>\n                    </mat-card>\n\n                </div>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n        <tr mat-row *matRowDef=\"let element; columns: columnsToDisplay;\" class=\"element-row\"\n            [class.expanded-row]=\"expandedElement === element\"\n            (click)=\"expandedElement = expandedElement === element ? null : element\">\n        </tr>\n        <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"detail-row\"></tr>\n\n    </table>\n\n</mat-card>\n<mat-paginator #paginatorBottom (page)=\"onBottomPaginateChange($event)\" [pageSizeOptions]=\"[5, 10, 20, 50]\"\n    showFirstLastButtons></mat-paginator>","import { UtilService } from './../../services/UtilService';\nimport { SaveProductSet } from './../../models/saveProductSet';\nimport { AddProductSetDialogComponent } from './../../dialogs/add-product-set-dialog/add-product-set-dialog.component';\nimport { ProductSet } from './../../models/ProductSet';\nimport { ProductService } from './../../services/ProductService';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatTable, MatPaginator, MatDialog, MatSort } from '@angular/material';\nimport { Product } from 'src/app/models/Product';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { EditProductSetDialogComponent } from 'src/app/dialogs/edit-product-set-dialog/edit-product-set-dialog.component';\nimport { DeleteConfirmationDialogComponent } from 'src/app/dialogs/delete-confirmation-dialog/delete-confirmation-dialog.component';\n\n@Component({\n  selector: 'app-product-sets',\n  templateUrl: './product-sets.component.html',\n  styleUrls: ['./product-sets.component.scss'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed, void', style({ height: '0px', minHeight: '0', display: 'none' })),\n      state('expanded', style({ height: '*' })),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n      transition('expanded <=> void', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\n    ]),]\n})\nexport class ProductSetsComponent implements OnInit {\n  columnsToDisplay: string[] = [\n    'productName',\n    'description',\n    'price',\n    // 'quantity',\n    // 'leadTime',\n    // 'moq',\n    'obicNo',\n    'actions'\n  ];\n  progress = false;\n  dataSource = new MatTableDataSource<Product>();\n  productSets: ProductSet[];\n  @ViewChild(MatTable, { static: true }) table: MatTable<any>;\n  @ViewChild('paginatorTop', { static: true }) paginatorTop: MatPaginator;\n  @ViewChild('paginatorBottom', { static: true }) paginatorBottom: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  expandedElement: ProductSet | null;\n  constructor(\n    private productService: ProductService,\n    public dialog: MatDialog,\n    public util: UtilService\n  ) { }\n\n  ngOnInit() {\n    this.getProductSetData();\n    this.dataSource.paginator = this.paginatorTop;\n    this.dataSource.sort = this.sort;\n  }\n\n  getProductSetData() {\n    this.progress = true;\n    this.productService.getProductSets().subscribe(result => {\n      this.productSets = result;\n      this.dataSource.data = this.productSets;\n      this.progress = false;\n      this.onTopPaginateChange();\n    }, error => {\n      this.progress = false;\n    })\n  }\n  deleteProduct(i: any) {\n    const data = this.productSets[this.productSets.indexOf(i)];\n    const dialogRef = this.dialog.open(DeleteConfirmationDialogComponent, {\n      width: '1000px',\n      data: data.productName\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.progress = true;\n        this.productService.deleteProductSet(data.productId).subscribe(result => {\n          this.getProductSetData();\n\n        }, error => {\n          this.progress = true;\n          console.log(error);\n        })\n      }\n    });\n\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n  openDialog(): void {\n    const dialogRef = this.dialog.open(AddProductSetDialogComponent, {\n      width: '600px',\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n\n      console.log(result);\n      if (result) {\n        this.progress = true;\n        this.productService.addProductSet(result).subscribe(result => {\n          this.getProductSetData();\n        }, error => {\n          console.log(error);\n          this.progress = false;\n        })\n      }\n    });\n  }\n  editProductSet(data: ProductSet) {\n    const dialogRef = this.dialog.open(EditProductSetDialogComponent, {\n      width: '600px',\n      data: data\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      if (result) {\n        this.progress = true;\n        console.log(result);\n        const productset: SaveProductSet = result;\n        productset.productId = data.productId;\n        this.productService.editProductSet(productset).subscribe(result => {\n          console.log(result);\n          this.getProductSetData();\n        }, error => {\n          this.progress = false;\n        })\n      }\n    });\n  }\n  onTopPaginateChange() {\n    this.paginatorBottom.length = this.dataSource.data.length;\n    this.paginatorBottom.pageSize = this.paginatorTop.pageSize;\n    this.paginatorBottom.pageIndex = this.paginatorTop.pageIndex;\n  }\n  onBottomPaginateChange(event) {\n    if (event.previousPageIndex < event.pageIndex && event.pageIndex - event.previousPageIndex == 1) {\n      this.paginatorTop.nextPage();\n    }\n    if (event.previousPageIndex > event.pageIndex && event.pageIndex - event.previousPageIndex == -1) {\n      this.paginatorTop.previousPage();\n    }\n    if (event.previousPageIndex < event.pageIndex && event.pageIndex - event.previousPageIndex > 1) {\n      this.paginatorTop.lastPage();\n    }\n    if (event.previousPageIndex > event.pageIndex && event.previousPageIndex - event.pageIndex > 1) {\n      this.paginatorTop.firstPage();\n    }\n    this.paginatorTop._changePageSize(this.paginatorBottom.pageSize);\n\n  }\n\n}\n","<mat-tab-group>\n  <mat-tab i18n-label=\"@@products\" label=\"Products\">\n    <ng-template matTabContent>\n      <app-products></app-products>\n    </ng-template>\n  </mat-tab>\n  <mat-tab i18n-label=\"@@productSets\" label=\"Product Sets\">\n    <ng-template matTabContent>\n      <app-product-sets></app-product-sets>\n    </ng-template>\n  </mat-tab>\n</mat-tab-group>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-products-container',\n  templateUrl: './products-container.component.html',\n  styleUrls: ['./products-container.component.scss']\n})\nexport class ProductsContainerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<mat-progress-bar mode=\"indeterminate\" *ngIf=\"progress\"></mat-progress-bar>\n<mat-card>\n\n    <div class=\"row\">\n\n        <button mat-raised-button color=\"primary\" class=\"topButton\" (click)=\"openDialog()\" i18n=\"@@add\">Add</button>\n        \n        <button mat-raised-button color=\"primary\" class=\"topButton\" (click)=\"clickImport()\" i18n=\"@@importProductsviaExcel\">Import Products via Excel</button>\n        <input type=\"file\" #importFile style=\"display:none\" class=\"topButton\" data-buttonText=\"Import Products via Excel\" (change)=\"onFileChange($event)\" multiple=\"false\" />\n        <button mat-raised-button color=\"primary\" class=\"topButton\" (click)=\"downloadTemplate()\" i18n=\"@@downloadTemplate\">Download Template</button>\n        <button mat-raised-button color=\"primary\" class=\"topButton\" (click)=\"clickExport()\" i18n=\"@@export\">Export</button>\n    </div>\n\n    <mat-form-field>\n        <input matInput (keyup)=\"applyFilter($event.target.value)\" i18n-placeholder=\"@@filter\" placeholder=\"Filter\">\n    </mat-form-field>\n    <mat-paginator #paginatorTop (page)=\"onTopPaginateChange()\" [pageSizeOptions]=\"[5, 10, 20, 50]\"\n        showFirstLastButtons></mat-paginator>\n    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" matSort>\n        <ng-container matColumnDef=\"productName\">\n            <th mat-header-cell *matHeaderCellDef i18n=\"@@productName\" mat-sort-header> Name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.productName}} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"description\">\n            <th mat-header-cell *matHeaderCellDef i18n=\"@@description\" mat-sort-header> Description </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.description}} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"price\">\n            <th mat-header-cell *matHeaderCellDef i18n=\"@@price\" mat-sort-header> Price </th>\n            <td mat-cell *matCellDef=\"let element\">{{util.getCurrencySign(element.currency)}} {{element.price}} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"quantity\">\n            <th mat-header-cell *matHeaderCellDef i18n=\"@@quantity\" mat-sort-header> Current QTY </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.quantity}} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"leadTime\">\n            <th mat-header-cell *matHeaderCellDef i18n=\"@@leadTime\" mat-sort-header> Lead Time </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.leadTime}}w </td>\n        </ng-container>\n        <ng-container matColumnDef=\"moq\">\n            <th mat-header-cell *matHeaderCellDef i18n=\"@@moq\" mat-sort-header> MOQ </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.moq}} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"obicNo\">\n            <th mat-header-cell *matHeaderCellDef i18n=\"@@obicNo\" mat-sort-header> Obic No </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.obicNo}} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"actions\">\n            <th mat-header-cell *matHeaderCellDef></th>\n            <td mat-cell *matCellDef=\"let element;\">\n                <button mat-button color=\"primary\" (click)=\"editProduct(element)\" i18n=\"@@edit\">Edit</button>\n                <button mat-button color=\"warn\" (click)=\"deleteProduct(element)\" i18n=\"@@delete\">Delete</button>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"editProduct(row)\" class=\"element-row\">\n        </tr>\n\n    </table>\n</mat-card>\n<mat-paginator #paginatorBottom (page)=\"onBottomPaginateChange($event)\" [pageSizeOptions]=\"[5, 10, 20, 50]\"\n    showFirstLastButtons></mat-paginator>\n","import { ExcelServices } from './../../services/ExcelService';\nimport { UtilService } from './../../services/UtilService';\nimport { DeleteConfirmationDialogComponent } from './../../dialogs/delete-confirmation-dialog/delete-confirmation-dialog.component';\nimport { ProductService } from './../../services/ProductService';\nimport { AddProductDialogComponent } from './../../dialogs/add-product-dialog/add-product-dialog.component';\nimport { Product } from './../../models/Product';\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { MatDialog, MatTable, MatPaginator, MatTableDataSource, MatSort } from '@angular/material';\nimport { UpdateProductDialogComponent } from 'src/app/dialogs/update-product-dialog/update-product-dialog.component';\nimport * as XLSX from 'xlsx';\nimport { nextTick } from 'q';\n\ntype AOA = any[][];\n\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.scss']\n})\n\nexport class ProductsComponent implements OnInit {\n\n  displayedColumns: string[] = [\n    'productName',\n    'description',\n    'price',\n    'quantity',\n    'leadTime',\n    'moq',\n    'obicNo',\n    'actions'\n  ];\n  products: Product[] = [];\n  productName: string;\n  dataSource = new MatTableDataSource<Product>();\n  progress = false;\n  data: AOA = [[1, 2], [3, 4]];\n  @ViewChild(MatTable, { static: true }) table: MatTable<any>;\n  @ViewChild('paginatorTop', { static: true }) paginatorTop: MatPaginator;\n  @ViewChild('paginatorBottom', { static: true }) paginatorBottom: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  @ViewChild('importFile', { static: true }) importFile: ElementRef;\n  constructor(\n    public dialog: MatDialog,\n    public productService: ProductService,\n    public util: UtilService,\n    private excel: ExcelServices) { }\n\n  ngOnInit() {\n    this.getProductData();\n    this.dataSource.paginator = this.paginatorTop;\n    this.dataSource.sort = this.sort;\n\n  }\n  getProductData() {\n    this.progress = true;\n    this.productService.getProducts().subscribe(result => {\n      this.products = result;\n      this.dataSource.data = this.products;\n      this.progress = false;\n      this.onTopPaginateChange();\n    }, error => {\n      this.progress = false;\n    })\n  }\n\n  onTopPaginateChange() {\n    this.paginatorBottom.length = this.dataSource.data.length;\n    this.paginatorBottom.pageSize = this.paginatorTop.pageSize;\n    this.paginatorBottom.pageIndex = this.paginatorTop.pageIndex;\n  }\n  onBottomPaginateChange(event) {\n    if (event.previousPageIndex < event.pageIndex && event.pageIndex - event.previousPageIndex == 1) {\n      this.paginatorTop.nextPage();\n    }\n    if (event.previousPageIndex > event.pageIndex && event.pageIndex - event.previousPageIndex == -1) {\n      this.paginatorTop.previousPage();\n    }\n    if (event.previousPageIndex < event.pageIndex && event.pageIndex - event.previousPageIndex > 1) {\n      this.paginatorTop.lastPage();\n    }\n    if (event.previousPageIndex > event.pageIndex && event.previousPageIndex - event.pageIndex > 1) {\n      this.paginatorTop.firstPage();\n    }\n    this.paginatorTop._changePageSize(this.paginatorBottom.pageSize);\n\n  }\n\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(AddProductDialogComponent, {\n      width: '600px',\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n\n      if (result) {\n        const product: Product = result;\n\n        // API Requst to save product\n        this.progress = true;\n        this.productService.saveProduct(product).subscribe(result => {\n          this.getProductData();\n        }, error => {\n          this.progress = false;\n        })\n\n      }\n    });\n  }\n\n  editProduct(i: any) {\n    const data = this.products[this.products.indexOf(i)];\n    const dialogRef = this.dialog.open(UpdateProductDialogComponent, {\n      width: '600px',\n      data: data\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.progress = true;\n        const product: Product = result;\n        product.productId = data.productId;\n        // change concat to replace when using real api\n        this.productService.updateProduct(product).subscribe((result) => {\n          this.getProductData();\n        }, error => {\n          this.progress = false;\n        })\n\n      }\n    });\n  }\n\n  deleteProduct(i: any) {\n    const data = this.products[this.products.indexOf(i)]\n    const dialogRef = this.dialog.open(DeleteConfirmationDialogComponent, {\n      width: '600px',\n      data: data.productName\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.progress = true;\n        this.productService.deleteProduct(data.productId).subscribe(result => {\n          this.getProductData();\n        }, error => {\n          this.progress = false;\n        })\n      }\n    });\n\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  onFileChange(evt: any) {\n    /* wire up file reader */\n    const target: DataTransfer = <DataTransfer>(evt.target);\n    if (target.files.length !== 1) throw new Error('Cannot use multiple files');\n    const reader: FileReader = new FileReader();\n    reader.onload = (e: any) => {\n      /* read workbook */\n      const bstr: string = e.target.result;\n      const wb: XLSX.WorkBook = XLSX.read(bstr, { type: 'binary' });\n\n      /* grab first sheet */\n      const wsname: string = wb.SheetNames[0];\n      const ws: XLSX.WorkSheet = wb.Sheets[wsname];\n\n      /* save data */\n      this.data = <AOA>(XLSX.utils.sheet_to_json(ws, { header: 1 }));\n      console.log(this.data);\n      this.insertDataAsAnArray(this.data);\n    };\n    reader.readAsBinaryString(target.files[0]);\n  }\n  insertDataAsAnArray(excelData: any[]) {\n    let productArray: Product[] = [];\n    let promiseArray: Promise<any>[] = [];\n    excelData.slice(0).forEach((row) => {\n      let valid = true;\n      let tempProduct: Product = {\n\n        obicNo: row[0] ? row[0] : \" \",\n        productName: row[1] ? row[1] : (valid = false),\n        description: row[2] ? row[2] : (valid = false),\n        currency: (row[3] == \"USD\" || row[3] == \"JPY\") ? row[3] : (valid = false),\n        price: row[4] ? row[4] : (valid = false),\n        moq: row[5] ? row[5] : (valid = false),\n        quantity: row[6] ? row[6] : (valid = false),\n        leadTime: row[7] ? row[7] : (valid = false),\n      };\n      if (valid) {\n        let promise = new Promise((resolve, reject) => {\n\n          this.productService.saveProduct(tempProduct).toPromise().then(() => {\n            resolve();\n          }).catch(() => {\n            reject();\n          })\n        })\n        promiseArray.push(promise);\n      }\n    })\n    Promise.all(promiseArray).then(() => {\n      this.getProductData();\n    });\n    console.log(productArray);\n  }\n  downloadTemplate() {\n    window.location.href = \"assets/downloads/Product-Import-Template.xlsx\";\n  }\n  clickImport() {\n    this.importFile.nativeElement.click();\n  }\n\n  clickExport() {\n    this.excel.generateExcel(this.products);\n  }\n}\n","<mat-progress-bar mode=\"indeterminate\" *ngIf=\"progress\"></mat-progress-bar>\n<mat-card>\n  <button mat-raised-button color=\"primary\" (click)=\"openDialog()\" i18n=\"@@add\">Add</button><br><br>\n  <mat-form-field>\n    <input matInput (keyup)=\"applyFilter($event.target.value)\" i18n-placeholder=\"@@filter\" placeholder=\"Filter\">\n  </mat-form-field>\n  <mat-paginator #paginatorTop (page)=\"onTopPaginateChange()\" [pageSizeOptions]=\"[5, 10, 20, 50]\" showFirstLastButtons>\n  </mat-paginator>\n  <table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows class=\"mat-elevation-z8\" matSort>\n    <ng-container matColumnDef=\"shipmentNo\">\n      <th mat-header-cell *matHeaderCellDef i18n=\"@@shipmentNo\" mat-sort-header> Shipment No </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.shipmentNo}} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"arrivalDate\">\n      <th mat-header-cell *matHeaderCellDef i18n=\"@@arrivalDate\" mat-sort-header> Arrival Date </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.arrivalDate | date:'shortDate'}} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"user\">\n      <th mat-header-cell *matHeaderCellDef i18n=\"@@salesUser\" mat-sort-header> User </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.user.firstName}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"actions\">\n      <th mat-header-cell *matHeaderCellDef></th>\n      <td mat-cell *matCellDef=\"let element;\">\n        <button mat-raised-button class=\"fullfillBtn\" *ngIf=\"element.arrived\" (click)=\"fullFillArrival(element)\" [disabled]=\"element.arrived\"\n          i18n=\"@@arrived\">Arrived</button>\n        <button mat-raised-button class=\"fullfillBtn\" *ngIf=\"!element.arrived\" (click)=\"fullFillArrival(element)\" [disabled]=\"element.arrived\"\n          i18n=\"@@notInStock\">Not in stock</button>\n        <button mat-button color=\"primary\" (click)=\"editShipment(element)\" i18n=\"@@edit\">Edit</button>\n        <button mat-button color=\"warn\" (click)=\"deleteShipment(element)\" i18n=\"@@delete\">Delete</button>\n      </td>\n    </ng-container>\n\n    <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n    <ng-container matColumnDef=\"expandedDetail\">\n      <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"columnsToDisplay.length\">\n        <div class=\"element-detail\" [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n          <mat-card class=\"productComponent\" *ngFor=\"let component of element.products\">\n            <h4>{{component.product.productName}}</h4>\n            <p>{{component.product.description}}</p>\n            <span i18n=\"@@stockPrice\">Stock Price</span> <span>:{{util.getCurrencySign(component.product.currency)}}\n              {{component.product.price}}</span><br>\n            <!-- <span>QTY: {{component.product.quantity}}</span><br> -->\n            <span i18n=\"@@leadTime\">Lead Time</span><span>: {{component.product.leadTime}}w</span><br>\n            <span i18n=\"@@moq\">MOQ </span> <span>: {{component.product.moq}}</span><br>\n            <span i18n=\"@@obicNo\">Obic No</span> <span>: {{component.product.obicNo}}</span><br>\n            <h5><span i18n=\"@@amount\">Amount</span> {{component.quantity}}</h5>\n            <h5><span i18n=\"@@price\">Price</span>: {{util.getCurrencySign(component.currency)}} {{component.price}}</h5>\n          </mat-card>\n\n        </div>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n    <tr mat-row *matRowDef=\"let element; columns: columnsToDisplay;\" class=\"element-row\"\n      [class.expanded-row]=\"expandedElement === element\"\n      (click)=\"expandedElement = expandedElement === element ? null : element\">\n    </tr>\n    <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"detail-row\"></tr>\n\n  </table>\n\n</mat-card>\n<mat-paginator #paginatorBottom (page)=\"onBottomPaginateChange($event)\" [pageSizeOptions]=\"[5, 10, 20, 50]\"\n  showFirstLastButtons></mat-paginator>","import { UtilService } from './../../../services/UtilService';\nimport { ArrivalOrderDialogComponent } from './../../../dialogs/arrival-order-dialog/arrival-order-dialog.component';\nimport { EditIncomingShipmentComponent } from './../../../dialogs/edit-incoming-shipment/edit-incoming-shipment.component';\nimport { AddIncomingShipmentComponent } from './../../../dialogs/add-incoming-shipment/add-incoming-shipment.component';\nimport { IncomingShipmentService } from './../../../services/IncomingShipmentService';\n\nimport { MatTableDataSource, MatTable, MatPaginator, MatDialog, MatSort } from '@angular/material';\nimport { IncomingShipment } from './../../../models/IncomingShipment';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { DeleteConfirmationDialogComponent } from 'src/app/dialogs/delete-confirmation-dialog/delete-confirmation-dialog.component';\n\n@Component({\n  selector: 'app-incoming-shipments',\n  templateUrl: './incoming-shipments.component.html',\n  styleUrls: ['./incoming-shipments.component.scss'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed, void', style({ height: '0px', minHeight: '0', display: 'none' })),\n      state('expanded', style({ height: '*' })),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n      transition('expanded <=> void', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\n    ]),]\n})\nexport class IncomingShipmentsComponent implements OnInit {\n  columnsToDisplay: string[] = [\n    'shipmentNo',\n    'arrivalDate',\n    'user',\n    'actions'\n  ];\n  progress = false;\n  dataSource = new MatTableDataSource<IncomingShipment>();\n  shipments: IncomingShipment[] = [];\n  @ViewChild(MatTable, { static: true }) table: MatTable<any>;\n  @ViewChild('paginatorTop', { static: true }) paginatorTop: MatPaginator;\n  @ViewChild('paginatorBottom', { static: true }) paginatorBottom: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  expandedElement: IncomingShipment | null;\n  constructor(\n    private shipmentService: IncomingShipmentService,\n    public dialog: MatDialog,\n    public util: UtilService) { }\n\n  ngOnInit() {\n    this.getShipments();\n    this.dataSource.sortingDataAccessor = (item, property) => {\n      switch (property) {\n        case 'user': return item.user.firstName;\n        default: return item[property];\n      }\n    };\n    this.dataSource.sort = this.sort;\n  }\n\n  onTopPaginateChange() {\n    this.paginatorBottom.length = this.dataSource.data.length;\n    this.paginatorBottom.pageSize = this.paginatorTop.pageSize;\n    this.paginatorBottom.pageIndex = this.paginatorTop.pageIndex;\n  }\n  onBottomPaginateChange(event) {\n    if (event.previousPageIndex < event.pageIndex && event.pageIndex - event.previousPageIndex == 1) {\n      this.paginatorTop.nextPage();\n    }\n    if (event.previousPageIndex > event.pageIndex && event.pageIndex - event.previousPageIndex == -1) {\n      this.paginatorTop.previousPage();\n    }\n    if (event.previousPageIndex < event.pageIndex && event.pageIndex - event.previousPageIndex > 1) {\n      this.paginatorTop.lastPage();\n    }\n    if (event.previousPageIndex > event.pageIndex && event.previousPageIndex - event.pageIndex > 1) {\n      this.paginatorTop.firstPage();\n    }\n    this.paginatorTop._changePageSize(this.paginatorBottom.pageSize);\n\n  }\n\n\n  getShipments() {\n    this.progress = true;\n    this.shipmentService.getShipments().subscribe(result => {\n      this.shipments = result;\n      this.dataSource.data = this.shipments;\n      this.dataSource.paginator = this.paginatorTop;\n      console.log(result);\n      this.onTopPaginateChange();\n      this.progress = false;\n    }, error => {\n      this.progress = false;\n    })\n  }\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  editShipment(element) {\n    const dialogRef = this.dialog.open(EditIncomingShipmentComponent, {\n      width: '600px',\n      data: element\n    });\n    console.log(element);\n\n    dialogRef.afterClosed().subscribe(result => {\n\n      console.log(result);\n      if (result) {\n        this.progress = true;\n        this.shipmentService.editShipment(result).subscribe(result => {\n          this.getShipments();\n        }, error => {\n          console.log(error);\n          this.progress = false;\n        })\n      }\n    });\n  }\n\n  deleteShipment(element) {\n    const data = this.shipments[this.shipments.indexOf(element)];\n    const dialogRef = this.dialog.open(DeleteConfirmationDialogComponent, {\n      width: '600px',\n      data: data.shipmentNo\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.progress = true;\n        this.shipmentService.deleteShipment(data.incomingShipmentId).subscribe(result => {\n          this.getShipments();\n\n        }, error => {\n          this.progress = true;\n          console.log(error);\n        })\n      }\n    });\n\n  }\n  openDialog(): void {\n    const dialogRef = this.dialog.open(AddIncomingShipmentComponent, {\n      width: '800px',\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n\n      console.log(result);\n      if (result) {\n        this.progress = true;\n        this.shipmentService.addShipment(result).subscribe(result => {\n          this.getShipments();\n        }, error => {\n          console.log(error);\n          this.progress = false;\n        })\n      }\n    });\n  }\n  fullFillArrival(data: IncomingShipment) {\n    const dialogRef = this.dialog.open(ArrivalOrderDialogComponent, {\n      width: '600px',\n      data: data.shipmentNo\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      if (result) {\n        this.progress = true;\n        this.shipmentService.arrivalOrder(data.incomingShipmentId).subscribe(result => {\n          this.getShipments();\n        }, error => {\n          this.progress = false;\n        })\n      }\n    });\n  }\n\n}\n","<mat-progress-bar mode=\"indeterminate\" *ngIf=\"progress\"></mat-progress-bar>\n<mat-card>\n    <button mat-raised-button color=\"primary\" (click)=\"openDialog()\" i18n=\"@@add\">Add</button><br><br>\n    <mat-form-field>\n        <input matInput (keyup)=\"applyFilter($event.target.value)\" i18n-placeholder=\"@@filter\" placeholder=\"Filter\">\n    </mat-form-field>\n    <mat-paginator #paginatorTop (page)=\"onTopPaginateChange()\" [pageSizeOptions]=\"[5, 10, 20, 50]\"\n        showFirstLastButtons></mat-paginator>\n    <table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows class=\"mat-elevation-z8\">\n        <ng-container matColumnDef=\"shipmentNo\">\n            <th mat-header-cell *matHeaderCellDef i18n=\"@@shipmentNo\"> Shipment No </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.shipmentNo}} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"shipmentDate\">\n            <th mat-header-cell *matHeaderCellDef i18n=\"@@shipmentDate\"> Shipment Date </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.shipmentDate}} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"salesDestination\">\n            <th mat-header-cell *matHeaderCellDef i18n=\"@@salesDestination\"> User </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.salesDestination.customerName}} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"user\">\n            <th mat-header-cell *matHeaderCellDef i18n=\"@@user\"> User </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.user.firstName}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"actions\">\n            <th mat-header-cell *matHeaderCellDef></th>\n            <td mat-cell *matCellDef=\"let element;\">\n                <button mat-button color=\"primary\" (click)=\"editShipment(element)\" i18n=\"@@edit\">Edit</button>\n                <button mat-button color=\"warn\" (click)=\"deleteShipment(element)\" i18n=\"@@delete\">Delete</button>\n            </td>\n        </ng-container>\n\n        <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n        <ng-container matColumnDef=\"expandedDetail\">\n            <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"columnsToDisplay.length\">\n                <div class=\"element-detail\" [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n                    <mat-card class=\"productComponent\" *ngFor=\"let component of element.products\">\n                        <h4>{{component.product.productName}}</h4>\n                        <p>{{component.product.description}}</p>\n                        <span i18n=\"@@stockPrice\">Stock Price</span> <span>: {{component.product.price}}</span><br>\n                        <!-- <span>QTY: {{component.product.quantity}}</span><br> -->\n                        <span i18n=\"@@leadTime\">Lead Time</span><span>: {{component.product.leadTime}}w</span><br>\n                        <span i18n=\"@@moq\">MOQ </span> <span>: {{component.product.moq}}</span><br>\n                        <span i18n=\"@@obicNo\">Obic No</span> <span>: {{component.product.obicNo}}</span><br>\n                        <h5><span i18n=\"@@amount\">Amount</span> {{component.quantity}}</h5>\n                    </mat-card>\n\n                </div>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n        <tr mat-row *matRowDef=\"let element; columns: columnsToDisplay;\" class=\"element-row\"\n            [class.expanded-row]=\"expandedElement === element\"\n            (click)=\"expandedElement = expandedElement === element ? null : element\">\n        </tr>\n        <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"detail-row\"></tr>\n\n    </table>\n\n</mat-card>\n<mat-paginator #paginatorBottom (page)=\"onBottomPaginateChange($event)\" [pageSizeOptions]=\"[5, 10, 20, 50]\"\n    showFirstLastButtons></mat-paginator>","import { EditOutgoingShipmentComponent } from './../../../dialogs/edit-outgoing-shipment/edit-outgoing-shipment.component';\nimport { AddOutgoingShipmentComponent } from './../../../dialogs/add-outgoing-shipment/add-outgoing-shipment.component';\nimport { OutgoingShipment } from './../../../models/OutgoingShipment';\nimport { OutgoingShipmentService } from './../../../services/OutgoingShipmentService';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { DeleteConfirmationDialogComponent } from 'src/app/dialogs/delete-confirmation-dialog/delete-confirmation-dialog.component';\nimport { MatTableDataSource, MatTable, MatPaginator, MatDialog } from '@angular/material';\n\n@Component({\n  selector: 'app-outgoing-shipments',\n  templateUrl: './outgoing-shipments.component.html',\n  styleUrls: ['./outgoing-shipments.component.scss'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\n      state('expanded', style({ height: '*' })),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),]\n})\nexport class OutgoingShipmentsComponent implements OnInit {\n  columnsToDisplay: string[] = [\n    'shipmentNo',\n    'shipmentDate',\n    'salesDestination',\n    'user',\n    'actions'\n  ];\n  progress = false;\n  dataSource = new MatTableDataSource<OutgoingShipment>();\n  shipments: OutgoingShipment[] = [];\n  @ViewChild(MatTable, { static: true }) table: MatTable<any>;\n  @ViewChild('paginatorTop', { static: true }) paginatorTop: MatPaginator;\n  @ViewChild('paginatorBottom', { static: true }) paginatorBottom: MatPaginator;\n  expandedElement: OutgoingShipment | null;\n  constructor(private shipmentService: OutgoingShipmentService, public dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.getShipments();\n  }\n\n  getShipments() {\n    this.progress = true;\n    this.shipmentService.getShipments().subscribe(result => {\n      this.shipments = result;\n      this.dataSource.data = this.shipments;\n      this.dataSource.paginator = this.paginatorTop;\n      console.log(\"result\");\n      console.log(result);\n      this.onTopPaginateChange();\n      this.progress = false;\n    }, error => {\n      this.progress = false;\n    })\n  }\n\n  onTopPaginateChange(){\n    this.paginatorBottom.length = this.dataSource.data.length;\n    this.paginatorBottom.pageSize = this.paginatorTop.pageSize;\n    this.paginatorBottom.pageIndex = this.paginatorTop.pageIndex;\n  }\n  onBottomPaginateChange(event){\n    if(event.previousPageIndex<event.pageIndex && event.pageIndex-event.previousPageIndex==1) {\n      this.paginatorTop.nextPage();\n    }\n    if(event.previousPageIndex>event.pageIndex && event.pageIndex-event.previousPageIndex==-1) {\n      this.paginatorTop.previousPage();\n    }\n    if(event.previousPageIndex<event.pageIndex && event.pageIndex-event.previousPageIndex>1) {\n      this.paginatorTop.lastPage();\n    }\n    if(event.previousPageIndex>event.pageIndex && event.previousPageIndex-event.pageIndex>1) {\n      this.paginatorTop.firstPage();\n    }\n    this.paginatorTop._changePageSize(this.paginatorBottom.pageSize);\n\n  }\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  editShipment(element) {\n    const dialogRef = this.dialog.open(EditOutgoingShipmentComponent, {\n      width: '600px',\n      data: element\n    });\n    console.log(element);\n\n    dialogRef.afterClosed().subscribe(result => {\n\n      console.log(result);\n      if (result) {\n        this.progress = true;\n        this.shipmentService.editShipment(result).subscribe(result => {\n          this.getShipments();\n        }, error => {\n          console.log(error);\n          this.progress = false;\n        })\n      }\n    });\n  }\n\n  deleteShipment(element) {\n    const data = this.shipments[this.shipments.indexOf(element)];\n    const dialogRef = this.dialog.open(DeleteConfirmationDialogComponent, {\n      width: '600px',\n      data: data.shipmentNo\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.progress = true;\n        this.shipmentService.deleteShipment(data.outgoingShipmentId).subscribe(result => {\n          this.getShipments();\n        }, error => {\n          this.progress = true;\n          console.log(error);\n        })\n      }\n    });\n\n  }\n  openDialog(): void {\n    const dialogRef = this.dialog.open(AddOutgoingShipmentComponent, {\n      width: '600px',\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n\n      console.log(result);\n      if (result) {\n        this.progress = true;\n        this.shipmentService.addShipment(result).subscribe(result => {\n          this.getShipments();\n        }, error => {\n          console.log(error);\n          this.progress = false;\n        })\n      }\n    });\n  }\n\n}\n","<mat-tab-group>\n    <mat-tab i18n-label=\"@@incoming\" label=\"Incoming\">\n        <ng-template matTabContent>\n            <app-incoming-shipments></app-incoming-shipments>\n        </ng-template>\n    </mat-tab>\n    <mat-tab i18n-label=\"@@outgoing\" label=\"Outgoing\">\n        <ng-template matTabContent>\n            <app-outgoing-shipments></app-outgoing-shipments>\n        </ng-template>\n    </mat-tab>\n</mat-tab-group>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-shipments',\n  templateUrl: './shipments.component.html',\n  styleUrls: ['./shipments.component.scss']\n})\nexport class ShipmentsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Customer } from '../models/Customer';\nimport { environment } from 'src/environments/environment';\n\n@Injectable()\nexport class CustomerService {\n\n    private customerUrl = environment.APIURL + \"/customer/\";\n    constructor(private http: HttpClient) {\n\n    }\n\n    getCustomers() {\n        return this.http.get<Customer[]>(this.customerUrl);\n    }\n\n    addCustomer(customer: Customer) {\n        return this.http.post<Customer>(this.customerUrl, customer);\n    }\n\n    editCustomer(customer: Customer) {\n        return this.http.put<Customer>(this.customerUrl + customer.customerId, customer);\n    }\n\n    deleteCustomer(id: number) {\n        return this.http.delete<Customer>(this.customerUrl+id);\n    }\n\n}","import { UtilService } from './UtilService';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { Workbook } from 'exceljs';\nimport * as fs from 'file-saver';\nimport { DatePipe } from '@angular/common';\nimport { Product } from '../models/Product';\n\n@Injectable({\n    providedIn: 'root'\n  })\nexport class ExcelServices {\n\n    constructor(private datePipe: DatePipe, private util:UtilService) {\n\n    }\n    async generateExcel(data: Product[]) {\n\n\n        // const ExcelJS = await import('exceljs');\n        // console.log(ExcelJS);\n        // const Workbook: any = {};\n\n        // Excel Title, Header, Data\n        const title = 'MBEL FORKERS 生産販売管理システム';\n        const subTitle = '製品 / Products';\n        // const header = [ 'OBIC番号 / OBIC No','製品名 / Product Name','製品名 / Description','単価 / Price','現在庫 / Current Stock', 'MOQ'];\n        const header = [ 'OBIC番号','製品名','製品内容','単価','現在庫','リードタイム (w)', 'MOQ'];\n\n\n        // Create workbook and worksheet\n        const workbook = new Workbook();\n        const worksheet = workbook.addWorksheet('製品');\n\n\n        // Add Row and formatting\n        const titleRow = worksheet.addRow([title]);\n        titleRow.font = { name: 'Comic Sans MS', family: 4, size: 16, underline: 'double', bold: true };\n        worksheet.addRow([]);\n        worksheet.getCell('A1').fill = {\n            type: 'pattern',\n            pattern: 'solid',\n            fgColor: { argb: 'FF5E92F3' },\n            bgColor: { argb: 'FF5E92F3', }\n        };\n        const subTitleRow = worksheet.addRow([subTitle]);\n        const dateRow = worksheet.addRow(['Date : ' + this.datePipe.transform(new Date(), 'medium')]);\n        worksheet.mergeCells('A1:D2');\n        worksheet.mergeCells('A3:C3');\n        worksheet.mergeCells('A4:C4');\n\n        // Blank Row()\n        worksheet.addRow([]);\n\n        // Add Header Row\n        const headerRow = worksheet.addRow(header);\n\n        // Cell Style : Fill and Border\n        headerRow.eachCell((cell, number) => {\n            cell.fill = {\n                type: 'pattern',\n                pattern: 'solid',\n                fgColor: { argb: 'FF1565C0' },\n                bgColor: { argb: 'FF1565C0', }\n            };\n            cell.border = { top: { style: 'thin' }, left: { style: 'thin' }, bottom: { style: 'thin' }, right: { style: 'thin' } };\n            cell.font = { color : { argb: 'ffffff'}};\n        });\n        // worksheet.addRows(data);\n\n\n        // Add Data and Conditional Formatting\n        data.forEach(d => {\n            const row = worksheet.addRow([\n                d.obicNo,\n                d.productName,\n                d.description,\n                (this.util.getCurrencySign(d.currency)+''+d.price),\n                d.quantity,\n                d.leadTime,\n                d.moq\n            ]);\n            // const qty = row.getCell(5);\n            // let color = 'FF99FF99';\n            // if (+qty.value < 500) {\n            //     color = 'FF9999';\n            // }\n\n            // qty.fill = {\n            //     type: 'pattern',\n            //     pattern: 'solid',\n            //     fgColor: { argb: color }\n            // };\n        }\n\n        );\n        worksheet.getColumn(1).width = 15;\n        worksheet.getColumn(2).width = 30;\n        worksheet.getColumn(3).width = 30;\n        worksheet.getColumn(4).width = 15;\n        worksheet.addRow([]);\n\n\n        // // Footer Row\n        // const footerRow = worksheet.addRow(['This is system generated excel sheet.']);\n        // footerRow.getCell(1).fill = {\n        //     type: 'pattern',\n        //     pattern: 'solid',\n        //     fgColor: { argb: 'FFCCFFE5' }\n        // };\n        // footerRow.getCell(1).border = { top: { style: 'thin' }, left: { style: 'thin' }, bottom: { style: 'thin' }, right: { style: 'thin' } };\n\n        // // Merge Cells\n        // worksheet.mergeCells(`A${footerRow.number}:F${footerRow.number}`);\n\n        // Generate Excel File with given name\n        workbook.xlsx.writeBuffer().then((data: any) => {\n            const date = new Date();\n            const fileName = '製品 '+this.datePipe.transform(new Date(), 'yyyyMMddHHmm')+'.xlsx';\n            const blob = new Blob([data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n            fs.saveAs(blob,fileName );\n        });\n\n    }\n}\n\n\n","import { Order } from './../models/Order';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable()\nexport class ForecastService {\n\n    private forecastUrl = environment.APIURL + \"/order/forecast/\";\n    private forecastProductUrl = environment.APIURL + \"/product/forecast/\";\n    // private forecastUrl =\"assets/data/foreccast.json\";\n    constructor(private http: HttpClient) {\n\n    }\n    getForecast() {\n        return this.http.get<Order[]>(this.forecastUrl);\n    }\n    getProductForecast() {\n        return this.http.get<any[]>(this.forecastProductUrl);\n    }\n\n}","import { SaveIncomingShipment } from './../models/SaveIncomingShipment';\nimport { IncomingShipment } from './../models/IncomingShipment';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable()\nexport class IncomingShipmentService {\n  \n\n\n    private incomingShipmentUrl = environment.APIURL + \"/shipment/incoming/\";\n    constructor(private http: HttpClient){\n        \n    }\n\n    getShipments() {\n        return this.http.get<IncomingShipment[]>(this.incomingShipmentUrl);\n    }\n\n    addShipment(shipment:SaveIncomingShipment){\n        return this.http.post<SaveIncomingShipment>(this.incomingShipmentUrl,shipment);\n    }\n    editShipment(shipment:SaveIncomingShipment){\n        return this.http.put<SaveIncomingShipment>(this.incomingShipmentUrl+shipment.incomingShipmentId,shipment);\n    }\n    deleteShipment(incomingShipmentId: number) {\n        return this.http.delete<any>(this.incomingShipmentUrl+incomingShipmentId);\n      }\n    arrivalOrder(incomingShipmentId: number) {\n        const data : ArrivalShipment = {\n            incomingShipmentId: incomingShipmentId,\n            arrival: true\n        }\n        return this.http.post<ArrivalShipment>(this.incomingShipmentUrl+\"arrival/\",data);\n    }\n}\n\nexport class ArrivalShipment {\n    incomingShipmentId: number;\n    arrival: true;\n}","import { SaveOrder } from './../models/SaveOrder';\nimport { Order } from './../models/Order';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable()\nexport class OrderService {\n\n    private getOrdersUrl = environment.APIURL + \"/order/\"\n    constructor(private http: HttpClient) {\n\n    }\n\n    getOrders() {\n        return this.http.get<Order[]>(this.getOrdersUrl);\n    }\n\n    addOrder(order: SaveOrder) {\n        return this.http.post<SaveOrder>(this.getOrdersUrl, order);\n    }\n\n    deleteOrder(id: number) {\n        return this.http.delete<any>(this.getOrdersUrl + id);\n    }\n\n    editOrder(order: SaveOrder) {\n        console.log(this.getOrdersUrl + order.orderId);\n        console.log(order);\n        return this.http.put<SaveOrder>(this.getOrdersUrl + order.orderId, order);\n    }\n\n    fulfillOrder(id: number) {\n        const fmodel: FulfillOrderModel = {\n            orderId: id,\n            fulfillment: true,\n        }\n        return this.http.post<FulfillOrderModel>(this.getOrdersUrl + \"fulfillment/\", fmodel);\n    }\n\n    unFulfillOrder(orderId: number) {\n        const fmodel: FulfillOrderModel = {\n            orderId: orderId,\n            fulfillment: false,\n        }\n        return this.http.post<FulfillOrderModel>(this.getOrdersUrl + \"fulfillment/\", fmodel);\n    }\n}\n\nexport class FulfillOrderModel {\n    orderId: number;\n    fulfillment: boolean;\n}","import { SaveOutgoingShipment } from './../models/SaveOutgoingShipment';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { OutgoingShipment } from '../models/OutgoingShipment';\n\n@Injectable()\nexport class OutgoingShipmentService {\n\n\n    private outgoingShipmentUrl = environment.APIURL + \"/shipment/outgoing/\";\n    // private outgoingShipmentUrl = \"/assets/data/outgoingShipments.json\"\n    constructor(private http: HttpClient){\n        \n    }\n\n    getShipments() {\n        return this.http.get<OutgoingShipment[]>(this.outgoingShipmentUrl);\n    }\n\n    addShipment(shipment:SaveOutgoingShipment){\n        return this.http.post<SaveOutgoingShipment>(this.outgoingShipmentUrl,shipment);\n    }\n    editShipment(shipment:SaveOutgoingShipment){\n        return this.http.put<SaveOutgoingShipment>(this.outgoingShipmentUrl+shipment.outgoingShipmentId,shipment);\n    }\n    deleteShipment(incomingShipmentId: number) {\n        return this.http.delete<any>(this.outgoingShipmentUrl+incomingShipmentId);\n      }\n}","import { Order } from './../models/Order';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable()\nexport class ProductForecastService {\n\n    private forecastProductUrl = environment.APIURL + \"/product/forecast/\";\n    constructor(private http: HttpClient) {\n\n    }\n    getProductForecast() {\n        return this.http.get<any[]>(this.forecastProductUrl);\n    }\n\n}","import { SaveProductSet } from './../models/saveProductSet';\nimport { environment } from './../../environments/environment';\nimport { ProductSet } from './../models/ProductSet';\nimport { Product } from './../models/Product';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Injectable()\nexport class ProductService {\n\n    private productUrl = environment.APIURL + \"/product/\";\n    private productSetUrl = environment.APIURL + \"/productset/\";\n    constructor(private http: HttpClient) {\n\n    }\n\n    getProducts() {\n        return this.http.get<Product[]>(this.productUrl);\n    }\n\n    getProductSets() {\n        return this.http.get<ProductSet[]>(this.productSetUrl);\n    }\n\n    saveProduct(product: Product) {\n        return this.http.post<Product>(this.productUrl, product);\n    }\n\n    updateProduct(product: Product) {\n        return this.http.put<Product>(this.productUrl + product.productId, product);\n    }\n\n    deleteProduct(id: number) {\n        return this.http.delete<Product>(this.productUrl + id);\n    }\n\n    addProductSet(saveProductSet: SaveProductSet) {\n        return this.http.post<SaveProductSet>(this.productSetUrl, saveProductSet);\n    }\n\n    deleteProductSet(id: number) {\n        return this.http.delete<SaveProductSet>(this.productSetUrl + id);\n    }\n\n    editProductSet(productSet: SaveProductSet) {\n        return this.http.put<SaveProductSet>(this.productSetUrl + productSet.productId, productSet);\n    }\n\n\n}","import { User } from './../models/User';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable()\nexport class UserService {\n\n    private userUrl = environment.APIURL + \"/user/\";\n    constructor(private http: HttpClient) {\n\n    }\n    register(user: User) {\n        return this.http.post<any>(this.userUrl + \"register/\", user);\n    }\n\n    getUsers() {\n        return this.http.get<User[]>(this.userUrl);\n    }\n\n    updatePassword(password: any) {\n        return this.http.post<any>(this.userUrl + \"password/\", password);\n    }\n}","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class UtilService {\n\n    constructor() {\n\n    }\n\n    getCurrencySign(currency: string): string {\n        switch (currency) {\n            case \"JPY\":\n                return \"¥\";\n                break;\n            case \"USD\":\n                return \"$\";\n                break;            \n            default:\n                return \"¥\";\n                break;\n        }\n    }\n\n    hankana2Zenkana(str) {\n        var kanaMap = {\n            'ｶﾞ': 'ガ', 'ｷﾞ': 'ギ', 'ｸﾞ': 'グ', 'ｹﾞ': 'ゲ', 'ｺﾞ': 'ゴ',\n            'ｻﾞ': 'ザ', 'ｼﾞ': 'ジ', 'ｽﾞ': 'ズ', 'ｾﾞ': 'ゼ', 'ｿﾞ': 'ゾ',\n            'ﾀﾞ': 'ダ', 'ﾁﾞ': 'ヂ', 'ﾂﾞ': 'ヅ', 'ﾃﾞ': 'デ', 'ﾄﾞ': 'ド',\n            'ﾊﾞ': 'バ', 'ﾋﾞ': 'ビ', 'ﾌﾞ': 'ブ', 'ﾍﾞ': 'ベ', 'ﾎﾞ': 'ボ',\n            'ﾊﾟ': 'パ', 'ﾋﾟ': 'ピ', 'ﾌﾟ': 'プ', 'ﾍﾟ': 'ペ', 'ﾎﾟ': 'ポ',\n            'ｳﾞ': 'ヴ', 'ﾜﾞ': 'ヷ', 'ｦﾞ': 'ヺ',\n            'ｱ': 'ア', 'ｲ': 'イ', 'ｳ': 'ウ', 'ｴ': 'エ', 'ｵ': 'オ',\n            'ｶ': 'カ', 'ｷ': 'キ', 'ｸ': 'ク', 'ｹ': 'ケ', 'ｺ': 'コ',\n            'ｻ': 'サ', 'ｼ': 'シ', 'ｽ': 'ス', 'ｾ': 'セ', 'ｿ': 'ソ',\n            'ﾀ': 'タ', 'ﾁ': 'チ', 'ﾂ': 'ツ', 'ﾃ': 'テ', 'ﾄ': 'ト',\n            'ﾅ': 'ナ', 'ﾆ': 'ニ', 'ﾇ': 'ヌ', 'ﾈ': 'ネ', 'ﾉ': 'ノ',\n            'ﾊ': 'ハ', 'ﾋ': 'ヒ', 'ﾌ': 'フ', 'ﾍ': 'ヘ', 'ﾎ': 'ホ',\n            'ﾏ': 'マ', 'ﾐ': 'ミ', 'ﾑ': 'ム', 'ﾒ': 'メ', 'ﾓ': 'モ',\n            'ﾔ': 'ヤ', 'ﾕ': 'ユ', 'ﾖ': 'ヨ',\n            'ﾗ': 'ラ', 'ﾘ': 'リ', 'ﾙ': 'ル', 'ﾚ': 'レ', 'ﾛ': 'ロ',\n            'ﾜ': 'ワ', 'ｦ': 'ヲ', 'ﾝ': 'ン',\n            'ｧ': 'ァ', 'ｨ': 'ィ', 'ｩ': 'ゥ', 'ｪ': 'ェ', 'ｫ': 'ォ',\n            'ｯ': 'ッ', 'ｬ': 'ャ', 'ｭ': 'ュ', 'ｮ': 'ョ',\n            '｡': '.','。':'.', '､':',', '、':',', 'ｰ':'ー','−':'-','－':'-', '｢':'(', '「':'(', '｣':')', '」':')', '･':'/', '・':'/',\n            // 'ａ':'a','ｂ':'b','ｃ':'c','ｄ':'d','ｅ':'e','ｆ':'f','ｇ':'g','ｈ':'h',\n            // 'ｉ':'i','ｊ':'j','ｋ':'k','ｌ':'l','ｍ':'m','ｎ':'n','ｏ':'o','ｐ':'p',\n            // 'ｑ':'q','ｒ':'r','ｓ':'s','ｔ':'t','ｕ':'u','ｖ':'v','ｗ':'w','ｘ':'x',\n            // 'ｙ':'y','ｚ':'z'\n        };\n    \n        var reg = new RegExp('(' + Object.keys(kanaMap).join('|') + ')', 'g');\n        return str\n                .replace(reg, function (match) {\n                    return kanaMap[match];\n                })\n                .replace(/ﾞ/g, '゛')\n                .replace(/ﾟ/g, '゜');\n    };\n    hankaku2ZenkakuEN(str) {\n        return str.replace(/[Ａ-Ｚａ-ｚ０-９]/g, function(s) {\n            return String.fromCharCode(s.charCodeAt(0) - 0xFEE0);\n        });\n    }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  APIURL : \"http://13.113.194.21:4000/mbel\",\n  APPNAME : \"MBEL FORKERS 生産販売管理システム - staging\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":"webpack:///"}